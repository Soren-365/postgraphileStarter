"""All input for the `acceptInvitationToOrganization` mutation."""
input AcceptInvitationToOrganizationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  code: String
  invitationId: UUID!
}

"""The output of our `acceptInvitationToOrganization` mutation."""
type AcceptInvitationToOrganizationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

type Accomodationresource implements Node {
  accomodationName: String

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  address: Contact
  addressId: Int!

  """Reads and enables pagination through a set of `Agencyaccomodation`."""
  agencyaccomodationsByAccomodationId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyaccomodationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyaccomodationsConnection!

  """
  Reads a single `Agency` that is related to this `Accomodationresource`.
  """
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Assocaccomodation`."""
  assocaccomodationsByAccomodationId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocaccomodationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocaccomodationsConnection!
  atAgency: Int
  atGuide: Int

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  contact: Contact
  contactId: Int!

  """
  Reads a single `Usertable` that is related to this `Accomodationresource`.
  """
  createdBy: Usertable
  createdById: Int!

  """Reads a single `Guide` that is related to this `Accomodationresource`."""
  guideByAtGuide: Guide

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByAtAccomodation(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection!
  id: Int!
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  locatedIn: Area

  """
  Reads a single `Bookingcalendar` that is related to this `Accomodationresource`.
  """
  locationCalendar: Bookingcalendar
  locationCalendarId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  ownedByAt: Boolean

  """
  Reads a single `Presentation` that is related to this `Accomodationresource`.
  """
  presentation: Presentation
  presentationId: Int!

  """
  Reads a single `Publisher` that is related to this `Accomodationresource`.
  """
  publisher: Publisher
  publisherId: Int!

  """Reads and enables pagination through a set of `Roomlist`."""
  roomlistsByAtAccomodation(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomlistCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomlistsConnection!
  timeCreated: Datetime

  """
  Reads a single `Triptype` that is related to this `Accomodationresource`.
  """
  triptypeByAtAgencyAndTripTypeName: Triptype
  tripTypeName: String
}

"""
A condition to be used against `Accomodationresource` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input AccomodationresourceCondition {
  """Checks for equality with the object’s `addressId` field."""
  addressId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `locationCalendarId` field."""
  locationCalendarId: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Accomodationresource`"""
input AccomodationresourceInput {
  accomodationName: String
  addressId: Int!
  atAgency: Int
  atGuide: Int
  contactId: Int!
  createdById: Int!
  id: Int
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  locatedIn: Area
  locationCalendarId: Int!
  ownedByAt: Boolean
  presentationId: Int!
  publisherId: Int!
  timeCreated: Datetime
  tripTypeName: String
}

"""
Represents an update to a `Accomodationresource`. Fields that are set will be updated.
"""
input AccomodationresourcePatch {
  accomodationName: String
  addressId: Int
  atAgency: Int
  atGuide: Int
  contactId: Int
  createdById: Int
  id: Int
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  locatedIn: Area
  locationCalendarId: Int
  ownedByAt: Boolean
  presentationId: Int
  publisherId: Int
  timeCreated: Datetime
  tripTypeName: String
}

"""A connection to a list of `Accomodationresource` values."""
type AccomodationresourcesConnection {
  """
  A list of edges which contains the `Accomodationresource` and cursor to aid in pagination.
  """
  edges: [AccomodationresourcesEdge!]!

  """A list of `Accomodationresource` objects."""
  nodes: [Accomodationresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Accomodationresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Accomodationresource` edge in the connection."""
type AccomodationresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Accomodationresource` at the end of the edge."""
  node: Accomodationresource!
}

"""Methods to use when ordering `Accomodationresource`."""
enum AccomodationresourcesOrderBy {
  ADDRESS_ID_ASC
  ADDRESS_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  LOCATION_CALENDAR_ID_ASC
  LOCATION_CALENDAR_ID_DESC
  NATURAL
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

type Account implements Node {
  emailHash: String
  id: Int!
  logins: Int

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  passwordHash: String
  sessionId: String

  """Reads a single `Usertable` that is related to this `Account`."""
  usertableById: Usertable

  """Reads and enables pagination through a set of `Usertable`."""
  usertablesById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsertableCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesConnection! @deprecated(reason: "Please use usertableById instead")
}

"""
A condition to be used against `Account` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input AccountCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

type Accounting implements Node {
  abonamentActive: Boolean!
  abonamentExpires: Date
  freePeriodExpires: Date
  id: Int!
  isActive: Boolean
  isRomanian: Boolean
  lastPayment: Date
  lastPaymentAmount: String

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  onFreePeriod: Boolean!
  onYearlyPayment: Boolean!
  paymentHistory: [String]

  """Reads a single `Publisher` that is related to this `Accounting`."""
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime
}

"""
A condition to be used against `Accounting` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AccountingCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Accounting`"""
input AccountingInput {
  abonamentActive: Boolean!
  abonamentExpires: Date
  freePeriodExpires: Date
  id: Int
  isActive: Boolean
  isRomanian: Boolean
  lastPayment: Date
  lastPaymentAmount: String
  onFreePeriod: Boolean!
  onYearlyPayment: Boolean!
  paymentHistory: [String]
  publisherId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Accounting`. Fields that are set will be updated.
"""
input AccountingPatch {
  abonamentActive: Boolean
  abonamentExpires: Date
  freePeriodExpires: Date
  id: Int
  isActive: Boolean
  isRomanian: Boolean
  lastPayment: Date
  lastPaymentAmount: String
  onFreePeriod: Boolean
  onYearlyPayment: Boolean
  paymentHistory: [String]
  publisherId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Accounting` values."""
type AccountingsConnection {
  """
  A list of edges which contains the `Accounting` and cursor to aid in pagination.
  """
  edges: [AccountingsEdge!]!

  """A list of `Accounting` objects."""
  nodes: [Accounting!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Accounting` you could get from the connection."""
  totalCount: Int!
}

"""A `Accounting` edge in the connection."""
type AccountingsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Accounting` at the end of the edge."""
  node: Accounting!
}

"""Methods to use when ordering `Accounting`."""
enum AccountingsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

"""An input for mutations affecting `Account`"""
input AccountInput {
  emailHash: String
  id: Int
  logins: Int
  passwordHash: String
  sessionId: String
}

"""
Represents an update to a `Account`. Fields that are set will be updated.
"""
input AccountPatch {
  emailHash: String
  id: Int
  logins: Int
  passwordHash: String
  sessionId: String
}

"""A connection to a list of `Account` values."""
type AccountsConnection {
  """
  A list of edges which contains the `Account` and cursor to aid in pagination.
  """
  edges: [AccountsEdge!]!

  """A list of `Account` objects."""
  nodes: [Account!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Account` you could get from the connection."""
  totalCount: Int!
}

"""A `Account` edge in the connection."""
type AccountsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Account` at the end of the edge."""
  node: Account!
}

"""Methods to use when ordering `Account`."""
enum AccountsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""A connection to a list of `Agency` values."""
type AgenciesConnection {
  """
  A list of edges which contains the `Agency` and cursor to aid in pagination.
  """
  edges: [AgenciesEdge!]!

  """A list of `Agency` objects."""
  nodes: [Agency!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agency` you could get from the connection."""
  totalCount: Int!
}

"""A `Agency` edge in the connection."""
type AgenciesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agency` at the end of the edge."""
  node: Agency!
}

"""Methods to use when ordering `Agency`."""
enum AgenciesOrderBy {
  AGENCY_BID_ID_ASC
  AGENCY_BID_ID_DESC
  AGENCY_DEAL_ID_ASC
  AGENCY_DEAL_ID_DESC
  AGENCY_FAVORITE_ID_ASC
  AGENCY_FAVORITE_ID_DESC
  AGENCY_MEDIA_LIBRARY_ID_ASC
  AGENCY_MEDIA_LIBRARY_ID_DESC
  AGENCY_OFFER_ID_ASC
  AGENCY_OFFER_ID_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

type Agency implements Node {
  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection!
  activeInsurance: Boolean!

  """Reads and enables pagination through a set of `Agencyaccomodation`."""
  agencyaccomodations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyaccomodationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyaccomodationsConnection!
  agencyBidId: Int

  """Reads and enables pagination through a set of `Agencybid`."""
  agencybids(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencybidCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencybidsConnection!

  """Reads a single `Agencydeal` that is related to this `Agency`."""
  agencyDeal: Agencydeal
  agencyDealId: Int

  """Reads and enables pagination through a set of `Agencyevent`."""
  agencyevents(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyeventCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyeventsConnection!
  agencyFavoriteId: Int

  """Reads and enables pagination through a set of `Agencyfavorite`."""
  agencyfavoritesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyfavoriteCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyfavorite`."""
    orderBy: [AgencyfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyfavoritesConnection!

  """Reads and enables pagination through a set of `Agencyguide`."""
  agencyguides(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyguideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyguidesConnection!

  """Reads and enables pagination through a set of `Agencyhost`."""
  agencyhosts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyhostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyhostsConnection!

  """Reads and enables pagination through a set of `Agencymedialibrary`."""
  agencymedialibrariesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencymedialibraryCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]
  ): AgencymedialibrariesConnection!

  """Reads a single `Agencymedialibrary` that is related to this `Agency`."""
  agencyMediaLibrary: Agencymedialibrary
  agencyMediaLibraryId: Int

  """Reads a single `Agencyoffer` that is related to this `Agency`."""
  agencyOffer: Agencyoffer
  agencyOfferId: Int
  agencyReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]

  """Reads and enables pagination through a set of `Agencyreview`."""
  agencyreviewsByAgencyIdTarget(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyreviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsConnection!

  """Reads and enables pagination through a set of `Agencytourist`."""
  agencytourists(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytouristsConnection!

  """Reads and enables pagination through a set of `Agencytransport`."""
  agencytransports(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytransportCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytransportsConnection!

  """Reads and enables pagination through a set of `Agencytravelgroup`."""
  agencytravelgroups(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytravelgroupCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytravelgroupsConnection!

  """Reads and enables pagination through a set of `Agencytripoffer`."""
  agencytripoffers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytripofferCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytripoffersConnection!

  """Reads and enables pagination through a set of `Agencyuser`."""
  agencyusers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyuserCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyusersConnection!

  """Reads and enables pagination through a set of `Assocaccomodation`."""
  assocaccomodationsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocaccomodationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocaccomodationsConnection!

  """Reads and enables pagination through a set of `Assocdestination`."""
  assocdestinationsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocdestinationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocdestinationsConnection!

  """Reads and enables pagination through a set of `Assocevent`."""
  assoceventsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoceventCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoceventsConnection!

  """Reads and enables pagination through a set of `Assocguide`."""
  assocguidesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocguideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocguidesConnection!

  """Reads and enables pagination through a set of `Assochost`."""
  assochostsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssochostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssochostsConnection!

  """Reads and enables pagination through a set of `Assoctransport`."""
  assoctransportsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctransportCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctransportsConnection!

  """Reads and enables pagination through a set of `Assoctravelgroup`."""
  assoctravelgroupsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctravelgroupCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctravelgroupsConnection!

  """Reads a single `Bookingcalendar` that is related to this `Agency`."""
  bookingCalendar: Bookingcalendar
  bookingCalendarId: Int

  """Reads a single `Contact` that is related to this `Agency`."""
  contact: Contact
  contactId: Int

  """Reads a single `Usertable` that is related to this `Agency`."""
  createdBy: Usertable
  createdById: Int!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection!
  extendedNetworkIdPool: [Int]

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesConnection!
  guideReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]

  """Reads and enables pagination through a set of `Guide`."""
  guidesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection!
  id: Int!
  insuranceExpery: Date
  insuranceUrl: String
  isActive: Boolean
  isPublic: Boolean
  isRomanian: Boolean!
  lastModified: Datetime

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """Reads and enables pagination through a set of `Medialocation`."""
  medialocationsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MedialocationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MedialocationsConnection!
  name: String!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Agency`."""
  publisher: Publisher
  publisherId: Int

  """
  Reads and enables pagination through a set of `Similarbytriptypeaccomodation`.
  """
  similarbytriptypeaccomodationsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeaccomodationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeaccomodationsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypedestination`.
  """
  similarbytriptypedestinationsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypedestinationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypedestinationsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypeevent`.
  """
  similarbytriptypeeventsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeeventCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeeventsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypeguide`.
  """
  similarbytriptypeguidesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeguideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeguidesConnection!

  """Reads and enables pagination through a set of `Similarbytriptypehost`."""
  similarbytriptypehostsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypehostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypehostsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypetransport`.
  """
  similarbytriptypetransportsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypetransportCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetransportsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypetravelgroup`.
  """
  similarbytriptypetravelgroupsByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypetravelgroupCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetravelgroupsConnection!
  specializedAgency: Resourcetype
  timeCreated: Datetime

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesConnection!
  touristReviewInIdPool: [Int]
  touristReviewOutIdPool: [Int]

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesConnection!

  """Reads and enables pagination through a set of `Triptype`."""
  triptypesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TriptypeCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TriptypesConnection!
  trustedPartnerIdPool: [Int]

  """Reads and enables pagination through a set of `Usertable`."""
  usertablesByAtAgency(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsertableCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesConnection!
}

type Agencyaccomodation implements Node {
  """
  Reads a single `Accomodationresource` that is related to this `Agencyaccomodation`.
  """
  accomodation: Accomodationresource
  accomodationId: Int!

  """Reads a single `Agency` that is related to this `Agencyaccomodation`."""
  agency: Agency

  """
  This is the Urls of the original image uploaded to Amazon app_public.agency
  bucket (needs also app_public.presentationPlacements!)
  """
  agencyBucketUrls: [String]
  agencyId: Int!
  lastModified: Datetime

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """
  This is the resource-specific placement names in the app_public.agency interface app_public.presentation
  """
  presentationPlacements: [String]
  timeCreated: Datetime

  """Upcoming Signed Url expery at amazon S3 bucket, (max value: now+7days)"""
  urlExperyAt: Datetime!
}

"""
A condition to be used against `Agencyaccomodation` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencyaccomodationCondition {
  """Checks for equality with the object’s `accomodationId` field."""
  accomodationId: Int

  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `lastModified` field."""
  lastModified: Datetime

  """Checks for equality with the object’s `urlExperyAt` field."""
  urlExperyAt: Datetime
}

"""An input for mutations affecting `Agencyaccomodation`"""
input AgencyaccomodationInput {
  accomodationId: Int!

  """
  This is the Urls of the original image uploaded to Amazon app_public.agency
  bucket (needs also app_public.presentationPlacements!)
  """
  agencyBucketUrls: [String]
  agencyId: Int!
  lastModified: Datetime

  """
  This is the resource-specific placement names in the app_public.agency interface app_public.presentation
  """
  presentationPlacements: [String]
  timeCreated: Datetime

  """Upcoming Signed Url expery at amazon S3 bucket, (max value: now+7days)"""
  urlExperyAt: Datetime!
}

"""
Represents an update to a `Agencyaccomodation`. Fields that are set will be updated.
"""
input AgencyaccomodationPatch {
  accomodationId: Int

  """
  This is the Urls of the original image uploaded to Amazon app_public.agency
  bucket (needs also app_public.presentationPlacements!)
  """
  agencyBucketUrls: [String]
  agencyId: Int
  lastModified: Datetime

  """
  This is the resource-specific placement names in the app_public.agency interface app_public.presentation
  """
  presentationPlacements: [String]
  timeCreated: Datetime

  """Upcoming Signed Url expery at amazon S3 bucket, (max value: now+7days)"""
  urlExperyAt: Datetime
}

"""A connection to a list of `Agencyaccomodation` values."""
type AgencyaccomodationsConnection {
  """
  A list of edges which contains the `Agencyaccomodation` and cursor to aid in pagination.
  """
  edges: [AgencyaccomodationsEdge!]!

  """A list of `Agencyaccomodation` objects."""
  nodes: [Agencyaccomodation!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencyaccomodation` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencyaccomodation` edge in the connection."""
type AgencyaccomodationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyaccomodation` at the end of the edge."""
  node: Agencyaccomodation!
}

"""Methods to use when ordering `Agencyaccomodation`."""
enum AgencyaccomodationsOrderBy {
  ACCOMODATION_ID_ASC
  ACCOMODATION_ID_DESC
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  LAST_MODIFIED_ASC
  LAST_MODIFIED_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  URL_EXPERY_AT_ASC
  URL_EXPERY_AT_DESC
}

type Agencybid implements Node {
  """Reads a single `Agency` that is related to this `Agencybid`."""
  agency: Agency
  agencyId: Int
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  touristResourceIdPool: [Int]
}

"""
A condition to be used against `Agencybid` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencybidCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Agencybid`"""
input AgencybidInput {
  agencyId: Int
  id: Int
  touristResourceIdPool: [Int]
}

"""
Represents an update to a `Agencybid`. Fields that are set will be updated.
"""
input AgencybidPatch {
  agencyId: Int
  id: Int
  touristResourceIdPool: [Int]
}

"""A connection to a list of `Agencybid` values."""
type AgencybidsConnection {
  """
  A list of edges which contains the `Agencybid` and cursor to aid in pagination.
  """
  edges: [AgencybidsEdge!]!

  """A list of `Agencybid` objects."""
  nodes: [Agencybid!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencybid` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencybid` edge in the connection."""
type AgencybidsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencybid` at the end of the edge."""
  node: Agencybid!
}

"""Methods to use when ordering `Agencybid`."""
enum AgencybidsOrderBy {
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Agency` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input AgencyCondition {
  """Checks for equality with the object’s `agencyBidId` field."""
  agencyBidId: Int

  """Checks for equality with the object’s `agencyDealId` field."""
  agencyDealId: Int

  """Checks for equality with the object’s `agencyFavoriteId` field."""
  agencyFavoriteId: Int

  """Checks for equality with the object’s `agencyMediaLibraryId` field."""
  agencyMediaLibraryId: Int

  """Checks for equality with the object’s `agencyOfferId` field."""
  agencyOfferId: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

type Agencydeal implements Node {
  accomodationResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Agency`."""
  agenciesByAgencyDealId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesConnection!
  eventResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  touristResouceIdPool: [Int]
  transportationResourceIdPool: [Int]
  tripOfferResourceIdPool: [Int]
}

"""
A condition to be used against `Agencydeal` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencydealCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Agencydeal`"""
input AgencydealInput {
  accomodationResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  touristResouceIdPool: [Int]
  transportationResourceIdPool: [Int]
  tripOfferResourceIdPool: [Int]
}

"""
Represents an update to a `Agencydeal`. Fields that are set will be updated.
"""
input AgencydealPatch {
  accomodationResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  touristResouceIdPool: [Int]
  transportationResourceIdPool: [Int]
  tripOfferResourceIdPool: [Int]
}

"""A connection to a list of `Agencydeal` values."""
type AgencydealsConnection {
  """
  A list of edges which contains the `Agencydeal` and cursor to aid in pagination.
  """
  edges: [AgencydealsEdge!]!

  """A list of `Agencydeal` objects."""
  nodes: [Agencydeal!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencydeal` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencydeal` edge in the connection."""
type AgencydealsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencydeal` at the end of the edge."""
  node: Agencydeal!
}

"""Methods to use when ordering `Agencydeal`."""
enum AgencydealsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencyevent implements Node {
  """Reads a single `Agency` that is related to this `Agencyevent`."""
  agency: Agency
  agencyId: Int!

  """Reads a single `Eventresource` that is related to this `Agencyevent`."""
  event: Eventresource
  eventId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
}

"""
A condition to be used against `Agencyevent` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyeventCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `eventId` field."""
  eventId: Int
}

"""An input for mutations affecting `Agencyevent`"""
input AgencyeventInput {
  agencyId: Int!
  eventId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyevent`. Fields that are set will be updated.
"""
input AgencyeventPatch {
  agencyId: Int
  eventId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencyevent` values."""
type AgencyeventsConnection {
  """
  A list of edges which contains the `Agencyevent` and cursor to aid in pagination.
  """
  edges: [AgencyeventsEdge!]!

  """A list of `Agencyevent` objects."""
  nodes: [Agencyevent!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyevent` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyevent` edge in the connection."""
type AgencyeventsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyevent` at the end of the edge."""
  node: Agencyevent!
}

"""Methods to use when ordering `Agencyevent`."""
enum AgencyeventsOrderBy {
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  EVENT_ID_ASC
  EVENT_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencyfavorite implements Node {
  """Reads a single `Agency` that is related to this `Agencyfavorite`."""
  agencyByAtAgency: Agency
  atAgency: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  resourceId: Int!
  resourceType: Resourcetype!
}

"""
A condition to be used against `Agencyfavorite` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencyfavoriteCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `resourceId` field."""
  resourceId: Int

  """Checks for equality with the object’s `resourceType` field."""
  resourceType: Resourcetype
}

"""An input for mutations affecting `Agencyfavorite`"""
input AgencyfavoriteInput {
  atAgency: Int!
  resourceId: Int!
  resourceType: Resourcetype!
}

"""
Represents an update to a `Agencyfavorite`. Fields that are set will be updated.
"""
input AgencyfavoritePatch {
  atAgency: Int
  resourceId: Int
  resourceType: Resourcetype
}

"""A connection to a list of `Agencyfavorite` values."""
type AgencyfavoritesConnection {
  """
  A list of edges which contains the `Agencyfavorite` and cursor to aid in pagination.
  """
  edges: [AgencyfavoritesEdge!]!

  """A list of `Agencyfavorite` objects."""
  nodes: [Agencyfavorite!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyfavorite` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyfavorite` edge in the connection."""
type AgencyfavoritesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyfavorite` at the end of the edge."""
  node: Agencyfavorite!
}

"""Methods to use when ordering `Agencyfavorite`."""
enum AgencyfavoritesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  RESOURCE_ID_ASC
  RESOURCE_ID_DESC
  RESOURCE_TYPE_ASC
  RESOURCE_TYPE_DESC
}

type Agencyguide implements Node {
  """Reads a single `Agency` that is related to this `Agencyguide`."""
  agency: Agency
  agencyId: Int!

  """Reads a single `Guide` that is related to this `Agencyguide`."""
  guide: Guide
  guideId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
}

"""
A condition to be used against `Agencyguide` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyguideCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `guideId` field."""
  guideId: Int
}

"""An input for mutations affecting `Agencyguide`"""
input AgencyguideInput {
  agencyId: Int!
  guideId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyguide`. Fields that are set will be updated.
"""
input AgencyguidePatch {
  agencyId: Int
  guideId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencyguide` values."""
type AgencyguidesConnection {
  """
  A list of edges which contains the `Agencyguide` and cursor to aid in pagination.
  """
  edges: [AgencyguidesEdge!]!

  """A list of `Agencyguide` objects."""
  nodes: [Agencyguide!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyguide` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyguide` edge in the connection."""
type AgencyguidesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyguide` at the end of the edge."""
  node: Agencyguide!
}

"""Methods to use when ordering `Agencyguide`."""
enum AgencyguidesOrderBy {
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  GUIDE_ID_ASC
  GUIDE_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencyhost implements Node {
  """Reads a single `Agency` that is related to this `Agencyhost`."""
  agency: Agency
  agencyId: Int!

  """Reads a single `Hostresource` that is related to this `Agencyhost`."""
  host: Hostresource
  hostId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
}

"""
A condition to be used against `Agencyhost` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyhostCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `hostId` field."""
  hostId: Int
}

"""An input for mutations affecting `Agencyhost`"""
input AgencyhostInput {
  agencyId: Int!
  hostId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyhost`. Fields that are set will be updated.
"""
input AgencyhostPatch {
  agencyId: Int
  hostId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencyhost` values."""
type AgencyhostsConnection {
  """
  A list of edges which contains the `Agencyhost` and cursor to aid in pagination.
  """
  edges: [AgencyhostsEdge!]!

  """A list of `Agencyhost` objects."""
  nodes: [Agencyhost!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyhost` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyhost` edge in the connection."""
type AgencyhostsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyhost` at the end of the edge."""
  node: Agencyhost!
}

"""Methods to use when ordering `Agencyhost`."""
enum AgencyhostsOrderBy {
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  HOST_ID_ASC
  HOST_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""An input for mutations affecting `Agency`"""
input AgencyInput {
  activeInsurance: Boolean!
  agencyBidId: Int
  agencyDealId: Int
  agencyFavoriteId: Int
  agencyMediaLibraryId: Int
  agencyOfferId: Int
  agencyReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  bookingCalendarId: Int
  contactId: Int
  createdById: Int!
  extendedNetworkIdPool: [Int]
  guideReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  id: Int
  insuranceExpery: Date
  insuranceUrl: String
  isActive: Boolean
  isPublic: Boolean
  isRomanian: Boolean!
  lastModified: Datetime
  name: String!
  publisherId: Int
  specializedAgency: Resourcetype
  timeCreated: Datetime
  touristReviewInIdPool: [Int]
  touristReviewOutIdPool: [Int]
  trustedPartnerIdPool: [Int]
}

"""A connection to a list of `Agencymedialibrary` values."""
type AgencymedialibrariesConnection {
  """
  A list of edges which contains the `Agencymedialibrary` and cursor to aid in pagination.
  """
  edges: [AgencymedialibrariesEdge!]!

  """A list of `Agencymedialibrary` objects."""
  nodes: [Agencymedialibrary!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencymedialibrary` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencymedialibrary` edge in the connection."""
type AgencymedialibrariesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencymedialibrary` at the end of the edge."""
  node: Agencymedialibrary!
}

"""Methods to use when ordering `Agencymedialibrary`."""
enum AgencymedialibrariesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  ID_ASC
  ID_DESC
  LAST_MODIFIED_ASC
  LAST_MODIFIED_BY_ASC
  LAST_MODIFIED_BY_DESC
  LAST_MODIFIED_DESC
  NATURAL
}

type Agencymedialibrary {
  """Reads and enables pagination through a set of `Agency`."""
  agenciesByAgencyMediaLibraryId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesConnection!

  """Reads a single `Agency` that is related to this `Agencymedialibrary`."""
  agencyByAtAgency: Agency
  atAgency: Int!
  id: Int
  lastModified: Datetime
  lastModifiedBy: Int!
  locationSignedUrls: [String]
  signedUrlsUpdate: [Datetime]
  timeCreated: Datetime
  uploadLocations: [String]

  """
  Reads a single `Usertable` that is related to this `Agencymedialibrary`.
  """
  usertableByLastModifiedBy: Usertable
}

"""
A condition to be used against `Agencymedialibrary` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencymedialibraryCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `lastModified` field."""
  lastModified: Datetime

  """Checks for equality with the object’s `lastModifiedBy` field."""
  lastModifiedBy: Int
}

"""An input for mutations affecting `Agencymedialibrary`"""
input AgencymedialibraryInput {
  atAgency: Int!
  id: Int
  lastModified: Datetime
  lastModifiedBy: Int!
  locationSignedUrls: [String]
  signedUrlsUpdate: [Datetime]
  timeCreated: Datetime
  uploadLocations: [String]
}

type Agencyoffer implements Node {
  """Reads and enables pagination through a set of `Agency`."""
  agenciesByAgencyOfferId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesConnection!
  guideResourceIdPool: [Int]
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  tripsOfferesourceIdPool: [Int]
}

"""
A condition to be used against `Agencyoffer` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyofferCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Agencyoffer`"""
input AgencyofferInput {
  guideResourceIdPool: [Int]
  id: Int
  tripsOfferesourceIdPool: [Int]
}

"""
Represents an update to a `Agencyoffer`. Fields that are set will be updated.
"""
input AgencyofferPatch {
  guideResourceIdPool: [Int]
  id: Int
  tripsOfferesourceIdPool: [Int]
}

"""A connection to a list of `Agencyoffer` values."""
type AgencyoffersConnection {
  """
  A list of edges which contains the `Agencyoffer` and cursor to aid in pagination.
  """
  edges: [AgencyoffersEdge!]!

  """A list of `Agencyoffer` objects."""
  nodes: [Agencyoffer!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyoffer` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyoffer` edge in the connection."""
type AgencyoffersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyoffer` at the end of the edge."""
  node: Agencyoffer!
}

"""Methods to use when ordering `Agencyoffer`."""
enum AgencyoffersOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
Represents an update to a `Agency`. Fields that are set will be updated.
"""
input AgencyPatch {
  activeInsurance: Boolean
  agencyBidId: Int
  agencyDealId: Int
  agencyFavoriteId: Int
  agencyMediaLibraryId: Int
  agencyOfferId: Int
  agencyReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  bookingCalendarId: Int
  contactId: Int
  createdById: Int
  extendedNetworkIdPool: [Int]
  guideReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  id: Int
  insuranceExpery: Date
  insuranceUrl: String
  isActive: Boolean
  isPublic: Boolean
  isRomanian: Boolean
  lastModified: Datetime
  name: String
  publisherId: Int
  specializedAgency: Resourcetype
  timeCreated: Datetime
  touristReviewInIdPool: [Int]
  touristReviewOutIdPool: [Int]
  trustedPartnerIdPool: [Int]
}

type Agencyreview implements Node {
  """Reads a single `Agency` that is related to this `Agencyreview`."""
  agencyByAgencyIdTarget: Agency
  agencyIdTarget: Int!
  byRomanian: Boolean

  """Reads a single `Usertable` that is related to this `Agencyreview`."""
  createdBy: Usertable
  createdById: Int!
  halfStars: Int
  id: Int!
  isActive: Boolean

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Agencyreview`."""
  publisher: Publisher
  publisherId: Int!
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
}

"""
A condition to be used against `Agencyreview` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencyreviewCondition {
  """Checks for equality with the object’s `agencyIdTarget` field."""
  agencyIdTarget: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Agencyreview`"""
input AgencyreviewInput {
  agencyIdTarget: Int!
  byRomanian: Boolean
  createdById: Int!
  halfStars: Int
  id: Int
  isActive: Boolean
  publisherId: Int!
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyreview`. Fields that are set will be updated.
"""
input AgencyreviewPatch {
  agencyIdTarget: Int
  byRomanian: Boolean
  createdById: Int
  halfStars: Int
  id: Int
  isActive: Boolean
  publisherId: Int
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
}

"""A connection to a list of `Agencyreview` values."""
type AgencyreviewsConnection {
  """
  A list of edges which contains the `Agencyreview` and cursor to aid in pagination.
  """
  edges: [AgencyreviewsEdge!]!

  """A list of `Agencyreview` objects."""
  nodes: [Agencyreview!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyreview` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyreview` edge in the connection."""
type AgencyreviewsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyreview` at the end of the edge."""
  node: Agencyreview!
}

"""Methods to use when ordering `Agencyreview`."""
enum AgencyreviewsOrderBy {
  AGENCY_ID_TARGET_ASC
  AGENCY_ID_TARGET_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

type Agencytourist implements Node {
  """Reads a single `Agency` that is related to this `Agencytourist`."""
  agency: Agency
  agencyId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime

  """
  Reads a single `Touristresource` that is related to this `Agencytourist`.
  """
  tourist: Touristresource
  touristId: Int!
}

"""
A condition to be used against `Agencytourist` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencytouristCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `touristId` field."""
  touristId: Int
}

"""An input for mutations affecting `Agencytourist`"""
input AgencytouristInput {
  agencyId: Int!
  timeCreated: Datetime
  touristId: Int!
}

"""
Represents an update to a `Agencytourist`. Fields that are set will be updated.
"""
input AgencytouristPatch {
  agencyId: Int
  timeCreated: Datetime
  touristId: Int
}

"""A connection to a list of `Agencytourist` values."""
type AgencytouristsConnection {
  """
  A list of edges which contains the `Agencytourist` and cursor to aid in pagination.
  """
  edges: [AgencytouristsEdge!]!

  """A list of `Agencytourist` objects."""
  nodes: [Agencytourist!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencytourist` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencytourist` edge in the connection."""
type AgencytouristsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencytourist` at the end of the edge."""
  node: Agencytourist!
}

"""Methods to use when ordering `Agencytourist`."""
enum AgencytouristsOrderBy {
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TOURIST_ID_ASC
  TOURIST_ID_DESC
}

type Agencytransport implements Node {
  """Reads a single `Agency` that is related to this `Agencytransport`."""
  agency: Agency
  agencyId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime

  """
  Reads a single `Transportresource` that is related to this `Agencytransport`.
  """
  transport: Transportresource
  transportId: Int!
}

"""
A condition to be used against `Agencytransport` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencytransportCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `transportId` field."""
  transportId: Int
}

"""An input for mutations affecting `Agencytransport`"""
input AgencytransportInput {
  agencyId: Int!
  timeCreated: Datetime
  transportId: Int!
}

"""
Represents an update to a `Agencytransport`. Fields that are set will be updated.
"""
input AgencytransportPatch {
  agencyId: Int
  timeCreated: Datetime
  transportId: Int
}

"""A connection to a list of `Agencytransport` values."""
type AgencytransportsConnection {
  """
  A list of edges which contains the `Agencytransport` and cursor to aid in pagination.
  """
  edges: [AgencytransportsEdge!]!

  """A list of `Agencytransport` objects."""
  nodes: [Agencytransport!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencytransport` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencytransport` edge in the connection."""
type AgencytransportsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencytransport` at the end of the edge."""
  node: Agencytransport!
}

"""Methods to use when ordering `Agencytransport`."""
enum AgencytransportsOrderBy {
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRANSPORT_ID_ASC
  TRANSPORT_ID_DESC
}

type Agencytravelgroup implements Node {
  """Reads a single `Agency` that is related to this `Agencytravelgroup`."""
  agency: Agency
  agencyId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime

  """
  Reads a single `Travelgroupresource` that is related to this `Agencytravelgroup`.
  """
  travelGroup: Travelgroupresource
  travelGroupId: Int!
}

"""
A condition to be used against `Agencytravelgroup` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencytravelgroupCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `travelGroupId` field."""
  travelGroupId: Int
}

"""An input for mutations affecting `Agencytravelgroup`"""
input AgencytravelgroupInput {
  agencyId: Int!
  timeCreated: Datetime
  travelGroupId: Int!
}

"""
Represents an update to a `Agencytravelgroup`. Fields that are set will be updated.
"""
input AgencytravelgroupPatch {
  agencyId: Int
  timeCreated: Datetime
  travelGroupId: Int
}

"""A connection to a list of `Agencytravelgroup` values."""
type AgencytravelgroupsConnection {
  """
  A list of edges which contains the `Agencytravelgroup` and cursor to aid in pagination.
  """
  edges: [AgencytravelgroupsEdge!]!

  """A list of `Agencytravelgroup` objects."""
  nodes: [Agencytravelgroup!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencytravelgroup` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencytravelgroup` edge in the connection."""
type AgencytravelgroupsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencytravelgroup` at the end of the edge."""
  node: Agencytravelgroup!
}

"""Methods to use when ordering `Agencytravelgroup`."""
enum AgencytravelgroupsOrderBy {
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRAVEL_GROUP_ID_ASC
  TRAVEL_GROUP_ID_DESC
}

type Agencytripoffer implements Node {
  """Reads a single `Agency` that is related to this `Agencytripoffer`."""
  agency: Agency
  agencyId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime

  """
  Reads a single `Tripofferresource` that is related to this `Agencytripoffer`.
  """
  tripOffer: Tripofferresource
  tripOfferId: Int!
}

"""
A condition to be used against `Agencytripoffer` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencytripofferCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `tripOfferId` field."""
  tripOfferId: Int
}

"""An input for mutations affecting `Agencytripoffer`"""
input AgencytripofferInput {
  agencyId: Int!
  timeCreated: Datetime
  tripOfferId: Int!
}

"""
Represents an update to a `Agencytripoffer`. Fields that are set will be updated.
"""
input AgencytripofferPatch {
  agencyId: Int
  timeCreated: Datetime
  tripOfferId: Int
}

"""A connection to a list of `Agencytripoffer` values."""
type AgencytripoffersConnection {
  """
  A list of edges which contains the `Agencytripoffer` and cursor to aid in pagination.
  """
  edges: [AgencytripoffersEdge!]!

  """A list of `Agencytripoffer` objects."""
  nodes: [Agencytripoffer!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencytripoffer` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencytripoffer` edge in the connection."""
type AgencytripoffersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencytripoffer` at the end of the edge."""
  node: Agencytripoffer!
}

"""Methods to use when ordering `Agencytripoffer`."""
enum AgencytripoffersOrderBy {
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRIP_OFFER_ID_ASC
  TRIP_OFFER_ID_DESC
}

type Agencyuser implements Node {
  """Reads a single `Agency` that is related to this `Agencyuser`."""
  agency: Agency
  agencyId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime

  """Reads a single `Usertable` that is related to this `Agencyuser`."""
  user: Usertable
  userId: Int!
}

"""
A condition to be used against `Agencyuser` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyuserCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `userId` field."""
  userId: Int
}

"""An input for mutations affecting `Agencyuser`"""
input AgencyuserInput {
  agencyId: Int!
  timeCreated: Datetime
  userId: Int!
}

"""
Represents an update to a `Agencyuser`. Fields that are set will be updated.
"""
input AgencyuserPatch {
  agencyId: Int
  timeCreated: Datetime
  userId: Int
}

"""A connection to a list of `Agencyuser` values."""
type AgencyusersConnection {
  """
  A list of edges which contains the `Agencyuser` and cursor to aid in pagination.
  """
  edges: [AgencyusersEdge!]!

  """A list of `Agencyuser` objects."""
  nodes: [Agencyuser!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyuser` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyuser` edge in the connection."""
type AgencyusersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyuser` at the end of the edge."""
  node: Agencyuser!
}

"""Methods to use when ordering `Agencyuser`."""
enum AgencyusersOrderBy {
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  USER_ID_ASC
  USER_ID_DESC
}

enum Area {
  BANAT
  BUCOVINA
  CRISANA
  DOBROGEA
  MARAMURES
  MOLDOVA
  MUNTENIA
  OLTENIA
  SATU_MARE
  TRANSILVANIA
}

type Assocaccomodation implements Node {
  """
  Reads a single `Accomodationresource` that is related to this `Assocaccomodation`.
  """
  accomodation: Accomodationresource
  accomodationId: Int!

  """Reads a single `Agency` that is related to this `Assocaccomodation`."""
  agencyByAtAgency: Agency
  assocAccomodationId: [Int]
  atAgency: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
}

"""
A condition to be used against `Assocaccomodation` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AssocaccomodationCondition {
  """Checks for equality with the object’s `accomodationId` field."""
  accomodationId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Assocaccomodation`"""
input AssocaccomodationInput {
  accomodationId: Int!
  assocAccomodationId: [Int]
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assocaccomodation`. Fields that are set will be updated.
"""
input AssocaccomodationPatch {
  accomodationId: Int
  assocAccomodationId: [Int]
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assocaccomodation` values."""
type AssocaccomodationsConnection {
  """
  A list of edges which contains the `Assocaccomodation` and cursor to aid in pagination.
  """
  edges: [AssocaccomodationsEdge!]!

  """A list of `Assocaccomodation` objects."""
  nodes: [Assocaccomodation!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Assocaccomodation` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Assocaccomodation` edge in the connection."""
type AssocaccomodationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assocaccomodation` at the end of the edge."""
  node: Assocaccomodation!
}

"""Methods to use when ordering `Assocaccomodation`."""
enum AssocaccomodationsOrderBy {
  ACCOMODATION_ID_ASC
  ACCOMODATION_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assocdestination implements Node {
  """Reads a single `Agency` that is related to this `Assocdestination`."""
  agencyByAtAgency: Agency
  assocDestinationId: [Int]
  atAgency: Int!

  """
  Reads a single `Destinationresource` that is related to this `Assocdestination`.
  """
  destination: Destinationresource
  destinationId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
}

"""
A condition to be used against `Assocdestination` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AssocdestinationCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `destinationId` field."""
  destinationId: Int
}

"""An input for mutations affecting `Assocdestination`"""
input AssocdestinationInput {
  assocDestinationId: [Int]
  atAgency: Int!
  destinationId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assocdestination`. Fields that are set will be updated.
"""
input AssocdestinationPatch {
  assocDestinationId: [Int]
  atAgency: Int
  destinationId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assocdestination` values."""
type AssocdestinationsConnection {
  """
  A list of edges which contains the `Assocdestination` and cursor to aid in pagination.
  """
  edges: [AssocdestinationsEdge!]!

  """A list of `Assocdestination` objects."""
  nodes: [Assocdestination!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Assocdestination` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Assocdestination` edge in the connection."""
type AssocdestinationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assocdestination` at the end of the edge."""
  node: Assocdestination!
}

"""Methods to use when ordering `Assocdestination`."""
enum AssocdestinationsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  DESTINATION_ID_ASC
  DESTINATION_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assocevent implements Node {
  """Reads a single `Agency` that is related to this `Assocevent`."""
  agencyByAtAgency: Agency
  assocEventId: [Int]
  atAgency: Int!

  """Reads a single `Eventresource` that is related to this `Assocevent`."""
  event: Eventresource
  eventId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
}

"""
A condition to be used against `Assocevent` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AssoceventCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `eventId` field."""
  eventId: Int
}

"""An input for mutations affecting `Assocevent`"""
input AssoceventInput {
  assocEventId: [Int]
  atAgency: Int!
  eventId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assocevent`. Fields that are set will be updated.
"""
input AssoceventPatch {
  assocEventId: [Int]
  atAgency: Int
  eventId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assocevent` values."""
type AssoceventsConnection {
  """
  A list of edges which contains the `Assocevent` and cursor to aid in pagination.
  """
  edges: [AssoceventsEdge!]!

  """A list of `Assocevent` objects."""
  nodes: [Assocevent!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Assocevent` you could get from the connection."""
  totalCount: Int!
}

"""A `Assocevent` edge in the connection."""
type AssoceventsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assocevent` at the end of the edge."""
  node: Assocevent!
}

"""Methods to use when ordering `Assocevent`."""
enum AssoceventsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  EVENT_ID_ASC
  EVENT_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assocguide implements Node {
  """Reads a single `Agency` that is related to this `Assocguide`."""
  agencyByAtAgency: Agency
  assocGuideId: [Int]
  atAgency: Int!

  """Reads a single `Guideresource` that is related to this `Assocguide`."""
  guide: Guideresource
  guideId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
}

"""
A condition to be used against `Assocguide` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AssocguideCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `guideId` field."""
  guideId: Int
}

"""An input for mutations affecting `Assocguide`"""
input AssocguideInput {
  assocGuideId: [Int]
  atAgency: Int!
  guideId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assocguide`. Fields that are set will be updated.
"""
input AssocguidePatch {
  assocGuideId: [Int]
  atAgency: Int
  guideId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assocguide` values."""
type AssocguidesConnection {
  """
  A list of edges which contains the `Assocguide` and cursor to aid in pagination.
  """
  edges: [AssocguidesEdge!]!

  """A list of `Assocguide` objects."""
  nodes: [Assocguide!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Assocguide` you could get from the connection."""
  totalCount: Int!
}

"""A `Assocguide` edge in the connection."""
type AssocguidesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assocguide` at the end of the edge."""
  node: Assocguide!
}

"""Methods to use when ordering `Assocguide`."""
enum AssocguidesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  GUIDE_ID_ASC
  GUIDE_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assochost implements Node {
  """Reads a single `Agency` that is related to this `Assochost`."""
  agencyByAtAgency: Agency
  assocHostId: [Int]
  atAgency: Int!

  """Reads a single `Hostresource` that is related to this `Assochost`."""
  host: Hostresource
  hostId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
}

"""
A condition to be used against `Assochost` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AssochostCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `hostId` field."""
  hostId: Int
}

"""An input for mutations affecting `Assochost`"""
input AssochostInput {
  assocHostId: [Int]
  atAgency: Int!
  hostId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assochost`. Fields that are set will be updated.
"""
input AssochostPatch {
  assocHostId: [Int]
  atAgency: Int
  hostId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assochost` values."""
type AssochostsConnection {
  """
  A list of edges which contains the `Assochost` and cursor to aid in pagination.
  """
  edges: [AssochostsEdge!]!

  """A list of `Assochost` objects."""
  nodes: [Assochost!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Assochost` you could get from the connection."""
  totalCount: Int!
}

"""A `Assochost` edge in the connection."""
type AssochostsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assochost` at the end of the edge."""
  node: Assochost!
}

"""Methods to use when ordering `Assochost`."""
enum AssochostsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  HOST_ID_ASC
  HOST_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assoctransport implements Node {
  """Reads a single `Agency` that is related to this `Assoctransport`."""
  agencyByAtAgency: Agency
  assocTransportId: [Int]
  atAgency: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """
  Reads a single `Transportresource` that is related to this `Assoctransport`.
  """
  transport: Transportresource
  transportId: Int!
}

"""
A condition to be used against `Assoctransport` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AssoctransportCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `transportId` field."""
  transportId: Int
}

"""An input for mutations affecting `Assoctransport`"""
input AssoctransportInput {
  assocTransportId: [Int]
  atAgency: Int!
  transportId: Int!
}

"""
Represents an update to a `Assoctransport`. Fields that are set will be updated.
"""
input AssoctransportPatch {
  assocTransportId: [Int]
  atAgency: Int
  transportId: Int
}

"""A connection to a list of `Assoctransport` values."""
type AssoctransportsConnection {
  """
  A list of edges which contains the `Assoctransport` and cursor to aid in pagination.
  """
  edges: [AssoctransportsEdge!]!

  """A list of `Assoctransport` objects."""
  nodes: [Assoctransport!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Assoctransport` you could get from the connection."""
  totalCount: Int!
}

"""A `Assoctransport` edge in the connection."""
type AssoctransportsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assoctransport` at the end of the edge."""
  node: Assoctransport!
}

"""Methods to use when ordering `Assoctransport`."""
enum AssoctransportsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRANSPORT_ID_ASC
  TRANSPORT_ID_DESC
}

type Assoctravelgroup implements Node {
  """Reads a single `Agency` that is related to this `Assoctravelgroup`."""
  agencyByAtAgency: Agency
  assocTravelGroupId: [Int]
  atAgency: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime

  """
  Reads a single `Travelgroupresource` that is related to this `Assoctravelgroup`.
  """
  travelGroup: Travelgroupresource
  travelGroupId: Int!
}

"""
A condition to be used against `Assoctravelgroup` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AssoctravelgroupCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `travelGroupId` field."""
  travelGroupId: Int
}

"""An input for mutations affecting `Assoctravelgroup`"""
input AssoctravelgroupInput {
  assocTravelGroupId: [Int]
  atAgency: Int!
  timeCreated: Datetime
  travelGroupId: Int!
}

"""
Represents an update to a `Assoctravelgroup`. Fields that are set will be updated.
"""
input AssoctravelgroupPatch {
  assocTravelGroupId: [Int]
  atAgency: Int
  timeCreated: Datetime
  travelGroupId: Int
}

"""A connection to a list of `Assoctravelgroup` values."""
type AssoctravelgroupsConnection {
  """
  A list of edges which contains the `Assoctravelgroup` and cursor to aid in pagination.
  """
  edges: [AssoctravelgroupsEdge!]!

  """A list of `Assoctravelgroup` objects."""
  nodes: [Assoctravelgroup!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Assoctravelgroup` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Assoctravelgroup` edge in the connection."""
type AssoctravelgroupsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assoctravelgroup` at the end of the edge."""
  node: Assoctravelgroup!
}

"""Methods to use when ordering `Assoctravelgroup`."""
enum AssoctravelgroupsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRAVEL_GROUP_ID_ASC
  TRAVEL_GROUP_ID_DESC
}

type Auctioninfo implements Node {
  acceptsOffers: Boolean!
  advertisedPrice: Float!
  atResourceType: Resourcetype!
  auctionExpiry: Datetime
  belongsToId: Int!

  """Reads a single `Bid` that is related to this `Auctioninfo`."""
  bid: Bid
  bidId: Int

  """Reads a single `Usertable` that is related to this `Auctioninfo`."""
  createdBy: Usertable
  createdById: Int!
  currentHighBid: Float
  id: Int!
  isActive: Boolean
  isAuction: Boolean!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Auctioninfo`."""
  publishedBy: Publisher
  publishedById: Int!
  timeCreated: Datetime
}

"""
A condition to be used against `Auctioninfo` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AuctioninfoCondition {
  """Checks for equality with the object’s `bidId` field."""
  bidId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publishedById` field."""
  publishedById: Int
}

"""An input for mutations affecting `Auctioninfo`"""
input AuctioninfoInput {
  acceptsOffers: Boolean!
  advertisedPrice: Float!
  atResourceType: Resourcetype!
  auctionExpiry: Datetime
  belongsToId: Int!
  bidId: Int
  createdById: Int!
  currentHighBid: Float
  id: Int
  isActive: Boolean
  isAuction: Boolean!
  publishedById: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Auctioninfo`. Fields that are set will be updated.
"""
input AuctioninfoPatch {
  acceptsOffers: Boolean
  advertisedPrice: Float
  atResourceType: Resourcetype
  auctionExpiry: Datetime
  belongsToId: Int
  bidId: Int
  createdById: Int
  currentHighBid: Float
  id: Int
  isActive: Boolean
  isAuction: Boolean
  publishedById: Int
  timeCreated: Datetime
}

"""A connection to a list of `Auctioninfo` values."""
type AuctioninfosConnection {
  """
  A list of edges which contains the `Auctioninfo` and cursor to aid in pagination.
  """
  edges: [AuctioninfosEdge!]!

  """A list of `Auctioninfo` objects."""
  nodes: [Auctioninfo!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Auctioninfo` you could get from the connection."""
  totalCount: Int!
}

"""A `Auctioninfo` edge in the connection."""
type AuctioninfosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Auctioninfo` at the end of the edge."""
  node: Auctioninfo!
}

"""Methods to use when ordering `Auctioninfo`."""
enum AuctioninfosOrderBy {
  BID_ID_ASC
  BID_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHED_BY_ID_ASC
  PUBLISHED_BY_ID_DESC
}

type Bid implements Node {
  """Reads and enables pagination through a set of `Auctioninfo`."""
  auctioninfos(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AuctioninfoCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosConnection!
  bidAmount: [Float]
  createdById: [Int]!
  id: Int!
  isActive: [Boolean]!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads and enables pagination through a set of `Priceinfo`."""
  priceinfos(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PriceinfoCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosConnection!
  publisherId: [Int]!
  timeCreated: [Datetime]!
}

"""
A condition to be used against `Bid` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input BidCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Bid`"""
input BidInput {
  bidAmount: [Float]
  createdById: [Int]!
  id: Int
  isActive: [Boolean]!
  publisherId: [Int]!
  timeCreated: [Datetime]
}

"""Represents an update to a `Bid`. Fields that are set will be updated."""
input BidPatch {
  bidAmount: [Float]
  createdById: [Int]
  id: Int
  isActive: [Boolean]
  publisherId: [Int]
  timeCreated: [Datetime]
}

"""A connection to a list of `Bid` values."""
type BidsConnection {
  """
  A list of edges which contains the `Bid` and cursor to aid in pagination.
  """
  edges: [BidsEdge!]!

  """A list of `Bid` objects."""
  nodes: [Bid!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Bid` you could get from the connection."""
  totalCount: Int!
}

"""A `Bid` edge in the connection."""
type BidsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Bid` at the end of the edge."""
  node: Bid!
}

"""Methods to use when ordering `Bid`."""
enum BidsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Bookingcalendar implements Node {
  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByLocationCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Agency`."""
  agenciesByBookingCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesConnection!
  belongsToId: Int
  belongsToType: Resourcetype
  comment: [String]

  """Reads a single `Usertable` that is related to this `Bookingcalendar`."""
  createdBy: Usertable
  createdById: Int

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByActiveAtPeriodsId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByActiveAtPeriodsId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection!
  fromTimestamp: [Datetime]!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByBookingCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Guide`."""
  guidesByBookingCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByBookingCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection!
  id: Int!
  isActive: Boolean

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  resourceType: [Resourcetype]
  timeCreated: Datetime
  toTimestamp: [Datetime]!

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByTravellingCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByBookingCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByBookingCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByAvailableAtCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesConnection!
}

"""
A condition to be used against `Bookingcalendar` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input BookingcalendarCondition {
  """Checks for equality with the object’s `belongsToId` field."""
  belongsToId: Int

  """Checks for equality with the object’s `belongsToType` field."""
  belongsToType: Resourcetype

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Bookingcalendar`"""
input BookingcalendarInput {
  belongsToId: Int
  belongsToType: Resourcetype
  comment: [String]
  createdById: Int
  fromTimestamp: [Datetime]
  id: Int
  isActive: Boolean
  resourceType: [Resourcetype]
  timeCreated: Datetime
  toTimestamp: [Datetime]
}

"""
Represents an update to a `Bookingcalendar`. Fields that are set will be updated.
"""
input BookingcalendarPatch {
  belongsToId: Int
  belongsToType: Resourcetype
  comment: [String]
  createdById: Int
  fromTimestamp: [Datetime]
  id: Int
  isActive: Boolean
  resourceType: [Resourcetype]
  timeCreated: Datetime
  toTimestamp: [Datetime]
}

"""A connection to a list of `Bookingcalendar` values."""
type BookingcalendarsConnection {
  """
  A list of edges which contains the `Bookingcalendar` and cursor to aid in pagination.
  """
  edges: [BookingcalendarsEdge!]!

  """A list of `Bookingcalendar` objects."""
  nodes: [Bookingcalendar!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Bookingcalendar` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Bookingcalendar` edge in the connection."""
type BookingcalendarsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Bookingcalendar` at the end of the edge."""
  node: Bookingcalendar!
}

"""Methods to use when ordering `Bookingcalendar`."""
enum BookingcalendarsOrderBy {
  BELONGS_TO_ID_ASC
  BELONGS_TO_ID_DESC
  BELONGS_TO_TYPE_ASC
  BELONGS_TO_TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""A connection to a list of `Calendarentry` values."""
type CalendarentriesConnection {
  """
  A list of edges which contains the `Calendarentry` and cursor to aid in pagination.
  """
  edges: [CalendarentriesEdge!]!

  """A list of `Calendarentry` objects."""
  nodes: [Calendarentry!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Calendarentry` you could get from the connection."""
  totalCount: Int!
}

"""A `Calendarentry` edge in the connection."""
type CalendarentriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Calendarentry` at the end of the edge."""
  node: Calendarentry!
}

"""Methods to use when ordering `Calendarentry`."""
enum CalendarentriesOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Calendarentry implements Node {
  comment: [String]
  fromTimestamp: [Datetime]!
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  resourceType: [Resourcetype]
  timeCreated: Datetime
  toTimestamp: [Datetime]!
}

"""
A condition to be used against `Calendarentry` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input CalendarentryCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Calendarentry`"""
input CalendarentryInput {
  comment: [String]
  fromTimestamp: [Datetime]
  id: Int
  resourceType: [Resourcetype]
  timeCreated: Datetime
  toTimestamp: [Datetime]
}

"""
Represents an update to a `Calendarentry`. Fields that are set will be updated.
"""
input CalendarentryPatch {
  comment: [String]
  fromTimestamp: [Datetime]
  id: Int
  resourceType: [Resourcetype]
  timeCreated: Datetime
  toTimestamp: [Datetime]
}

"""All input for the `changePassword` mutation."""
input ChangePasswordInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  newPassword: String!
  oldPassword: String!
}

"""The output of our `changePassword` mutation."""
type ChangePasswordPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
  success: Boolean
}

"""A connection to a list of `Commandlogentry` values."""
type CommandlogentriesConnection {
  """
  A list of edges which contains the `Commandlogentry` and cursor to aid in pagination.
  """
  edges: [CommandlogentriesEdge!]!

  """A list of `Commandlogentry` objects."""
  nodes: [Commandlogentry!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Commandlogentry` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Commandlogentry` edge in the connection."""
type CommandlogentriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Commandlogentry` at the end of the edge."""
  node: Commandlogentry!
}

"""Methods to use when ordering `Commandlogentry`."""
enum CommandlogentriesOrderBy {
  AT_PUBLISHER_ASC
  AT_PUBLISHER_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Commandlogentry implements Node {
  atPublisher: Int!
  belongsToType: Resourcetype
  id: Int!
  logcommand: Logcommand!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Commandlogentry`."""
  publisherByAtPublisher: Publisher
  resourceId: Int
  timeCommand: Datetime
}

"""
A condition to be used against `Commandlogentry` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input CommandlogentryCondition {
  """Checks for equality with the object’s `atPublisher` field."""
  atPublisher: Int

  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Commandlogentry`"""
input CommandlogentryInput {
  atPublisher: Int!
  belongsToType: Resourcetype
  id: Int
  logcommand: Logcommand!
  resourceId: Int
  timeCommand: Datetime
}

"""
Represents an update to a `Commandlogentry`. Fields that are set will be updated.
"""
input CommandlogentryPatch {
  atPublisher: Int
  belongsToType: Resourcetype
  id: Int
  logcommand: Logcommand
  resourceId: Int
  timeCommand: Datetime
}

"""All input for the `confirmAccountDeletion` mutation."""
input ConfirmAccountDeletionInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  token: String!
}

"""The output of our `confirmAccountDeletion` mutation."""
type ConfirmAccountDeletionPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
  success: Boolean
}

type Contact implements Node {
  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByAddressId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Agency`."""
  agencies(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesConnection!
  associatedCompany: String
  belongsToId: Int
  belongsToType: Resourcetype
  city: String
  country: String

  """Reads a single `Usertable` that is related to this `Contact`."""
  createdBy: Usertable
  createdById: Int
  email: String

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByLocationAddressId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection!
  firstName: String

  """Reads and enables pagination through a set of `Guide`."""
  guides(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByAddressInfoId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection!
  id: Int!
  isCompany: Boolean
  lastName: String

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  postCode: String
  street: String
  telephone: String
  timeCreated: Datetime

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Tourist`."""
  tourists(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByAddressInfoId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesConnection!
}

"""
A condition to be used against `Contact` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input ContactCondition {
  """Checks for equality with the object’s `belongsToType` field."""
  belongsToType: Resourcetype

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Contact`"""
input ContactInput {
  associatedCompany: String
  belongsToId: Int
  belongsToType: Resourcetype
  city: String
  country: String
  createdById: Int
  email: String
  firstName: String
  id: Int
  isCompany: Boolean
  lastName: String
  postCode: String
  street: String
  telephone: String
  timeCreated: Datetime
}

"""
Represents an update to a `Contact`. Fields that are set will be updated.
"""
input ContactPatch {
  associatedCompany: String
  belongsToId: Int
  belongsToType: Resourcetype
  city: String
  country: String
  createdById: Int
  email: String
  firstName: String
  id: Int
  isCompany: Boolean
  lastName: String
  postCode: String
  street: String
  telephone: String
  timeCreated: Datetime
}

"""A connection to a list of `Contact` values."""
type ContactsConnection {
  """
  A list of edges which contains the `Contact` and cursor to aid in pagination.
  """
  edges: [ContactsEdge!]!

  """A list of `Contact` objects."""
  nodes: [Contact!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Contact` you could get from the connection."""
  totalCount: Int!
}

"""A `Contact` edge in the connection."""
type ContactsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Contact` at the end of the edge."""
  node: Contact!
}

"""Methods to use when ordering `Contact`."""
enum ContactsOrderBy {
  BELONGS_TO_TYPE_ASC
  BELONGS_TO_TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""All input for the create `Accomodationresource` mutation."""
input CreateAccomodationresourceInput {
  """The `Accomodationresource` to be created by this mutation."""
  accomodationresource: AccomodationresourceInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Accomodationresource` mutation."""
type CreateAccomodationresourcePayload {
  """The `Accomodationresource` that was created by this mutation."""
  accomodationresource: Accomodationresource

  """An edge for our `Accomodationresource`. May be used by Relay 1."""
  accomodationresourceEdge(
    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesEdge

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  address: Contact

  """
  Reads a single `Agency` that is related to this `Accomodationresource`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  contact: Contact

  """
  Reads a single `Usertable` that is related to this `Accomodationresource`.
  """
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Accomodationresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Bookingcalendar` that is related to this `Accomodationresource`.
  """
  locationCalendar: Bookingcalendar

  """
  Reads a single `Presentation` that is related to this `Accomodationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Publisher` that is related to this `Accomodationresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Triptype` that is related to this `Accomodationresource`.
  """
  triptypeByAtAgencyAndTripTypeName: Triptype
}

"""All input for the create `Accounting` mutation."""
input CreateAccountingInput {
  """The `Accounting` to be created by this mutation."""
  accounting: AccountingInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Accounting` mutation."""
type CreateAccountingPayload {
  """The `Accounting` that was created by this mutation."""
  accounting: Accounting

  """An edge for our `Accounting`. May be used by Relay 1."""
  accountingEdge(
    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountingsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Publisher` that is related to this `Accounting`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Account` mutation."""
input CreateAccountInput {
  """The `Account` to be created by this mutation."""
  account: AccountInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Account` mutation."""
type CreateAccountPayload {
  """The `Account` that was created by this mutation."""
  account: Account

  """An edge for our `Account`. May be used by Relay 1."""
  accountEdge(
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agencyaccomodation` mutation."""
input CreateAgencyaccomodationInput {
  """The `Agencyaccomodation` to be created by this mutation."""
  agencyaccomodation: AgencyaccomodationInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencyaccomodation` mutation."""
type CreateAgencyaccomodationPayload {
  """
  Reads a single `Accomodationresource` that is related to this `Agencyaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Agencyaccomodation`."""
  agency: Agency

  """The `Agencyaccomodation` that was created by this mutation."""
  agencyaccomodation: Agencyaccomodation

  """An edge for our `Agencyaccomodation`. May be used by Relay 1."""
  agencyaccomodationEdge(
    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyaccomodationsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agencybid` mutation."""
input CreateAgencybidInput {
  """The `Agencybid` to be created by this mutation."""
  agencybid: AgencybidInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencybid` mutation."""
type CreateAgencybidPayload {
  """Reads a single `Agency` that is related to this `Agencybid`."""
  agency: Agency

  """The `Agencybid` that was created by this mutation."""
  agencybid: Agencybid

  """An edge for our `Agencybid`. May be used by Relay 1."""
  agencybidEdge(
    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencybidsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agencydeal` mutation."""
input CreateAgencydealInput {
  """The `Agencydeal` to be created by this mutation."""
  agencydeal: AgencydealInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencydeal` mutation."""
type CreateAgencydealPayload {
  """The `Agencydeal` that was created by this mutation."""
  agencydeal: Agencydeal

  """An edge for our `Agencydeal`. May be used by Relay 1."""
  agencydealEdge(
    """The method to use when ordering `Agencydeal`."""
    orderBy: [AgencydealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencydealsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agencyevent` mutation."""
input CreateAgencyeventInput {
  """The `Agencyevent` to be created by this mutation."""
  agencyevent: AgencyeventInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencyevent` mutation."""
type CreateAgencyeventPayload {
  """Reads a single `Agency` that is related to this `Agencyevent`."""
  agency: Agency

  """The `Agencyevent` that was created by this mutation."""
  agencyevent: Agencyevent

  """An edge for our `Agencyevent`. May be used by Relay 1."""
  agencyeventEdge(
    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyeventsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Eventresource` that is related to this `Agencyevent`."""
  event: Eventresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agencyfavorite` mutation."""
input CreateAgencyfavoriteInput {
  """The `Agencyfavorite` to be created by this mutation."""
  agencyfavorite: AgencyfavoriteInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencyfavorite` mutation."""
type CreateAgencyfavoritePayload {
  """Reads a single `Agency` that is related to this `Agencyfavorite`."""
  agencyByAtAgency: Agency

  """The `Agencyfavorite` that was created by this mutation."""
  agencyfavorite: Agencyfavorite

  """An edge for our `Agencyfavorite`. May be used by Relay 1."""
  agencyfavoriteEdge(
    """The method to use when ordering `Agencyfavorite`."""
    orderBy: [AgencyfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyfavoritesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agencyguide` mutation."""
input CreateAgencyguideInput {
  """The `Agencyguide` to be created by this mutation."""
  agencyguide: AgencyguideInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencyguide` mutation."""
type CreateAgencyguidePayload {
  """Reads a single `Agency` that is related to this `Agencyguide`."""
  agency: Agency

  """The `Agencyguide` that was created by this mutation."""
  agencyguide: Agencyguide

  """An edge for our `Agencyguide`. May be used by Relay 1."""
  agencyguideEdge(
    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyguidesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Guide` that is related to this `Agencyguide`."""
  guide: Guide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agencyhost` mutation."""
input CreateAgencyhostInput {
  """The `Agencyhost` to be created by this mutation."""
  agencyhost: AgencyhostInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencyhost` mutation."""
type CreateAgencyhostPayload {
  """Reads a single `Agency` that is related to this `Agencyhost`."""
  agency: Agency

  """The `Agencyhost` that was created by this mutation."""
  agencyhost: Agencyhost

  """An edge for our `Agencyhost`. May be used by Relay 1."""
  agencyhostEdge(
    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyhostsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Hostresource` that is related to this `Agencyhost`."""
  host: Hostresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agency` mutation."""
input CreateAgencyInput {
  """The `Agency` to be created by this mutation."""
  agency: AgencyInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""All input for the create `Agencymedialibrary` mutation."""
input CreateAgencymedialibraryInput {
  """The `Agencymedialibrary` to be created by this mutation."""
  agencymedialibrary: AgencymedialibraryInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencymedialibrary` mutation."""
type CreateAgencymedialibraryPayload {
  """Reads a single `Agency` that is related to this `Agencymedialibrary`."""
  agencyByAtAgency: Agency

  """The `Agencymedialibrary` that was created by this mutation."""
  agencymedialibrary: Agencymedialibrary

  """An edge for our `Agencymedialibrary`. May be used by Relay 1."""
  agencymedialibraryEdge(
    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]
  ): AgencymedialibrariesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Usertable` that is related to this `Agencymedialibrary`.
  """
  usertableByLastModifiedBy: Usertable
}

"""All input for the create `Agencyoffer` mutation."""
input CreateAgencyofferInput {
  """The `Agencyoffer` to be created by this mutation."""
  agencyoffer: AgencyofferInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencyoffer` mutation."""
type CreateAgencyofferPayload {
  """The `Agencyoffer` that was created by this mutation."""
  agencyoffer: Agencyoffer

  """An edge for our `Agencyoffer`. May be used by Relay 1."""
  agencyofferEdge(
    """The method to use when ordering `Agencyoffer`."""
    orderBy: [AgencyoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyoffersEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""The output of our create `Agency` mutation."""
type CreateAgencyPayload {
  """The `Agency` that was created by this mutation."""
  agency: Agency

  """Reads a single `Agencydeal` that is related to this `Agency`."""
  agencyDeal: Agencydeal

  """An edge for our `Agency`. May be used by Relay 1."""
  agencyEdge(
    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesEdge

  """Reads a single `Agencymedialibrary` that is related to this `Agency`."""
  agencyMediaLibrary: Agencymedialibrary

  """Reads a single `Agencyoffer` that is related to this `Agency`."""
  agencyOffer: Agencyoffer

  """Reads a single `Bookingcalendar` that is related to this `Agency`."""
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Agency`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Agency`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Agency`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agencyreview` mutation."""
input CreateAgencyreviewInput {
  """The `Agencyreview` to be created by this mutation."""
  agencyreview: AgencyreviewInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencyreview` mutation."""
type CreateAgencyreviewPayload {
  """Reads a single `Agency` that is related to this `Agencyreview`."""
  agencyByAgencyIdTarget: Agency

  """The `Agencyreview` that was created by this mutation."""
  agencyreview: Agencyreview

  """An edge for our `Agencyreview`. May be used by Relay 1."""
  agencyreviewEdge(
    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Agencyreview`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Agencyreview`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Agencytourist` mutation."""
input CreateAgencytouristInput {
  """The `Agencytourist` to be created by this mutation."""
  agencytourist: AgencytouristInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencytourist` mutation."""
type CreateAgencytouristPayload {
  """Reads a single `Agency` that is related to this `Agencytourist`."""
  agency: Agency

  """The `Agencytourist` that was created by this mutation."""
  agencytourist: Agencytourist

  """An edge for our `Agencytourist`. May be used by Relay 1."""
  agencytouristEdge(
    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytouristsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Touristresource` that is related to this `Agencytourist`.
  """
  tourist: Touristresource
}

"""All input for the create `Agencytransport` mutation."""
input CreateAgencytransportInput {
  """The `Agencytransport` to be created by this mutation."""
  agencytransport: AgencytransportInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencytransport` mutation."""
type CreateAgencytransportPayload {
  """Reads a single `Agency` that is related to this `Agencytransport`."""
  agency: Agency

  """The `Agencytransport` that was created by this mutation."""
  agencytransport: Agencytransport

  """An edge for our `Agencytransport`. May be used by Relay 1."""
  agencytransportEdge(
    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytransportsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Transportresource` that is related to this `Agencytransport`.
  """
  transport: Transportresource
}

"""All input for the create `Agencytravelgroup` mutation."""
input CreateAgencytravelgroupInput {
  """The `Agencytravelgroup` to be created by this mutation."""
  agencytravelgroup: AgencytravelgroupInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencytravelgroup` mutation."""
type CreateAgencytravelgroupPayload {
  """Reads a single `Agency` that is related to this `Agencytravelgroup`."""
  agency: Agency

  """The `Agencytravelgroup` that was created by this mutation."""
  agencytravelgroup: Agencytravelgroup

  """An edge for our `Agencytravelgroup`. May be used by Relay 1."""
  agencytravelgroupEdge(
    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytravelgroupsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Travelgroupresource` that is related to this `Agencytravelgroup`.
  """
  travelGroup: Travelgroupresource
}

"""All input for the create `Agencytripoffer` mutation."""
input CreateAgencytripofferInput {
  """The `Agencytripoffer` to be created by this mutation."""
  agencytripoffer: AgencytripofferInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencytripoffer` mutation."""
type CreateAgencytripofferPayload {
  """Reads a single `Agency` that is related to this `Agencytripoffer`."""
  agency: Agency

  """The `Agencytripoffer` that was created by this mutation."""
  agencytripoffer: Agencytripoffer

  """An edge for our `Agencytripoffer`. May be used by Relay 1."""
  agencytripofferEdge(
    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytripoffersEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Tripofferresource` that is related to this `Agencytripoffer`.
  """
  tripOffer: Tripofferresource
}

"""All input for the create `Agencyuser` mutation."""
input CreateAgencyuserInput {
  """The `Agencyuser` to be created by this mutation."""
  agencyuser: AgencyuserInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Agencyuser` mutation."""
type CreateAgencyuserPayload {
  """Reads a single `Agency` that is related to this `Agencyuser`."""
  agency: Agency

  """The `Agencyuser` that was created by this mutation."""
  agencyuser: Agencyuser

  """An edge for our `Agencyuser`. May be used by Relay 1."""
  agencyuserEdge(
    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyusersEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Agencyuser`."""
  user: Usertable
}

"""All input for the create `Assocaccomodation` mutation."""
input CreateAssocaccomodationInput {
  """The `Assocaccomodation` to be created by this mutation."""
  assocaccomodation: AssocaccomodationInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Assocaccomodation` mutation."""
type CreateAssocaccomodationPayload {
  """
  Reads a single `Accomodationresource` that is related to this `Assocaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Assocaccomodation`."""
  agencyByAtAgency: Agency

  """The `Assocaccomodation` that was created by this mutation."""
  assocaccomodation: Assocaccomodation

  """An edge for our `Assocaccomodation`. May be used by Relay 1."""
  assocaccomodationEdge(
    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocaccomodationsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Assocdestination` mutation."""
input CreateAssocdestinationInput {
  """The `Assocdestination` to be created by this mutation."""
  assocdestination: AssocdestinationInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Assocdestination` mutation."""
type CreateAssocdestinationPayload {
  """Reads a single `Agency` that is related to this `Assocdestination`."""
  agencyByAtAgency: Agency

  """The `Assocdestination` that was created by this mutation."""
  assocdestination: Assocdestination

  """An edge for our `Assocdestination`. May be used by Relay 1."""
  assocdestinationEdge(
    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocdestinationsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Destinationresource` that is related to this `Assocdestination`.
  """
  destination: Destinationresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Assocevent` mutation."""
input CreateAssoceventInput {
  """The `Assocevent` to be created by this mutation."""
  assocevent: AssoceventInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Assocevent` mutation."""
type CreateAssoceventPayload {
  """Reads a single `Agency` that is related to this `Assocevent`."""
  agencyByAtAgency: Agency

  """The `Assocevent` that was created by this mutation."""
  assocevent: Assocevent

  """An edge for our `Assocevent`. May be used by Relay 1."""
  assoceventEdge(
    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoceventsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Eventresource` that is related to this `Assocevent`."""
  event: Eventresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Assocguide` mutation."""
input CreateAssocguideInput {
  """The `Assocguide` to be created by this mutation."""
  assocguide: AssocguideInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Assocguide` mutation."""
type CreateAssocguidePayload {
  """Reads a single `Agency` that is related to this `Assocguide`."""
  agencyByAtAgency: Agency

  """The `Assocguide` that was created by this mutation."""
  assocguide: Assocguide

  """An edge for our `Assocguide`. May be used by Relay 1."""
  assocguideEdge(
    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocguidesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Guideresource` that is related to this `Assocguide`."""
  guide: Guideresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Assochost` mutation."""
input CreateAssochostInput {
  """The `Assochost` to be created by this mutation."""
  assochost: AssochostInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Assochost` mutation."""
type CreateAssochostPayload {
  """Reads a single `Agency` that is related to this `Assochost`."""
  agencyByAtAgency: Agency

  """The `Assochost` that was created by this mutation."""
  assochost: Assochost

  """An edge for our `Assochost`. May be used by Relay 1."""
  assochostEdge(
    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssochostsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Hostresource` that is related to this `Assochost`."""
  host: Hostresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Assoctransport` mutation."""
input CreateAssoctransportInput {
  """The `Assoctransport` to be created by this mutation."""
  assoctransport: AssoctransportInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Assoctransport` mutation."""
type CreateAssoctransportPayload {
  """Reads a single `Agency` that is related to this `Assoctransport`."""
  agencyByAtAgency: Agency

  """The `Assoctransport` that was created by this mutation."""
  assoctransport: Assoctransport

  """An edge for our `Assoctransport`. May be used by Relay 1."""
  assoctransportEdge(
    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctransportsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Transportresource` that is related to this `Assoctransport`.
  """
  transport: Transportresource
}

"""All input for the create `Assoctravelgroup` mutation."""
input CreateAssoctravelgroupInput {
  """The `Assoctravelgroup` to be created by this mutation."""
  assoctravelgroup: AssoctravelgroupInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Assoctravelgroup` mutation."""
type CreateAssoctravelgroupPayload {
  """Reads a single `Agency` that is related to this `Assoctravelgroup`."""
  agencyByAtAgency: Agency

  """The `Assoctravelgroup` that was created by this mutation."""
  assoctravelgroup: Assoctravelgroup

  """An edge for our `Assoctravelgroup`. May be used by Relay 1."""
  assoctravelgroupEdge(
    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctravelgroupsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Travelgroupresource` that is related to this `Assoctravelgroup`.
  """
  travelGroup: Travelgroupresource
}

"""All input for the create `Auctioninfo` mutation."""
input CreateAuctioninfoInput {
  """The `Auctioninfo` to be created by this mutation."""
  auctioninfo: AuctioninfoInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Auctioninfo` mutation."""
type CreateAuctioninfoPayload {
  """The `Auctioninfo` that was created by this mutation."""
  auctioninfo: Auctioninfo

  """An edge for our `Auctioninfo`. May be used by Relay 1."""
  auctioninfoEdge(
    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosEdge

  """Reads a single `Bid` that is related to this `Auctioninfo`."""
  bid: Bid

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Auctioninfo`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Auctioninfo`."""
  publishedBy: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Bid` mutation."""
input CreateBidInput {
  """The `Bid` to be created by this mutation."""
  bid: BidInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Bid` mutation."""
type CreateBidPayload {
  """The `Bid` that was created by this mutation."""
  bid: Bid

  """An edge for our `Bid`. May be used by Relay 1."""
  bidEdge(
    """The method to use when ordering `Bid`."""
    orderBy: [BidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BidsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Bookingcalendar` mutation."""
input CreateBookingcalendarInput {
  """The `Bookingcalendar` to be created by this mutation."""
  bookingcalendar: BookingcalendarInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Bookingcalendar` mutation."""
type CreateBookingcalendarPayload {
  """The `Bookingcalendar` that was created by this mutation."""
  bookingcalendar: Bookingcalendar

  """An edge for our `Bookingcalendar`. May be used by Relay 1."""
  bookingcalendarEdge(
    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BookingcalendarsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Bookingcalendar`."""
  createdBy: Usertable

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Calendarentry` mutation."""
input CreateCalendarentryInput {
  """The `Calendarentry` to be created by this mutation."""
  calendarentry: CalendarentryInput!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our create `Calendarentry` mutation."""
type CreateCalendarentryPayload {
  """The `Calendarentry` that was created by this mutation."""
  calendarentry: Calendarentry

  """An edge for our `Calendarentry`. May be used by Relay 1."""
  calendarentryEdge(
    """The method to use when ordering `Calendarentry`."""
    orderBy: [CalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarentriesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Commandlogentry` mutation."""
input CreateCommandlogentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Commandlogentry` to be created by this mutation."""
  commandlogentry: CommandlogentryInput!
}

"""The output of our create `Commandlogentry` mutation."""
type CreateCommandlogentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Commandlogentry` that was created by this mutation."""
  commandlogentry: Commandlogentry

  """An edge for our `Commandlogentry`. May be used by Relay 1."""
  commandlogentryEdge(
    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CommandlogentriesEdge

  """Reads a single `Publisher` that is related to this `Commandlogentry`."""
  publisherByAtPublisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Contact` mutation."""
input CreateContactInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Contact` to be created by this mutation."""
  contact: ContactInput!
}

"""The output of our create `Contact` mutation."""
type CreateContactPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Contact` that was created by this mutation."""
  contact: Contact

  """An edge for our `Contact`. May be used by Relay 1."""
  contactEdge(
    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ContactsEdge

  """Reads a single `Usertable` that is related to this `Contact`."""
  createdBy: Usertable

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Date_` mutation."""
input CreateDateInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Date_` to be created by this mutation."""
  date_: DateInput!
}

"""The output of our create `Date_` mutation."""
type CreateDatePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Date_` that was created by this mutation."""
  date_: Date_

  """An edge for our `Date_`. May be used by Relay 1."""
  dateEdge(
    """The method to use when ordering `Date_`."""
    orderBy: [DatesOrderBy!] = [NATURAL]
  ): DatesEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Destinationresource` mutation."""
input CreateDestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Destinationresource` to be created by this mutation."""
  destinationresource: DestinationresourceInput!
}

"""The output of our create `Destinationresource` mutation."""
type CreateDestinationresourcePayload {
  """
  Reads a single `Bookingcalendar` that is related to this `Destinationresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Destinationresource`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  createdBy: Usertable

  """The `Destinationresource` that was created by this mutation."""
  destinationresource: Destinationresource

  """An edge for our `Destinationresource`. May be used by Relay 1."""
  destinationresourceEdge(
    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesEdge

  """
  Reads a single `Geocoding` that is related to this `Destinationresource`.
  """
  geoCoding: Geocoding

  """
  Reads a single `Presentation` that is related to this `Destinationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Priceinfo` that is related to this `Destinationresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Publisher` that is related to this `Destinationresource`.
  """
  publishedBy: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Triptype` that is related to this `Destinationresource`.
  """
  triptypeByAtAgencyAndTripTypeName: Triptype

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  usertableByLastModifiedBy: Usertable
}

"""All input for the create `Eventresource` mutation."""
input CreateEventresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Eventresource` to be created by this mutation."""
  eventresource: EventresourceInput!
}

"""The output of our create `Eventresource` mutation."""
type CreateEventresourcePayload {
  """
  Reads a single `Bookingcalendar` that is related to this `Eventresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Eventresource`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Eventresource`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Eventresource`."""
  createdBy: Usertable

  """The `Eventresource` that was created by this mutation."""
  eventresource: Eventresource

  """An edge for our `Eventresource`. May be used by Relay 1."""
  eventresourceEdge(
    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesEdge

  """Reads a single `Guide` that is related to this `Eventresource`."""
  guideByAtGuide: Guide

  """Reads a single `Contact` that is related to this `Eventresource`."""
  locationAddress: Contact

  """Reads a single `Presentation` that is related to this `Eventresource`."""
  presentation: Presentation

  """Reads a single `Publisher` that is related to this `Eventresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Triptype` that is related to this `Eventresource`."""
  triptypeByAtAgencyAndTripTypeName: Triptype
}

"""All input for the create `Geocoding` mutation."""
input CreateGeocodingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Geocoding` to be created by this mutation."""
  geocoding: GeocodingInput!
}

"""The output of our create `Geocoding` mutation."""
type CreateGeocodingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Geocoding`."""
  createdBy: Usertable

  """The `Geocoding` that was created by this mutation."""
  geocoding: Geocoding

  """An edge for our `Geocoding`. May be used by Relay 1."""
  geocodingEdge(
    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GeocodingsEdge

  """Reads a single `Publisher` that is related to this `Geocoding`."""
  publishedBy: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Guidebid` mutation."""
input CreateGuidebidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guidebid` to be created by this mutation."""
  guidebid: GuidebidInput!
}

"""The output of our create `Guidebid` mutation."""
type CreateGuidebidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidebid` that was created by this mutation."""
  guidebid: Guidebid

  """An edge for our `Guidebid`. May be used by Relay 1."""
  guidebidEdge(
    """The method to use when ordering `Guidebid`."""
    orderBy: [GuidebidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidebidsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Guidedeal` mutation."""
input CreateGuidedealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guidedeal` to be created by this mutation."""
  guidedeal: GuidedealInput!
}

"""The output of our create `Guidedeal` mutation."""
type CreateGuidedealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidedeal` that was created by this mutation."""
  guidedeal: Guidedeal

  """An edge for our `Guidedeal`. May be used by Relay 1."""
  guidedealEdge(
    """The method to use when ordering `Guidedeal`."""
    orderBy: [GuidedealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidedealsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Guidefavorite` mutation."""
input CreateGuidefavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guidefavorite` to be created by this mutation."""
  guidefavorite: GuidefavoriteInput!
}

"""The output of our create `Guidefavorite` mutation."""
type CreateGuidefavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidefavorite` that was created by this mutation."""
  guidefavorite: Guidefavorite

  """An edge for our `Guidefavorite`. May be used by Relay 1."""
  guidefavoriteEdge(
    """The method to use when ordering `Guidefavorite`."""
    orderBy: [GuidefavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidefavoritesEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Guide` mutation."""
input CreateGuideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guide` to be created by this mutation."""
  guide: GuideInput!
}

"""All input for the create `Guideoffer` mutation."""
input CreateGuideofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guideoffer` to be created by this mutation."""
  guideoffer: GuideofferInput!
}

"""The output of our create `Guideoffer` mutation."""
type CreateGuideofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guideoffer` that was created by this mutation."""
  guideoffer: Guideoffer

  """An edge for our `Guideoffer`. May be used by Relay 1."""
  guideofferEdge(
    """The method to use when ordering `Guideoffer`."""
    orderBy: [GuideoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideoffersEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""The output of our create `Guide` mutation."""
type CreateGuidePayload {
  """Reads a single `Agency` that is related to this `Guide`."""
  agencyByAtAgency: Agency

  """Reads a single `Bookingcalendar` that is related to this `Guide`."""
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Guide`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Guide`."""
  createdBy: Usertable

  """The `Guide` that was created by this mutation."""
  guide: Guide

  """Reads a single `Guidebid` that is related to this `Guide`."""
  guideBid: Guidebid

  """Reads a single `Guidedeal` that is related to this `Guide`."""
  guideDeal: Guidedeal

  """An edge for our `Guide`. May be used by Relay 1."""
  guideEdge(
    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesEdge

  """Reads a single `Guidefavorite` that is related to this `Guide`."""
  guideFavorite: Guidefavorite

  """Reads a single `Guideoffer` that is related to this `Guide`."""
  guideOffer: Guideoffer

  """Reads a single `Languagelevel` that is related to this `Guide`."""
  languageLevel: Languagelevel

  """Reads a single `Publisher` that is related to this `Guide`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Guideresource` mutation."""
input CreateGuideresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guideresource` to be created by this mutation."""
  guideresource: GuideresourceInput!
}

"""The output of our create `Guideresource` mutation."""
type CreateGuideresourcePayload {
  """Reads a single `Agency` that is related to this `Guideresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Guideresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Guideresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guideresource`."""
  guideByAtGuide: Guide

  """The `Guideresource` that was created by this mutation."""
  guideresource: Guideresource

  """An edge for our `Guideresource`. May be used by Relay 1."""
  guideresourceEdge(
    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesEdge

  """Reads a single `Priceinfo` that is related to this `Guideresource`."""
  priceInfo: Priceinfo

  """Reads a single `Publisher` that is related to this `Guideresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Timerange` that is related to this `Guideresource`."""
  timeRange: Timerange
}

"""All input for the create `Guidereview` mutation."""
input CreateGuidereviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guidereview` to be created by this mutation."""
  guidereview: GuidereviewInput!
}

"""The output of our create `Guidereview` mutation."""
type CreateGuidereviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Guidereview`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guidereview`."""
  guideByGuideIdTarget: Guide

  """The `Guidereview` that was created by this mutation."""
  guidereview: Guidereview

  """An edge for our `Guidereview`. May be used by Relay 1."""
  guidereviewEdge(
    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsEdge

  """Reads a single `Publisher` that is related to this `Guidereview`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Hostresource` mutation."""
input CreateHostresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Hostresource` to be created by this mutation."""
  hostresource: HostresourceInput!
}

"""The output of our create `Hostresource` mutation."""
type CreateHostresourcePayload {
  """
  Reads a single `Accomodationresource` that is related to this `Hostresource`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Contact` that is related to this `Hostresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Hostresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Hostresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Hostresource`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Hostresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Hostresource`."""
  guideByAtGuide: Guide

  """The `Hostresource` that was created by this mutation."""
  hostresource: Hostresource

  """An edge for our `Hostresource`. May be used by Relay 1."""
  hostresourceEdge(
    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesEdge

  """Reads a single `Presentation` that is related to this `Hostresource`."""
  presentation: Presentation

  """Reads a single `Publisher` that is related to this `Hostresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Languagelevel` mutation."""
input CreateLanguagelevelInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Languagelevel` to be created by this mutation."""
  languagelevel: LanguagelevelInput!
}

"""The output of our create `Languagelevel` mutation."""
type CreateLanguagelevelPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Languagelevel`."""
  createdBy: Usertable

  """The `Languagelevel` that was created by this mutation."""
  languagelevel: Languagelevel

  """An edge for our `Languagelevel`. May be used by Relay 1."""
  languagelevelEdge(
    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LanguagelevelsEdge

  """Reads a single `Publisher` that is related to this `Languagelevel`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Mediadestinationresource` mutation."""
input CreateMediadestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Mediadestinationresource` to be created by this mutation."""
  mediadestinationresource: MediadestinationresourceInput!
}

"""The output of our create `Mediadestinationresource` mutation."""
type CreateMediadestinationresourcePayload {
  """
  Reads a single `Agency` that is related to this `Mediadestinationresource`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Destinationresource` that is related to this `Mediadestinationresource`.
  """
  destinationresourceByAtDestination: Destinationresource

  """The `Mediadestinationresource` that was created by this mutation."""
  mediadestinationresource: Mediadestinationresource

  """An edge for our `Mediadestinationresource`. May be used by Relay 1."""
  mediadestinationresourceEdge(
    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesEdge

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByGuideImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery1: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery10: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery2: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery3: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery4: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery5: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery6: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery7: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery8: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery9: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMainImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMapImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByThumbnailImage: Medialocation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Usertable` that is related to this `Mediadestinationresource`.
  """
  usertableByLastModifiedBy: Usertable
}

"""All input for the create `Medialocation` mutation."""
input CreateMedialocationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Medialocation` to be created by this mutation."""
  medialocation: MedialocationInput!
}

"""The output of our create `Medialocation` mutation."""
type CreateMedialocationPayload {
  """Reads a single `Agency` that is related to this `Medialocation`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Medialocation` that was created by this mutation."""
  medialocation: Medialocation

  """An edge for our `Medialocation`. May be used by Relay 1."""
  medialocationEdge(
    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MedialocationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `createOrganization` mutation."""
input CreateOrganizationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  name: String!
  slug: String!
}

"""All input for the create `OrganizationInvitation` mutation."""
input CreateOrganizationInvitationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `OrganizationInvitation` to be created by this mutation."""
  organizationInvitation: OrganizationInvitationInput!
}

"""The output of our create `OrganizationInvitation` mutation."""
type CreateOrganizationInvitationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Organization` that is related to this `OrganizationInvitation`.
  """
  organization: Organization

  """The `OrganizationInvitation` that was created by this mutation."""
  organizationInvitation: OrganizationInvitation

  """An edge for our `OrganizationInvitation`. May be used by Relay 1."""
  organizationInvitationEdge(
    """The method to use when ordering `OrganizationInvitation`."""
    orderBy: [OrganizationInvitationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationInvitationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `User` that is related to this `OrganizationInvitation`.
  """
  user: User
}

"""All input for the create `OrganizationMembership` mutation."""
input CreateOrganizationMembershipInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `OrganizationMembership` to be created by this mutation."""
  organizationMembership: OrganizationMembershipInput!
}

"""The output of our create `OrganizationMembership` mutation."""
type CreateOrganizationMembershipPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Organization` that is related to this `OrganizationMembership`.
  """
  organization: Organization

  """The `OrganizationMembership` that was created by this mutation."""
  organizationMembership: OrganizationMembership

  """An edge for our `OrganizationMembership`. May be used by Relay 1."""
  organizationMembershipEdge(
    """The method to use when ordering `OrganizationMembership`."""
    orderBy: [OrganizationMembershipsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationMembershipsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `User` that is related to this `OrganizationMembership`.
  """
  user: User
}

"""The output of our `createOrganization` mutation."""
type CreateOrganizationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  organization: Organization

  """An edge for our `Organization`. May be used by Relay 1."""
  organizationEdge(
    """The method to use when ordering `Organization`."""
    orderBy: [OrganizationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Post` mutation."""
input CreatePostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Post` to be created by this mutation."""
  post: PostInput!
}

"""The output of our create `Post` mutation."""
type CreatePostPayload {
  """Reads a single `User` that is related to this `Post`."""
  author: User

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Post` that was created by this mutation."""
  post: Post

  """An edge for our `Post`. May be used by Relay 1."""
  postEdge(
    """The method to use when ordering `Post`."""
    orderBy: [PostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PostsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Topic` that is related to this `Post`."""
  topicByTopic: Topic
}

"""All input for the create `Presentation` mutation."""
input CreatePresentationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Presentation` to be created by this mutation."""
  presentation: PresentationInput!
}

"""The output of our create `Presentation` mutation."""
type CreatePresentationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Presentation`."""
  createdBy: Usertable

  """The `Presentation` that was created by this mutation."""
  presentation: Presentation

  """An edge for our `Presentation`. May be used by Relay 1."""
  presentationEdge(
    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PresentationsEdge

  """Reads a single `Publisher` that is related to this `Presentation`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Priceinfo` mutation."""
input CreatePriceinfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Priceinfo` to be created by this mutation."""
  priceinfo: PriceinfoInput!
}

"""The output of our create `Priceinfo` mutation."""
type CreatePriceinfoPayload {
  """Reads a single `Bid` that is related to this `Priceinfo`."""
  bid: Bid

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Priceinfo`."""
  createdBy: Usertable

  """The `Priceinfo` that was created by this mutation."""
  priceinfo: Priceinfo

  """An edge for our `Priceinfo`. May be used by Relay 1."""
  priceinfoEdge(
    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosEdge

  """Reads a single `Publisher` that is related to this `Priceinfo`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Publisher` mutation."""
input CreatePublisherInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Publisher` to be created by this mutation."""
  publisher: PublisherInput!
}

"""The output of our create `Publisher` mutation."""
type CreatePublisherPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Publisher`."""
  createdBy: Usertable

  """The `Publisher` that was created by this mutation."""
  publisher: Publisher

  """An edge for our `Publisher`. May be used by Relay 1."""
  publisherEdge(
    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]
  ): PublishersEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the create `Review` mutation."""
input CreateReviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Review` to be created by this mutation."""
  review: ReviewInput!
}

"""The output of our create `Review` mutation."""
type CreateReviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Review`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Review`."""
  publisher: Publisher

  """Reads a single `Publisher` that is related to this `Review`."""
  publisherByPublisherTarget: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Review` that was created by this mutation."""
  review: Review

  """An edge for our `Review`. May be used by Relay 1."""
  reviewEdge(
    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsEdge
}

"""All input for the create `Roomcalendarentry` mutation."""
input CreateRoomcalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Roomcalendarentry` to be created by this mutation."""
  roomcalendarentry: RoomcalendarentryInput!
}

"""The output of our create `Roomcalendarentry` mutation."""
type CreateRoomcalendarentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Roomcalendar` that is related to this `Roomcalendarentry`.
  """
  roomcalendarByAtRoomCalendar: Roomcalendar

  """The `Roomcalendarentry` that was created by this mutation."""
  roomcalendarentry: Roomcalendarentry

  """An edge for our `Roomcalendarentry`. May be used by Relay 1."""
  roomcalendarentryEdge(
    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarentriesEdge
}

"""All input for the create `Roomcalendar` mutation."""
input CreateRoomcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Roomcalendar` to be created by this mutation."""
  roomcalendar: RoomcalendarInput!
}

"""The output of our create `Roomcalendar` mutation."""
type CreateRoomcalendarPayload {
  """
  Reads a single `Roomcalendarentry` that is related to this `Roomcalendar`.
  """
  calendarentry: Roomcalendarentry

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Roomcalendar`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Roomcalendar`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Roomcalendar` that was created by this mutation."""
  roomcalendar: Roomcalendar

  """An edge for our `Roomcalendar`. May be used by Relay 1."""
  roomcalendarEdge(
    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsEdge
}

"""All input for the create `Roomlist` mutation."""
input CreateRoomlistInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Roomlist` to be created by this mutation."""
  roomlist: RoomlistInput!
}

"""The output of our create `Roomlist` mutation."""
type CreateRoomlistPayload {
  """
  Reads a single `Accomodationresource` that is related to this `Roomlist`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Roomcalendar` that is related to this `Roomlist`."""
  roomCalendar: Roomcalendar

  """The `Roomlist` that was created by this mutation."""
  roomlist: Roomlist

  """An edge for our `Roomlist`. May be used by Relay 1."""
  roomlistEdge(
    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomlistsEdge
}

"""All input for the create `Similarbytriptypeaccomodation` mutation."""
input CreateSimilarbytriptypeaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypeaccomodation` to be created by this mutation."""
  similarbytriptypeaccomodation: SimilarbytriptypeaccomodationInput!
}

"""The output of our create `Similarbytriptypeaccomodation` mutation."""
type CreateSimilarbytriptypeaccomodationPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeaccomodation`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypeaccomodation` that was created by this mutation."""
  similarbytriptypeaccomodation: Similarbytriptypeaccomodation

  """
  An edge for our `Similarbytriptypeaccomodation`. May be used by Relay 1.
  """
  similarbytriptypeaccomodationEdge(
    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeaccomodationsEdge
}

"""All input for the create `Similarbytriptypedestination` mutation."""
input CreateSimilarbytriptypedestinationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypedestination` to be created by this mutation."""
  similarbytriptypedestination: SimilarbytriptypedestinationInput!
}

"""The output of our create `Similarbytriptypedestination` mutation."""
type CreateSimilarbytriptypedestinationPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypedestination`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypedestination` that was created by this mutation."""
  similarbytriptypedestination: Similarbytriptypedestination

  """
  An edge for our `Similarbytriptypedestination`. May be used by Relay 1.
  """
  similarbytriptypedestinationEdge(
    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypedestinationsEdge
}

"""All input for the create `Similarbytriptypeevent` mutation."""
input CreateSimilarbytriptypeeventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypeevent` to be created by this mutation."""
  similarbytriptypeevent: SimilarbytriptypeeventInput!
}

"""The output of our create `Similarbytriptypeevent` mutation."""
type CreateSimilarbytriptypeeventPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeevent`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypeevent` that was created by this mutation."""
  similarbytriptypeevent: Similarbytriptypeevent

  """An edge for our `Similarbytriptypeevent`. May be used by Relay 1."""
  similarbytriptypeeventEdge(
    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeeventsEdge
}

"""All input for the create `Similarbytriptypeguide` mutation."""
input CreateSimilarbytriptypeguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypeguide` to be created by this mutation."""
  similarbytriptypeguide: SimilarbytriptypeguideInput!
}

"""The output of our create `Similarbytriptypeguide` mutation."""
type CreateSimilarbytriptypeguidePayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeguide`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypeguide` that was created by this mutation."""
  similarbytriptypeguide: Similarbytriptypeguide

  """An edge for our `Similarbytriptypeguide`. May be used by Relay 1."""
  similarbytriptypeguideEdge(
    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeguidesEdge
}

"""All input for the create `Similarbytriptypehost` mutation."""
input CreateSimilarbytriptypehostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypehost` to be created by this mutation."""
  similarbytriptypehost: SimilarbytriptypehostInput!
}

"""The output of our create `Similarbytriptypehost` mutation."""
type CreateSimilarbytriptypehostPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypehost`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypehost` that was created by this mutation."""
  similarbytriptypehost: Similarbytriptypehost

  """An edge for our `Similarbytriptypehost`. May be used by Relay 1."""
  similarbytriptypehostEdge(
    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypehostsEdge
}

"""All input for the create `Similarbytriptypetransport` mutation."""
input CreateSimilarbytriptypetransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypetransport` to be created by this mutation."""
  similarbytriptypetransport: SimilarbytriptypetransportInput!
}

"""The output of our create `Similarbytriptypetransport` mutation."""
type CreateSimilarbytriptypetransportPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypetransport`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypetransport` that was created by this mutation."""
  similarbytriptypetransport: Similarbytriptypetransport

  """An edge for our `Similarbytriptypetransport`. May be used by Relay 1."""
  similarbytriptypetransportEdge(
    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetransportsEdge
}

"""All input for the create `Similarbytriptypetravelgroup` mutation."""
input CreateSimilarbytriptypetravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypetravelgroup` to be created by this mutation."""
  similarbytriptypetravelgroup: SimilarbytriptypetravelgroupInput!
}

"""The output of our create `Similarbytriptypetravelgroup` mutation."""
type CreateSimilarbytriptypetravelgroupPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypetravelgroup`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypetravelgroup` that was created by this mutation."""
  similarbytriptypetravelgroup: Similarbytriptypetravelgroup

  """
  An edge for our `Similarbytriptypetravelgroup`. May be used by Relay 1.
  """
  similarbytriptypetravelgroupEdge(
    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetravelgroupsEdge
}

"""All input for the create `Timerange` mutation."""
input CreateTimerangeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Timerange` to be created by this mutation."""
  timerange: TimerangeInput!
}

"""The output of our create `Timerange` mutation."""
type CreateTimerangePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Timerange` that was created by this mutation."""
  timerange: Timerange

  """An edge for our `Timerange`. May be used by Relay 1."""
  timerangeEdge(
    """The method to use when ordering `Timerange`."""
    orderBy: [TimerangesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TimerangesEdge
}

"""All input for the create `Topic` mutation."""
input CreateTopicInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Topic` to be created by this mutation."""
  topic: TopicInput!
}

"""The output of our create `Topic` mutation."""
type CreateTopicPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Topic` that was created by this mutation."""
  topic: Topic

  """An edge for our `Topic`. May be used by Relay 1."""
  topicEdge(
    """The method to use when ordering `Topic`."""
    orderBy: [TopicsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TopicsEdge
}

"""All input for the create `Touristbid` mutation."""
input CreateTouristbidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristbid` to be created by this mutation."""
  touristbid: TouristbidInput!
}

"""The output of our create `Touristbid` mutation."""
type CreateTouristbidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristbid` that was created by this mutation."""
  touristbid: Touristbid

  """An edge for our `Touristbid`. May be used by Relay 1."""
  touristbidEdge(
    """The method to use when ordering `Touristbid`."""
    orderBy: [TouristbidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristbidsEdge
}

"""All input for the create `Touristdeal` mutation."""
input CreateTouristdealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristdeal` to be created by this mutation."""
  touristdeal: TouristdealInput!
}

"""The output of our create `Touristdeal` mutation."""
type CreateTouristdealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristdeal` that was created by this mutation."""
  touristdeal: Touristdeal

  """An edge for our `Touristdeal`. May be used by Relay 1."""
  touristdealEdge(
    """The method to use when ordering `Touristdeal`."""
    orderBy: [TouristdealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristdealsEdge
}

"""All input for the create `Touristfavorite` mutation."""
input CreateTouristfavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristfavorite` to be created by this mutation."""
  touristfavorite: TouristfavoriteInput!
}

"""The output of our create `Touristfavorite` mutation."""
type CreateTouristfavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristfavorite` that was created by this mutation."""
  touristfavorite: Touristfavorite

  """An edge for our `Touristfavorite`. May be used by Relay 1."""
  touristfavoriteEdge(
    """The method to use when ordering `Touristfavorite`."""
    orderBy: [TouristfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristfavoritesEdge
}

"""All input for the create `Tourist` mutation."""
input CreateTouristInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Tourist` to be created by this mutation."""
  tourist: TouristInput!
}

"""All input for the create `Touristoffer` mutation."""
input CreateTouristofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristoffer` to be created by this mutation."""
  touristoffer: TouristofferInput!
}

"""The output of our create `Touristoffer` mutation."""
type CreateTouristofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristoffer` that was created by this mutation."""
  touristoffer: Touristoffer

  """An edge for our `Touristoffer`. May be used by Relay 1."""
  touristofferEdge(
    """The method to use when ordering `Touristoffer`."""
    orderBy: [TouristoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristoffersEdge
}

"""The output of our create `Tourist` mutation."""
type CreateTouristPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Tourist`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Tourist`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Tourist`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Tourist` that was created by this mutation."""
  tourist: Tourist

  """Reads a single `Touristbid` that is related to this `Tourist`."""
  touristBid: Touristbid

  """Reads a single `Touristdeal` that is related to this `Tourist`."""
  touristDeal: Touristdeal

  """An edge for our `Tourist`. May be used by Relay 1."""
  touristEdge(
    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsEdge

  """Reads a single `Touristfavorite` that is related to this `Tourist`."""
  touristFavorite: Touristfavorite

  """Reads a single `Touristoffer` that is related to this `Tourist`."""
  touristOffer: Touristoffer
}

"""All input for the create `Touristresource` mutation."""
input CreateTouristresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristresource` to be created by this mutation."""
  touristresource: TouristresourceInput!
}

"""The output of our create `Touristresource` mutation."""
type CreateTouristresourcePayload {
  """Reads a single `Agency` that is related to this `Touristresource`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Touristresource`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Touristresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Touristresource`."""
  guideByAtGuide: Guide

  """Reads a single `Priceinfo` that is related to this `Touristresource`."""
  priceInfo: Priceinfo

  """Reads a single `Publisher` that is related to this `Touristresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristresource` that was created by this mutation."""
  touristresource: Touristresource

  """An edge for our `Touristresource`. May be used by Relay 1."""
  touristresourceEdge(
    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesEdge

  """
  Reads a single `Travelgroupresource` that is related to this `Touristresource`.
  """
  travelgroupresourceByAtTravelGroup: Travelgroupresource

  """
  Reads a single `Bookingcalendar` that is related to this `Touristresource`.
  """
  travellingCalendar: Bookingcalendar
}

"""All input for the create `Touristreview` mutation."""
input CreateTouristreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristreview` to be created by this mutation."""
  touristreview: TouristreviewInput!
}

"""The output of our create `Touristreview` mutation."""
type CreateTouristreviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Touristreview`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Touristreview`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Tourist` that is related to this `Touristreview`."""
  touristByTouristIdTarget: Tourist

  """The `Touristreview` that was created by this mutation."""
  touristreview: Touristreview

  """An edge for our `Touristreview`. May be used by Relay 1."""
  touristreviewEdge(
    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsEdge
}

"""All input for the create `Transportresource` mutation."""
input CreateTransportresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Transportresource` to be created by this mutation."""
  transportresource: TransportresourceInput!
}

"""The output of our create `Transportresource` mutation."""
type CreateTransportresourcePayload {
  """Reads a single `Contact` that is related to this `Transportresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Transportresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Transportresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Transportresource`."""
  contact: Contact

  """
  Reads a single `Usertable` that is related to this `Transportresource`.
  """
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Transportresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Presentation` that is related to this `Transportresource`.
  """
  presentation: Presentation

  """
  Reads a single `Publisher` that is related to this `Transportresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Transportresource` that was created by this mutation."""
  transportresource: Transportresource

  """An edge for our `Transportresource`. May be used by Relay 1."""
  transportresourceEdge(
    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesEdge
}

"""All input for the create `Travelgroupresource` mutation."""
input CreateTravelgroupresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Travelgroupresource` to be created by this mutation."""
  travelgroupresource: TravelgroupresourceInput!
}

"""The output of our create `Travelgroupresource` mutation."""
type CreateTravelgroupresourcePayload {
  """Reads a single `Agency` that is related to this `Travelgroupresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Travelgroupresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Contact` that is related to this `Travelgroupresource`.
  """
  contact: Contact

  """
  Reads a single `Usertable` that is related to this `Travelgroupresource`.
  """
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Travelgroupresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Publisher` that is related to this `Travelgroupresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Touristresource` that is related to this `Travelgroupresource`.
  """
  touristresourceByAtTouristResource: Touristresource

  """The `Travelgroupresource` that was created by this mutation."""
  travelgroupresource: Travelgroupresource

  """An edge for our `Travelgroupresource`. May be used by Relay 1."""
  travelgroupresourceEdge(
    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesEdge

  """
  Reads a single `Tripofferresource` that is related to this `Travelgroupresource`.
  """
  tripofferresourceByAtTripOfferResource: Tripofferresource
}

"""All input for the create `Tripofferresource` mutation."""
input CreateTripofferresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Tripofferresource` to be created by this mutation."""
  tripofferresource: TripofferresourceInput!
}

"""The output of our create `Tripofferresource` mutation."""
type CreateTripofferresourcePayload {
  """Reads a single `Agency` that is related to this `Tripofferresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Tripofferresource`.
  """
  availableAtCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Usertable` that is related to this `Tripofferresource`.
  """
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideResponsible: Guide

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideSecondary: Guide

  """
  Reads a single `Priceinfo` that is related to this `Tripofferresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Publisher` that is related to this `Tripofferresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Tripofferresource` that was created by this mutation."""
  tripofferresource: Tripofferresource

  """An edge for our `Tripofferresource`. May be used by Relay 1."""
  tripofferresourceEdge(
    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesEdge
}

"""All input for the create `Triptype` mutation."""
input CreateTriptypeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Triptype` to be created by this mutation."""
  triptype: TriptypeInput!
}

"""The output of our create `Triptype` mutation."""
type CreateTriptypePayload {
  """Reads a single `Agency` that is related to this `Triptype`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Triptype` that was created by this mutation."""
  triptype: Triptype

  """An edge for our `Triptype`. May be used by Relay 1."""
  triptypeEdge(
    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TriptypesEdge
}

"""All input for the create `UserAuthentication` mutation."""
input CreateUserAuthenticationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UserAuthentication` to be created by this mutation."""
  userAuthentication: UserAuthenticationInput!
}

"""The output of our create `UserAuthentication` mutation."""
type CreateUserAuthenticationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserAuthentication`."""
  user: User

  """The `UserAuthentication` that was created by this mutation."""
  userAuthentication: UserAuthentication
}

"""All input for the create `UserEmail` mutation."""
input CreateUserEmailInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UserEmail` to be created by this mutation."""
  userEmail: UserEmailInput!
}

"""The output of our create `UserEmail` mutation."""
type CreateUserEmailPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserEmail`."""
  user: User

  """The `UserEmail` that was created by this mutation."""
  userEmail: UserEmail

  """An edge for our `UserEmail`. May be used by Relay 1."""
  userEmailEdge(
    """The method to use when ordering `UserEmail`."""
    orderBy: [UserEmailsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserEmailsEdge
}

"""All input for the create `UserFeedPost` mutation."""
input CreateUserFeedPostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UserFeedPost` to be created by this mutation."""
  userFeedPost: UserFeedPostInput!
}

"""The output of our create `UserFeedPost` mutation."""
type CreateUserFeedPostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Post` that is related to this `UserFeedPost`."""
  post: Post

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserFeedPost`."""
  user: User

  """The `UserFeedPost` that was created by this mutation."""
  userFeedPost: UserFeedPost

  """An edge for our `UserFeedPost`. May be used by Relay 1."""
  userFeedPostEdge(
    """The method to use when ordering `UserFeedPost`."""
    orderBy: [UserFeedPostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserFeedPostsEdge
}

"""All input for the create `User` mutation."""
input CreateUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `User` to be created by this mutation."""
  user: UserInput!
}

"""The output of our create `User` mutation."""
type CreateUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `User` that was created by this mutation."""
  user: User

  """An edge for our `User`. May be used by Relay 1."""
  userEdge(
    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersEdge
}

"""All input for the create `Usertable` mutation."""
input CreateUsertableInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Usertable` to be created by this mutation."""
  usertable: UsertableInput!
}

"""The output of our create `Usertable` mutation."""
type CreateUsertablePayload {
  """Reads a single `Account` that is related to this `Usertable`."""
  accountById: Account

  """Reads a single `Agency` that is related to this `Usertable`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Guide` that is related to this `Usertable`."""
  guideByAtGuide: Guide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Tourist` that is related to this `Usertable`."""
  touristByAtTourist: Tourist

  """The `Usertable` that was created by this mutation."""
  usertable: Usertable

  """An edge for our `Usertable`. May be used by Relay 1."""
  usertableEdge(
    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesEdge
}

"""A location in a connection that can be used for resuming pagination."""
scalar Cursor

"""The day, does not include a time."""
scalar Date

type Date_ {
  allDayEvent: Boolean!
  day: String
  hour: String
  minute: String
  month: String
  timeCreated: Datetime
  timeStamp: Datetime
  useTimeStamp: Boolean!
  year: String
}

"""An input for mutations affecting `Date_`"""
input DateInput {
  allDayEvent: Boolean
  day: String
  hour: String
  minute: String
  month: String
  timeCreated: Datetime
  timeStamp: Datetime
  useTimeStamp: Boolean
  year: String
}

"""A connection to a list of `Date_` values."""
type DatesConnection {
  """
  A list of edges which contains the `Date_` and cursor to aid in pagination.
  """
  edges: [DatesEdge!]!

  """A list of `Date_` objects."""
  nodes: [Date_!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Date_` you could get from the connection."""
  totalCount: Int!
}

"""A `Date_` edge in the connection."""
type DatesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Date_` at the end of the edge."""
  node: Date_!
}

"""Methods to use when ordering `Date_`."""
enum DatesOrderBy {
  NATURAL
}

"""
A point in time as described by the [ISO
8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.
"""
scalar Datetime

"""All input for the `deleteAccomodationresourceByNodeId` mutation."""
input DeleteAccomodationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Accomodationresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAccomodationresource` mutation."""
input DeleteAccomodationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Accomodationresource` mutation."""
type DeleteAccomodationresourcePayload {
  """The `Accomodationresource` that was deleted by this mutation."""
  accomodationresource: Accomodationresource

  """An edge for our `Accomodationresource`. May be used by Relay 1."""
  accomodationresourceEdge(
    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesEdge

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  address: Contact

  """
  Reads a single `Agency` that is related to this `Accomodationresource`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  contact: Contact

  """
  Reads a single `Usertable` that is related to this `Accomodationresource`.
  """
  createdBy: Usertable
  deletedAccomodationresourceNodeId: ID

  """Reads a single `Guide` that is related to this `Accomodationresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Bookingcalendar` that is related to this `Accomodationresource`.
  """
  locationCalendar: Bookingcalendar

  """
  Reads a single `Presentation` that is related to this `Accomodationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Publisher` that is related to this `Accomodationresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Triptype` that is related to this `Accomodationresource`.
  """
  triptypeByAtAgencyAndTripTypeName: Triptype
}

"""All input for the `deleteAccountByNodeId` mutation."""
input DeleteAccountByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Account` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAccountingByNodeId` mutation."""
input DeleteAccountingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Accounting` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAccounting` mutation."""
input DeleteAccountingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Accounting` mutation."""
type DeleteAccountingPayload {
  """The `Accounting` that was deleted by this mutation."""
  accounting: Accounting

  """An edge for our `Accounting`. May be used by Relay 1."""
  accountingEdge(
    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountingsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAccountingNodeId: ID

  """Reads a single `Publisher` that is related to this `Accounting`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAccount` mutation."""
input DeleteAccountInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Account` mutation."""
type DeleteAccountPayload {
  """The `Account` that was deleted by this mutation."""
  account: Account

  """An edge for our `Account`. May be used by Relay 1."""
  accountEdge(
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAccountNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgencyaccomodationByNodeId` mutation."""
input DeleteAgencyaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyaccomodation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyaccomodation` mutation."""
input DeleteAgencyaccomodationInput {
  accomodationId: Int!
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our delete `Agencyaccomodation` mutation."""
type DeleteAgencyaccomodationPayload {
  """
  Reads a single `Accomodationresource` that is related to this `Agencyaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Agencyaccomodation`."""
  agency: Agency

  """The `Agencyaccomodation` that was deleted by this mutation."""
  agencyaccomodation: Agencyaccomodation

  """An edge for our `Agencyaccomodation`. May be used by Relay 1."""
  agencyaccomodationEdge(
    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyaccomodationsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencyaccomodationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgencybidByNodeId` mutation."""
input DeleteAgencybidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencybid` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencybid` mutation."""
input DeleteAgencybidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Agencybid` mutation."""
type DeleteAgencybidPayload {
  """Reads a single `Agency` that is related to this `Agencybid`."""
  agency: Agency

  """The `Agencybid` that was deleted by this mutation."""
  agencybid: Agencybid

  """An edge for our `Agencybid`. May be used by Relay 1."""
  agencybidEdge(
    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencybidsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencybidNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgencyByNodeId` mutation."""
input DeleteAgencyByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agency` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencydealByNodeId` mutation."""
input DeleteAgencydealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencydeal` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencydeal` mutation."""
input DeleteAgencydealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Agencydeal` mutation."""
type DeleteAgencydealPayload {
  """The `Agencydeal` that was deleted by this mutation."""
  agencydeal: Agencydeal

  """An edge for our `Agencydeal`. May be used by Relay 1."""
  agencydealEdge(
    """The method to use when ordering `Agencydeal`."""
    orderBy: [AgencydealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencydealsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencydealNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgencyeventByNodeId` mutation."""
input DeleteAgencyeventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyevent` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyevent` mutation."""
input DeleteAgencyeventInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  eventId: Int!
}

"""The output of our delete `Agencyevent` mutation."""
type DeleteAgencyeventPayload {
  """Reads a single `Agency` that is related to this `Agencyevent`."""
  agency: Agency

  """The `Agencyevent` that was deleted by this mutation."""
  agencyevent: Agencyevent

  """An edge for our `Agencyevent`. May be used by Relay 1."""
  agencyeventEdge(
    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyeventsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencyeventNodeId: ID

  """Reads a single `Eventresource` that is related to this `Agencyevent`."""
  event: Eventresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgencyfavoriteByNodeId` mutation."""
input DeleteAgencyfavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyfavorite` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyfavorite` mutation."""
input DeleteAgencyfavoriteInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  resourceId: Int!
  resourceType: Resourcetype!
}

"""The output of our delete `Agencyfavorite` mutation."""
type DeleteAgencyfavoritePayload {
  """Reads a single `Agency` that is related to this `Agencyfavorite`."""
  agencyByAtAgency: Agency

  """The `Agencyfavorite` that was deleted by this mutation."""
  agencyfavorite: Agencyfavorite

  """An edge for our `Agencyfavorite`. May be used by Relay 1."""
  agencyfavoriteEdge(
    """The method to use when ordering `Agencyfavorite`."""
    orderBy: [AgencyfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyfavoritesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencyfavoriteNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgencyguideByNodeId` mutation."""
input DeleteAgencyguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyguide` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyguide` mutation."""
input DeleteAgencyguideInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  guideId: Int!
}

"""The output of our delete `Agencyguide` mutation."""
type DeleteAgencyguidePayload {
  """Reads a single `Agency` that is related to this `Agencyguide`."""
  agency: Agency

  """The `Agencyguide` that was deleted by this mutation."""
  agencyguide: Agencyguide

  """An edge for our `Agencyguide`. May be used by Relay 1."""
  agencyguideEdge(
    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyguidesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencyguideNodeId: ID

  """Reads a single `Guide` that is related to this `Agencyguide`."""
  guide: Guide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgencyhostByNodeId` mutation."""
input DeleteAgencyhostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyhost` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyhost` mutation."""
input DeleteAgencyhostInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  hostId: Int!
}

"""The output of our delete `Agencyhost` mutation."""
type DeleteAgencyhostPayload {
  """Reads a single `Agency` that is related to this `Agencyhost`."""
  agency: Agency

  """The `Agencyhost` that was deleted by this mutation."""
  agencyhost: Agencyhost

  """An edge for our `Agencyhost`. May be used by Relay 1."""
  agencyhostEdge(
    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyhostsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencyhostNodeId: ID

  """Reads a single `Hostresource` that is related to this `Agencyhost`."""
  host: Hostresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgency` mutation."""
input DeleteAgencyInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteAgencyofferByNodeId` mutation."""
input DeleteAgencyofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyoffer` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyoffer` mutation."""
input DeleteAgencyofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Agencyoffer` mutation."""
type DeleteAgencyofferPayload {
  """The `Agencyoffer` that was deleted by this mutation."""
  agencyoffer: Agencyoffer

  """An edge for our `Agencyoffer`. May be used by Relay 1."""
  agencyofferEdge(
    """The method to use when ordering `Agencyoffer`."""
    orderBy: [AgencyoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyoffersEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencyofferNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""The output of our delete `Agency` mutation."""
type DeleteAgencyPayload {
  """The `Agency` that was deleted by this mutation."""
  agency: Agency

  """Reads a single `Agencydeal` that is related to this `Agency`."""
  agencyDeal: Agencydeal

  """An edge for our `Agency`. May be used by Relay 1."""
  agencyEdge(
    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesEdge

  """Reads a single `Agencymedialibrary` that is related to this `Agency`."""
  agencyMediaLibrary: Agencymedialibrary

  """Reads a single `Agencyoffer` that is related to this `Agency`."""
  agencyOffer: Agencyoffer

  """Reads a single `Bookingcalendar` that is related to this `Agency`."""
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Agency`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Agency`."""
  createdBy: Usertable
  deletedAgencyNodeId: ID

  """Reads a single `Publisher` that is related to this `Agency`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgencyreviewByNodeId` mutation."""
input DeleteAgencyreviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyreview` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyreview` mutation."""
input DeleteAgencyreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Agencyreview` mutation."""
type DeleteAgencyreviewPayload {
  """Reads a single `Agency` that is related to this `Agencyreview`."""
  agencyByAgencyIdTarget: Agency

  """The `Agencyreview` that was deleted by this mutation."""
  agencyreview: Agencyreview

  """An edge for our `Agencyreview`. May be used by Relay 1."""
  agencyreviewEdge(
    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Agencyreview`."""
  createdBy: Usertable
  deletedAgencyreviewNodeId: ID

  """Reads a single `Publisher` that is related to this `Agencyreview`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAgencytouristByNodeId` mutation."""
input DeleteAgencytouristByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytourist` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencytourist` mutation."""
input DeleteAgencytouristInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  touristId: Int!
}

"""The output of our delete `Agencytourist` mutation."""
type DeleteAgencytouristPayload {
  """Reads a single `Agency` that is related to this `Agencytourist`."""
  agency: Agency

  """The `Agencytourist` that was deleted by this mutation."""
  agencytourist: Agencytourist

  """An edge for our `Agencytourist`. May be used by Relay 1."""
  agencytouristEdge(
    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytouristsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencytouristNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Touristresource` that is related to this `Agencytourist`.
  """
  tourist: Touristresource
}

"""All input for the `deleteAgencytransportByNodeId` mutation."""
input DeleteAgencytransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytransport` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencytransport` mutation."""
input DeleteAgencytransportInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  transportId: Int!
}

"""The output of our delete `Agencytransport` mutation."""
type DeleteAgencytransportPayload {
  """Reads a single `Agency` that is related to this `Agencytransport`."""
  agency: Agency

  """The `Agencytransport` that was deleted by this mutation."""
  agencytransport: Agencytransport

  """An edge for our `Agencytransport`. May be used by Relay 1."""
  agencytransportEdge(
    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytransportsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencytransportNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Transportresource` that is related to this `Agencytransport`.
  """
  transport: Transportresource
}

"""All input for the `deleteAgencytravelgroupByNodeId` mutation."""
input DeleteAgencytravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytravelgroup` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencytravelgroup` mutation."""
input DeleteAgencytravelgroupInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  travelGroupId: Int!
}

"""The output of our delete `Agencytravelgroup` mutation."""
type DeleteAgencytravelgroupPayload {
  """Reads a single `Agency` that is related to this `Agencytravelgroup`."""
  agency: Agency

  """The `Agencytravelgroup` that was deleted by this mutation."""
  agencytravelgroup: Agencytravelgroup

  """An edge for our `Agencytravelgroup`. May be used by Relay 1."""
  agencytravelgroupEdge(
    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytravelgroupsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencytravelgroupNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Travelgroupresource` that is related to this `Agencytravelgroup`.
  """
  travelGroup: Travelgroupresource
}

"""All input for the `deleteAgencytripofferByNodeId` mutation."""
input DeleteAgencytripofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytripoffer` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencytripoffer` mutation."""
input DeleteAgencytripofferInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  tripOfferId: Int!
}

"""The output of our delete `Agencytripoffer` mutation."""
type DeleteAgencytripofferPayload {
  """Reads a single `Agency` that is related to this `Agencytripoffer`."""
  agency: Agency

  """The `Agencytripoffer` that was deleted by this mutation."""
  agencytripoffer: Agencytripoffer

  """An edge for our `Agencytripoffer`. May be used by Relay 1."""
  agencytripofferEdge(
    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytripoffersEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencytripofferNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Tripofferresource` that is related to this `Agencytripoffer`.
  """
  tripOffer: Tripofferresource
}

"""All input for the `deleteAgencyuserByNodeId` mutation."""
input DeleteAgencyuserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyuser` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyuser` mutation."""
input DeleteAgencyuserInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  userId: Int!
}

"""The output of our delete `Agencyuser` mutation."""
type DeleteAgencyuserPayload {
  """Reads a single `Agency` that is related to this `Agencyuser`."""
  agency: Agency

  """The `Agencyuser` that was deleted by this mutation."""
  agencyuser: Agencyuser

  """An edge for our `Agencyuser`. May be used by Relay 1."""
  agencyuserEdge(
    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyusersEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAgencyuserNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Agencyuser`."""
  user: Usertable
}

"""All input for the `deleteAssocaccomodationByNodeId` mutation."""
input DeleteAssocaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocaccomodation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssocaccomodation` mutation."""
input DeleteAssocaccomodationInput {
  accomodationId: Int!
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our delete `Assocaccomodation` mutation."""
type DeleteAssocaccomodationPayload {
  """
  Reads a single `Accomodationresource` that is related to this `Assocaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Assocaccomodation`."""
  agencyByAtAgency: Agency

  """The `Assocaccomodation` that was deleted by this mutation."""
  assocaccomodation: Assocaccomodation

  """An edge for our `Assocaccomodation`. May be used by Relay 1."""
  assocaccomodationEdge(
    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocaccomodationsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAssocaccomodationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAssocdestinationByNodeId` mutation."""
input DeleteAssocdestinationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocdestination` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssocdestination` mutation."""
input DeleteAssocdestinationInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  destinationId: Int!
}

"""The output of our delete `Assocdestination` mutation."""
type DeleteAssocdestinationPayload {
  """Reads a single `Agency` that is related to this `Assocdestination`."""
  agencyByAtAgency: Agency

  """The `Assocdestination` that was deleted by this mutation."""
  assocdestination: Assocdestination

  """An edge for our `Assocdestination`. May be used by Relay 1."""
  assocdestinationEdge(
    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocdestinationsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAssocdestinationNodeId: ID

  """
  Reads a single `Destinationresource` that is related to this `Assocdestination`.
  """
  destination: Destinationresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAssoceventByNodeId` mutation."""
input DeleteAssoceventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocevent` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssocevent` mutation."""
input DeleteAssoceventInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  eventId: Int!
}

"""The output of our delete `Assocevent` mutation."""
type DeleteAssoceventPayload {
  """Reads a single `Agency` that is related to this `Assocevent`."""
  agencyByAtAgency: Agency

  """The `Assocevent` that was deleted by this mutation."""
  assocevent: Assocevent

  """An edge for our `Assocevent`. May be used by Relay 1."""
  assoceventEdge(
    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoceventsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAssoceventNodeId: ID

  """Reads a single `Eventresource` that is related to this `Assocevent`."""
  event: Eventresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAssocguideByNodeId` mutation."""
input DeleteAssocguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocguide` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssocguide` mutation."""
input DeleteAssocguideInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  guideId: Int!
}

"""The output of our delete `Assocguide` mutation."""
type DeleteAssocguidePayload {
  """Reads a single `Agency` that is related to this `Assocguide`."""
  agencyByAtAgency: Agency

  """The `Assocguide` that was deleted by this mutation."""
  assocguide: Assocguide

  """An edge for our `Assocguide`. May be used by Relay 1."""
  assocguideEdge(
    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocguidesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAssocguideNodeId: ID

  """Reads a single `Guideresource` that is related to this `Assocguide`."""
  guide: Guideresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAssochostByNodeId` mutation."""
input DeleteAssochostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assochost` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssochost` mutation."""
input DeleteAssochostInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  hostId: Int!
}

"""The output of our delete `Assochost` mutation."""
type DeleteAssochostPayload {
  """Reads a single `Agency` that is related to this `Assochost`."""
  agencyByAtAgency: Agency

  """The `Assochost` that was deleted by this mutation."""
  assochost: Assochost

  """An edge for our `Assochost`. May be used by Relay 1."""
  assochostEdge(
    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssochostsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAssochostNodeId: ID

  """Reads a single `Hostresource` that is related to this `Assochost`."""
  host: Hostresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteAssoctransportByNodeId` mutation."""
input DeleteAssoctransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assoctransport` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssoctransport` mutation."""
input DeleteAssoctransportInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  transportId: Int!
}

"""The output of our delete `Assoctransport` mutation."""
type DeleteAssoctransportPayload {
  """Reads a single `Agency` that is related to this `Assoctransport`."""
  agencyByAtAgency: Agency

  """The `Assoctransport` that was deleted by this mutation."""
  assoctransport: Assoctransport

  """An edge for our `Assoctransport`. May be used by Relay 1."""
  assoctransportEdge(
    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctransportsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAssoctransportNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Transportresource` that is related to this `Assoctransport`.
  """
  transport: Transportresource
}

"""All input for the `deleteAssoctravelgroupByNodeId` mutation."""
input DeleteAssoctravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assoctravelgroup` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssoctravelgroup` mutation."""
input DeleteAssoctravelgroupInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  travelGroupId: Int!
}

"""The output of our delete `Assoctravelgroup` mutation."""
type DeleteAssoctravelgroupPayload {
  """Reads a single `Agency` that is related to this `Assoctravelgroup`."""
  agencyByAtAgency: Agency

  """The `Assoctravelgroup` that was deleted by this mutation."""
  assoctravelgroup: Assoctravelgroup

  """An edge for our `Assoctravelgroup`. May be used by Relay 1."""
  assoctravelgroupEdge(
    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctravelgroupsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedAssoctravelgroupNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Travelgroupresource` that is related to this `Assoctravelgroup`.
  """
  travelGroup: Travelgroupresource
}

"""All input for the `deleteAuctioninfoByNodeId` mutation."""
input DeleteAuctioninfoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Auctioninfo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAuctioninfo` mutation."""
input DeleteAuctioninfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Auctioninfo` mutation."""
type DeleteAuctioninfoPayload {
  """The `Auctioninfo` that was deleted by this mutation."""
  auctioninfo: Auctioninfo

  """An edge for our `Auctioninfo`. May be used by Relay 1."""
  auctioninfoEdge(
    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosEdge

  """Reads a single `Bid` that is related to this `Auctioninfo`."""
  bid: Bid

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Auctioninfo`."""
  createdBy: Usertable
  deletedAuctioninfoNodeId: ID

  """Reads a single `Publisher` that is related to this `Auctioninfo`."""
  publishedBy: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteBidByNodeId` mutation."""
input DeleteBidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Bid` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteBid` mutation."""
input DeleteBidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Bid` mutation."""
type DeleteBidPayload {
  """The `Bid` that was deleted by this mutation."""
  bid: Bid

  """An edge for our `Bid`. May be used by Relay 1."""
  bidEdge(
    """The method to use when ordering `Bid`."""
    orderBy: [BidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BidsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedBidNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteBookingcalendarByNodeId` mutation."""
input DeleteBookingcalendarByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Bookingcalendar` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteBookingcalendar` mutation."""
input DeleteBookingcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Bookingcalendar` mutation."""
type DeleteBookingcalendarPayload {
  """The `Bookingcalendar` that was deleted by this mutation."""
  bookingcalendar: Bookingcalendar

  """An edge for our `Bookingcalendar`. May be used by Relay 1."""
  bookingcalendarEdge(
    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BookingcalendarsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Bookingcalendar`."""
  createdBy: Usertable
  deletedBookingcalendarNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteCalendarentryByNodeId` mutation."""
input DeleteCalendarentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Calendarentry` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalendarentry` mutation."""
input DeleteCalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Calendarentry` mutation."""
type DeleteCalendarentryPayload {
  """The `Calendarentry` that was deleted by this mutation."""
  calendarentry: Calendarentry

  """An edge for our `Calendarentry`. May be used by Relay 1."""
  calendarentryEdge(
    """The method to use when ordering `Calendarentry`."""
    orderBy: [CalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarentriesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedCalendarentryNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteCommandlogentryByNodeId` mutation."""
input DeleteCommandlogentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Commandlogentry` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCommandlogentry` mutation."""
input DeleteCommandlogentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Commandlogentry` mutation."""
type DeleteCommandlogentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Commandlogentry` that was deleted by this mutation."""
  commandlogentry: Commandlogentry

  """An edge for our `Commandlogentry`. May be used by Relay 1."""
  commandlogentryEdge(
    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CommandlogentriesEdge
  deletedCommandlogentryNodeId: ID

  """Reads a single `Publisher` that is related to this `Commandlogentry`."""
  publisherByAtPublisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteContactByNodeId` mutation."""
input DeleteContactByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Contact` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteContact` mutation."""
input DeleteContactInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Contact` mutation."""
type DeleteContactPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Contact` that was deleted by this mutation."""
  contact: Contact

  """An edge for our `Contact`. May be used by Relay 1."""
  contactEdge(
    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ContactsEdge

  """Reads a single `Usertable` that is related to this `Contact`."""
  createdBy: Usertable
  deletedContactNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteDestinationresourceByNodeId` mutation."""
input DeleteDestinationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Destinationresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteDestinationresource` mutation."""
input DeleteDestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Destinationresource` mutation."""
type DeleteDestinationresourcePayload {
  """
  Reads a single `Bookingcalendar` that is related to this `Destinationresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Destinationresource`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  createdBy: Usertable
  deletedDestinationresourceNodeId: ID

  """The `Destinationresource` that was deleted by this mutation."""
  destinationresource: Destinationresource

  """An edge for our `Destinationresource`. May be used by Relay 1."""
  destinationresourceEdge(
    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesEdge

  """
  Reads a single `Geocoding` that is related to this `Destinationresource`.
  """
  geoCoding: Geocoding

  """
  Reads a single `Presentation` that is related to this `Destinationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Priceinfo` that is related to this `Destinationresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Publisher` that is related to this `Destinationresource`.
  """
  publishedBy: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Triptype` that is related to this `Destinationresource`.
  """
  triptypeByAtAgencyAndTripTypeName: Triptype

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  usertableByLastModifiedBy: Usertable
}

"""All input for the `deleteEventresourceByNodeId` mutation."""
input DeleteEventresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Eventresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteEventresource` mutation."""
input DeleteEventresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Eventresource` mutation."""
type DeleteEventresourcePayload {
  """
  Reads a single `Bookingcalendar` that is related to this `Eventresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Eventresource`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Eventresource`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Eventresource`."""
  createdBy: Usertable
  deletedEventresourceNodeId: ID

  """The `Eventresource` that was deleted by this mutation."""
  eventresource: Eventresource

  """An edge for our `Eventresource`. May be used by Relay 1."""
  eventresourceEdge(
    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesEdge

  """Reads a single `Guide` that is related to this `Eventresource`."""
  guideByAtGuide: Guide

  """Reads a single `Contact` that is related to this `Eventresource`."""
  locationAddress: Contact

  """Reads a single `Presentation` that is related to this `Eventresource`."""
  presentation: Presentation

  """Reads a single `Publisher` that is related to this `Eventresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Triptype` that is related to this `Eventresource`."""
  triptypeByAtAgencyAndTripTypeName: Triptype
}

"""All input for the `deleteGeocodingByNodeId` mutation."""
input DeleteGeocodingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Geocoding` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGeocoding` mutation."""
input DeleteGeocodingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Geocoding` mutation."""
type DeleteGeocodingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Geocoding`."""
  createdBy: Usertable
  deletedGeocodingNodeId: ID

  """The `Geocoding` that was deleted by this mutation."""
  geocoding: Geocoding

  """An edge for our `Geocoding`. May be used by Relay 1."""
  geocodingEdge(
    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GeocodingsEdge

  """Reads a single `Publisher` that is related to this `Geocoding`."""
  publishedBy: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteGuidebidByNodeId` mutation."""
input DeleteGuidebidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidebid` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidebid` mutation."""
input DeleteGuidebidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guidebid` mutation."""
type DeleteGuidebidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedGuidebidNodeId: ID

  """The `Guidebid` that was deleted by this mutation."""
  guidebid: Guidebid

  """An edge for our `Guidebid`. May be used by Relay 1."""
  guidebidEdge(
    """The method to use when ordering `Guidebid`."""
    orderBy: [GuidebidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidebidsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteGuideByNodeId` mutation."""
input DeleteGuideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guide` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidedealByNodeId` mutation."""
input DeleteGuidedealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidedeal` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidedeal` mutation."""
input DeleteGuidedealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guidedeal` mutation."""
type DeleteGuidedealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedGuidedealNodeId: ID

  """The `Guidedeal` that was deleted by this mutation."""
  guidedeal: Guidedeal

  """An edge for our `Guidedeal`. May be used by Relay 1."""
  guidedealEdge(
    """The method to use when ordering `Guidedeal`."""
    orderBy: [GuidedealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidedealsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteGuidefavoriteByNodeId` mutation."""
input DeleteGuidefavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidefavorite` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidefavorite` mutation."""
input DeleteGuidefavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guidefavorite` mutation."""
type DeleteGuidefavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedGuidefavoriteNodeId: ID

  """The `Guidefavorite` that was deleted by this mutation."""
  guidefavorite: Guidefavorite

  """An edge for our `Guidefavorite`. May be used by Relay 1."""
  guidefavoriteEdge(
    """The method to use when ordering `Guidefavorite`."""
    orderBy: [GuidefavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidefavoritesEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteGuide` mutation."""
input DeleteGuideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteGuideofferByNodeId` mutation."""
input DeleteGuideofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guideoffer` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuideoffer` mutation."""
input DeleteGuideofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guideoffer` mutation."""
type DeleteGuideofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedGuideofferNodeId: ID

  """The `Guideoffer` that was deleted by this mutation."""
  guideoffer: Guideoffer

  """An edge for our `Guideoffer`. May be used by Relay 1."""
  guideofferEdge(
    """The method to use when ordering `Guideoffer`."""
    orderBy: [GuideoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideoffersEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""The output of our delete `Guide` mutation."""
type DeleteGuidePayload {
  """Reads a single `Agency` that is related to this `Guide`."""
  agencyByAtAgency: Agency

  """Reads a single `Bookingcalendar` that is related to this `Guide`."""
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Guide`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Guide`."""
  createdBy: Usertable
  deletedGuideNodeId: ID

  """The `Guide` that was deleted by this mutation."""
  guide: Guide

  """Reads a single `Guidebid` that is related to this `Guide`."""
  guideBid: Guidebid

  """Reads a single `Guidedeal` that is related to this `Guide`."""
  guideDeal: Guidedeal

  """An edge for our `Guide`. May be used by Relay 1."""
  guideEdge(
    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesEdge

  """Reads a single `Guidefavorite` that is related to this `Guide`."""
  guideFavorite: Guidefavorite

  """Reads a single `Guideoffer` that is related to this `Guide`."""
  guideOffer: Guideoffer

  """Reads a single `Languagelevel` that is related to this `Guide`."""
  languageLevel: Languagelevel

  """Reads a single `Publisher` that is related to this `Guide`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteGuideresourceByNodeId` mutation."""
input DeleteGuideresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guideresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuideresource` mutation."""
input DeleteGuideresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guideresource` mutation."""
type DeleteGuideresourcePayload {
  """Reads a single `Agency` that is related to this `Guideresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Guideresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Guideresource`."""
  createdBy: Usertable
  deletedGuideresourceNodeId: ID

  """Reads a single `Guide` that is related to this `Guideresource`."""
  guideByAtGuide: Guide

  """The `Guideresource` that was deleted by this mutation."""
  guideresource: Guideresource

  """An edge for our `Guideresource`. May be used by Relay 1."""
  guideresourceEdge(
    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesEdge

  """Reads a single `Priceinfo` that is related to this `Guideresource`."""
  priceInfo: Priceinfo

  """Reads a single `Publisher` that is related to this `Guideresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Timerange` that is related to this `Guideresource`."""
  timeRange: Timerange
}

"""All input for the `deleteGuidereviewByNodeId` mutation."""
input DeleteGuidereviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidereview` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidereview` mutation."""
input DeleteGuidereviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guidereview` mutation."""
type DeleteGuidereviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Guidereview`."""
  createdBy: Usertable
  deletedGuidereviewNodeId: ID

  """Reads a single `Guide` that is related to this `Guidereview`."""
  guideByGuideIdTarget: Guide

  """The `Guidereview` that was deleted by this mutation."""
  guidereview: Guidereview

  """An edge for our `Guidereview`. May be used by Relay 1."""
  guidereviewEdge(
    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsEdge

  """Reads a single `Publisher` that is related to this `Guidereview`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteHostresourceByNodeId` mutation."""
input DeleteHostresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Hostresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteHostresource` mutation."""
input DeleteHostresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Hostresource` mutation."""
type DeleteHostresourcePayload {
  """
  Reads a single `Accomodationresource` that is related to this `Hostresource`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Contact` that is related to this `Hostresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Hostresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Hostresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Hostresource`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Hostresource`."""
  createdBy: Usertable
  deletedHostresourceNodeId: ID

  """Reads a single `Guide` that is related to this `Hostresource`."""
  guideByAtGuide: Guide

  """The `Hostresource` that was deleted by this mutation."""
  hostresource: Hostresource

  """An edge for our `Hostresource`. May be used by Relay 1."""
  hostresourceEdge(
    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesEdge

  """Reads a single `Presentation` that is related to this `Hostresource`."""
  presentation: Presentation

  """Reads a single `Publisher` that is related to this `Hostresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteLanguagelevelByNodeId` mutation."""
input DeleteLanguagelevelByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Languagelevel` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteLanguagelevel` mutation."""
input DeleteLanguagelevelInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Languagelevel` mutation."""
type DeleteLanguagelevelPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Languagelevel`."""
  createdBy: Usertable
  deletedLanguagelevelNodeId: ID

  """The `Languagelevel` that was deleted by this mutation."""
  languagelevel: Languagelevel

  """An edge for our `Languagelevel`. May be used by Relay 1."""
  languagelevelEdge(
    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LanguagelevelsEdge

  """Reads a single `Publisher` that is related to this `Languagelevel`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteMediadestinationresourceByNodeId` mutation."""
input DeleteMediadestinationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Mediadestinationresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMediadestinationresource` mutation."""
input DeleteMediadestinationresourceInput {
  atAgency: Int!
  atDestination: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our delete `Mediadestinationresource` mutation."""
type DeleteMediadestinationresourcePayload {
  """
  Reads a single `Agency` that is related to this `Mediadestinationresource`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedMediadestinationresourceNodeId: ID

  """
  Reads a single `Destinationresource` that is related to this `Mediadestinationresource`.
  """
  destinationresourceByAtDestination: Destinationresource

  """The `Mediadestinationresource` that was deleted by this mutation."""
  mediadestinationresource: Mediadestinationresource

  """An edge for our `Mediadestinationresource`. May be used by Relay 1."""
  mediadestinationresourceEdge(
    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesEdge

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByGuideImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery1: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery10: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery2: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery3: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery4: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery5: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery6: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery7: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery8: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery9: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMainImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMapImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByThumbnailImage: Medialocation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Usertable` that is related to this `Mediadestinationresource`.
  """
  usertableByLastModifiedBy: Usertable
}

"""All input for the `deleteMedialocationByNodeId` mutation."""
input DeleteMedialocationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Medialocation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMedialocation` mutation."""
input DeleteMedialocationInput {
  atAgency: Int!
  atResource: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  mediaLocationPlacement: Medialocationplacement!
}

"""The output of our delete `Medialocation` mutation."""
type DeleteMedialocationPayload {
  """Reads a single `Agency` that is related to this `Medialocation`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedMedialocationNodeId: ID

  """The `Medialocation` that was deleted by this mutation."""
  medialocation: Medialocation

  """An edge for our `Medialocation`. May be used by Relay 1."""
  medialocationEdge(
    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MedialocationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteOrganization` mutation."""
input DeleteOrganizationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  organizationId: UUID!
}

"""All input for the `deleteOrganizationInvitationByNodeId` mutation."""
input DeleteOrganizationInvitationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `OrganizationInvitation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteOrganizationInvitation` mutation."""
input DeleteOrganizationInvitationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `OrganizationInvitation` mutation."""
type DeleteOrganizationInvitationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedOrganizationInvitationNodeId: ID

  """
  Reads a single `Organization` that is related to this `OrganizationInvitation`.
  """
  organization: Organization

  """The `OrganizationInvitation` that was deleted by this mutation."""
  organizationInvitation: OrganizationInvitation

  """An edge for our `OrganizationInvitation`. May be used by Relay 1."""
  organizationInvitationEdge(
    """The method to use when ordering `OrganizationInvitation`."""
    orderBy: [OrganizationInvitationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationInvitationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `User` that is related to this `OrganizationInvitation`.
  """
  user: User
}

"""All input for the `deleteOrganizationMembershipByNodeId` mutation."""
input DeleteOrganizationMembershipByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `OrganizationMembership` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteOrganizationMembership` mutation."""
input DeleteOrganizationMembershipInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `OrganizationMembership` mutation."""
type DeleteOrganizationMembershipPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedOrganizationMembershipNodeId: ID

  """
  Reads a single `Organization` that is related to this `OrganizationMembership`.
  """
  organization: Organization

  """The `OrganizationMembership` that was deleted by this mutation."""
  organizationMembership: OrganizationMembership

  """An edge for our `OrganizationMembership`. May be used by Relay 1."""
  organizationMembershipEdge(
    """The method to use when ordering `OrganizationMembership`."""
    orderBy: [OrganizationMembershipsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationMembershipsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `User` that is related to this `OrganizationMembership`.
  """
  user: User
}

"""The output of our `deleteOrganization` mutation."""
type DeleteOrganizationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deletePostByNodeId` mutation."""
input DeletePostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Post` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deletePost` mutation."""
input DeletePostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The primary key for the `Post`."""
  id: Int!
}

"""The output of our delete `Post` mutation."""
type DeletePostPayload {
  """Reads a single `User` that is related to this `Post`."""
  author: User

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedPostNodeId: ID

  """The `Post` that was deleted by this mutation."""
  post: Post

  """An edge for our `Post`. May be used by Relay 1."""
  postEdge(
    """The method to use when ordering `Post`."""
    orderBy: [PostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PostsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Topic` that is related to this `Post`."""
  topicByTopic: Topic
}

"""All input for the `deletePresentationByNodeId` mutation."""
input DeletePresentationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Presentation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deletePresentation` mutation."""
input DeletePresentationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Presentation` mutation."""
type DeletePresentationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Presentation`."""
  createdBy: Usertable
  deletedPresentationNodeId: ID

  """The `Presentation` that was deleted by this mutation."""
  presentation: Presentation

  """An edge for our `Presentation`. May be used by Relay 1."""
  presentationEdge(
    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PresentationsEdge

  """Reads a single `Publisher` that is related to this `Presentation`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deletePriceinfoByNodeId` mutation."""
input DeletePriceinfoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Priceinfo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deletePriceinfo` mutation."""
input DeletePriceinfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Priceinfo` mutation."""
type DeletePriceinfoPayload {
  """Reads a single `Bid` that is related to this `Priceinfo`."""
  bid: Bid

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Priceinfo`."""
  createdBy: Usertable
  deletedPriceinfoNodeId: ID

  """The `Priceinfo` that was deleted by this mutation."""
  priceinfo: Priceinfo

  """An edge for our `Priceinfo`. May be used by Relay 1."""
  priceinfoEdge(
    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosEdge

  """Reads a single `Publisher` that is related to this `Priceinfo`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deletePublisherByNodeId` mutation."""
input DeletePublisherByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Publisher` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deletePublisher` mutation."""
input DeletePublisherInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Publisher` mutation."""
type DeletePublisherPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Publisher`."""
  createdBy: Usertable
  deletedPublisherNodeId: ID

  """The `Publisher` that was deleted by this mutation."""
  publisher: Publisher

  """An edge for our `Publisher`. May be used by Relay 1."""
  publisherEdge(
    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]
  ): PublishersEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `deleteReviewByNodeId` mutation."""
input DeleteReviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Review` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteReview` mutation."""
input DeleteReviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Review` mutation."""
type DeleteReviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Review`."""
  createdBy: Usertable
  deletedReviewNodeId: ID

  """Reads a single `Publisher` that is related to this `Review`."""
  publisher: Publisher

  """Reads a single `Publisher` that is related to this `Review`."""
  publisherByPublisherTarget: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Review` that was deleted by this mutation."""
  review: Review

  """An edge for our `Review`. May be used by Relay 1."""
  reviewEdge(
    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsEdge
}

"""All input for the `deleteRoomcalendarByNodeId` mutation."""
input DeleteRoomcalendarByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomcalendar` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteRoomcalendarentryByNodeId` mutation."""
input DeleteRoomcalendarentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomcalendarentry` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteRoomcalendarentry` mutation."""
input DeleteRoomcalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Roomcalendarentry` mutation."""
type DeleteRoomcalendarentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedRoomcalendarentryNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Roomcalendar` that is related to this `Roomcalendarentry`.
  """
  roomcalendarByAtRoomCalendar: Roomcalendar

  """The `Roomcalendarentry` that was deleted by this mutation."""
  roomcalendarentry: Roomcalendarentry

  """An edge for our `Roomcalendarentry`. May be used by Relay 1."""
  roomcalendarentryEdge(
    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarentriesEdge
}

"""All input for the `deleteRoomcalendar` mutation."""
input DeleteRoomcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Roomcalendar` mutation."""
type DeleteRoomcalendarPayload {
  """
  Reads a single `Roomcalendarentry` that is related to this `Roomcalendar`.
  """
  calendarentry: Roomcalendarentry

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Roomcalendar`."""
  createdBy: Usertable
  deletedRoomcalendarNodeId: ID

  """Reads a single `Publisher` that is related to this `Roomcalendar`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Roomcalendar` that was deleted by this mutation."""
  roomcalendar: Roomcalendar

  """An edge for our `Roomcalendar`. May be used by Relay 1."""
  roomcalendarEdge(
    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsEdge
}

"""All input for the `deleteRoomlistByNodeId` mutation."""
input DeleteRoomlistByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomlist` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteRoomlist` mutation."""
input DeleteRoomlistInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Roomlist` mutation."""
type DeleteRoomlistPayload {
  """
  Reads a single `Accomodationresource` that is related to this `Roomlist`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedRoomlistNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Roomcalendar` that is related to this `Roomlist`."""
  roomCalendar: Roomcalendar

  """The `Roomlist` that was deleted by this mutation."""
  roomlist: Roomlist

  """An edge for our `Roomlist`. May be used by Relay 1."""
  roomlistEdge(
    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomlistsEdge
}

"""
All input for the `deleteSimilarbytriptypeaccomodationByNodeId` mutation.
"""
input DeleteSimilarbytriptypeaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeaccomodation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypeaccomodation` mutation."""
input DeleteSimilarbytriptypeaccomodationInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypeaccomodation` mutation."""
type DeleteSimilarbytriptypeaccomodationPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeaccomodation`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedSimilarbytriptypeaccomodationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypeaccomodation` that was deleted by this mutation."""
  similarbytriptypeaccomodation: Similarbytriptypeaccomodation

  """
  An edge for our `Similarbytriptypeaccomodation`. May be used by Relay 1.
  """
  similarbytriptypeaccomodationEdge(
    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeaccomodationsEdge
}

"""
All input for the `deleteSimilarbytriptypedestinationByNodeId` mutation.
"""
input DeleteSimilarbytriptypedestinationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypedestination` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypedestination` mutation."""
input DeleteSimilarbytriptypedestinationInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypedestination` mutation."""
type DeleteSimilarbytriptypedestinationPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypedestination`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedSimilarbytriptypedestinationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypedestination` that was deleted by this mutation."""
  similarbytriptypedestination: Similarbytriptypedestination

  """
  An edge for our `Similarbytriptypedestination`. May be used by Relay 1.
  """
  similarbytriptypedestinationEdge(
    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypedestinationsEdge
}

"""All input for the `deleteSimilarbytriptypeeventByNodeId` mutation."""
input DeleteSimilarbytriptypeeventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeevent` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypeevent` mutation."""
input DeleteSimilarbytriptypeeventInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypeevent` mutation."""
type DeleteSimilarbytriptypeeventPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeevent`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedSimilarbytriptypeeventNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypeevent` that was deleted by this mutation."""
  similarbytriptypeevent: Similarbytriptypeevent

  """An edge for our `Similarbytriptypeevent`. May be used by Relay 1."""
  similarbytriptypeeventEdge(
    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeeventsEdge
}

"""All input for the `deleteSimilarbytriptypeguideByNodeId` mutation."""
input DeleteSimilarbytriptypeguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeguide` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypeguide` mutation."""
input DeleteSimilarbytriptypeguideInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypeguide` mutation."""
type DeleteSimilarbytriptypeguidePayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeguide`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedSimilarbytriptypeguideNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypeguide` that was deleted by this mutation."""
  similarbytriptypeguide: Similarbytriptypeguide

  """An edge for our `Similarbytriptypeguide`. May be used by Relay 1."""
  similarbytriptypeguideEdge(
    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeguidesEdge
}

"""All input for the `deleteSimilarbytriptypehostByNodeId` mutation."""
input DeleteSimilarbytriptypehostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypehost` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypehost` mutation."""
input DeleteSimilarbytriptypehostInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypehost` mutation."""
type DeleteSimilarbytriptypehostPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypehost`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedSimilarbytriptypehostNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypehost` that was deleted by this mutation."""
  similarbytriptypehost: Similarbytriptypehost

  """An edge for our `Similarbytriptypehost`. May be used by Relay 1."""
  similarbytriptypehostEdge(
    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypehostsEdge
}

"""All input for the `deleteSimilarbytriptypetransportByNodeId` mutation."""
input DeleteSimilarbytriptypetransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypetransport` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypetransport` mutation."""
input DeleteSimilarbytriptypetransportInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypetransport` mutation."""
type DeleteSimilarbytriptypetransportPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypetransport`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedSimilarbytriptypetransportNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypetransport` that was deleted by this mutation."""
  similarbytriptypetransport: Similarbytriptypetransport

  """An edge for our `Similarbytriptypetransport`. May be used by Relay 1."""
  similarbytriptypetransportEdge(
    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetransportsEdge
}

"""
All input for the `deleteSimilarbytriptypetravelgroupByNodeId` mutation.
"""
input DeleteSimilarbytriptypetravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypetravelgroup` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypetravelgroup` mutation."""
input DeleteSimilarbytriptypetravelgroupInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypetravelgroup` mutation."""
type DeleteSimilarbytriptypetravelgroupPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypetravelgroup`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedSimilarbytriptypetravelgroupNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypetravelgroup` that was deleted by this mutation."""
  similarbytriptypetravelgroup: Similarbytriptypetravelgroup

  """
  An edge for our `Similarbytriptypetravelgroup`. May be used by Relay 1.
  """
  similarbytriptypetravelgroupEdge(
    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetravelgroupsEdge
}

"""All input for the `deleteTimerangeByNodeId` mutation."""
input DeleteTimerangeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Timerange` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTimerange` mutation."""
input DeleteTimerangeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Timerange` mutation."""
type DeleteTimerangePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedTimerangeNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Timerange` that was deleted by this mutation."""
  timerange: Timerange

  """An edge for our `Timerange`. May be used by Relay 1."""
  timerangeEdge(
    """The method to use when ordering `Timerange`."""
    orderBy: [TimerangesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TimerangesEdge
}

"""All input for the `deleteTopicByNodeId` mutation."""
input DeleteTopicByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Topic` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTopic` mutation."""
input DeleteTopicInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  title: String!
}

"""The output of our delete `Topic` mutation."""
type DeleteTopicPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedTopicNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Topic` that was deleted by this mutation."""
  topic: Topic

  """An edge for our `Topic`. May be used by Relay 1."""
  topicEdge(
    """The method to use when ordering `Topic`."""
    orderBy: [TopicsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TopicsEdge
}

"""All input for the `deleteTouristbidByNodeId` mutation."""
input DeleteTouristbidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristbid` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristbid` mutation."""
input DeleteTouristbidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristbid` mutation."""
type DeleteTouristbidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedTouristbidNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristbid` that was deleted by this mutation."""
  touristbid: Touristbid

  """An edge for our `Touristbid`. May be used by Relay 1."""
  touristbidEdge(
    """The method to use when ordering `Touristbid`."""
    orderBy: [TouristbidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristbidsEdge
}

"""All input for the `deleteTouristByNodeId` mutation."""
input DeleteTouristByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tourist` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristdealByNodeId` mutation."""
input DeleteTouristdealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristdeal` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristdeal` mutation."""
input DeleteTouristdealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristdeal` mutation."""
type DeleteTouristdealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedTouristdealNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristdeal` that was deleted by this mutation."""
  touristdeal: Touristdeal

  """An edge for our `Touristdeal`. May be used by Relay 1."""
  touristdealEdge(
    """The method to use when ordering `Touristdeal`."""
    orderBy: [TouristdealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristdealsEdge
}

"""All input for the `deleteTouristfavoriteByNodeId` mutation."""
input DeleteTouristfavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristfavorite` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristfavorite` mutation."""
input DeleteTouristfavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristfavorite` mutation."""
type DeleteTouristfavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedTouristfavoriteNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristfavorite` that was deleted by this mutation."""
  touristfavorite: Touristfavorite

  """An edge for our `Touristfavorite`. May be used by Relay 1."""
  touristfavoriteEdge(
    """The method to use when ordering `Touristfavorite`."""
    orderBy: [TouristfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristfavoritesEdge
}

"""All input for the `deleteTourist` mutation."""
input DeleteTouristInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteTouristofferByNodeId` mutation."""
input DeleteTouristofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristoffer` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristoffer` mutation."""
input DeleteTouristofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristoffer` mutation."""
type DeleteTouristofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedTouristofferNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristoffer` that was deleted by this mutation."""
  touristoffer: Touristoffer

  """An edge for our `Touristoffer`. May be used by Relay 1."""
  touristofferEdge(
    """The method to use when ordering `Touristoffer`."""
    orderBy: [TouristoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristoffersEdge
}

"""The output of our delete `Tourist` mutation."""
type DeleteTouristPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Tourist`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Tourist`."""
  createdBy: Usertable
  deletedTouristNodeId: ID

  """Reads a single `Publisher` that is related to this `Tourist`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Tourist` that was deleted by this mutation."""
  tourist: Tourist

  """Reads a single `Touristbid` that is related to this `Tourist`."""
  touristBid: Touristbid

  """Reads a single `Touristdeal` that is related to this `Tourist`."""
  touristDeal: Touristdeal

  """An edge for our `Tourist`. May be used by Relay 1."""
  touristEdge(
    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsEdge

  """Reads a single `Touristfavorite` that is related to this `Tourist`."""
  touristFavorite: Touristfavorite

  """Reads a single `Touristoffer` that is related to this `Tourist`."""
  touristOffer: Touristoffer
}

"""All input for the `deleteTouristresourceByNodeId` mutation."""
input DeleteTouristresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristresource` mutation."""
input DeleteTouristresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristresource` mutation."""
type DeleteTouristresourcePayload {
  """Reads a single `Agency` that is related to this `Touristresource`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Touristresource`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Touristresource`."""
  createdBy: Usertable
  deletedTouristresourceNodeId: ID

  """Reads a single `Guide` that is related to this `Touristresource`."""
  guideByAtGuide: Guide

  """Reads a single `Priceinfo` that is related to this `Touristresource`."""
  priceInfo: Priceinfo

  """Reads a single `Publisher` that is related to this `Touristresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristresource` that was deleted by this mutation."""
  touristresource: Touristresource

  """An edge for our `Touristresource`. May be used by Relay 1."""
  touristresourceEdge(
    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesEdge

  """
  Reads a single `Travelgroupresource` that is related to this `Touristresource`.
  """
  travelgroupresourceByAtTravelGroup: Travelgroupresource

  """
  Reads a single `Bookingcalendar` that is related to this `Touristresource`.
  """
  travellingCalendar: Bookingcalendar
}

"""All input for the `deleteTouristreviewByNodeId` mutation."""
input DeleteTouristreviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristreview` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristreview` mutation."""
input DeleteTouristreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristreview` mutation."""
type DeleteTouristreviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Touristreview`."""
  createdBy: Usertable
  deletedTouristreviewNodeId: ID

  """Reads a single `Publisher` that is related to this `Touristreview`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Tourist` that is related to this `Touristreview`."""
  touristByTouristIdTarget: Tourist

  """The `Touristreview` that was deleted by this mutation."""
  touristreview: Touristreview

  """An edge for our `Touristreview`. May be used by Relay 1."""
  touristreviewEdge(
    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsEdge
}

"""All input for the `deleteTransportresourceByNodeId` mutation."""
input DeleteTransportresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Transportresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTransportresource` mutation."""
input DeleteTransportresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Transportresource` mutation."""
type DeleteTransportresourcePayload {
  """Reads a single `Contact` that is related to this `Transportresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Transportresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Transportresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Transportresource`."""
  contact: Contact

  """
  Reads a single `Usertable` that is related to this `Transportresource`.
  """
  createdBy: Usertable
  deletedTransportresourceNodeId: ID

  """Reads a single `Guide` that is related to this `Transportresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Presentation` that is related to this `Transportresource`.
  """
  presentation: Presentation

  """
  Reads a single `Publisher` that is related to this `Transportresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Transportresource` that was deleted by this mutation."""
  transportresource: Transportresource

  """An edge for our `Transportresource`. May be used by Relay 1."""
  transportresourceEdge(
    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesEdge
}

"""All input for the `deleteTravelgroupresourceByNodeId` mutation."""
input DeleteTravelgroupresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Travelgroupresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTravelgroupresource` mutation."""
input DeleteTravelgroupresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Travelgroupresource` mutation."""
type DeleteTravelgroupresourcePayload {
  """Reads a single `Agency` that is related to this `Travelgroupresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Travelgroupresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Contact` that is related to this `Travelgroupresource`.
  """
  contact: Contact

  """
  Reads a single `Usertable` that is related to this `Travelgroupresource`.
  """
  createdBy: Usertable
  deletedTravelgroupresourceNodeId: ID

  """Reads a single `Guide` that is related to this `Travelgroupresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Publisher` that is related to this `Travelgroupresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Touristresource` that is related to this `Travelgroupresource`.
  """
  touristresourceByAtTouristResource: Touristresource

  """The `Travelgroupresource` that was deleted by this mutation."""
  travelgroupresource: Travelgroupresource

  """An edge for our `Travelgroupresource`. May be used by Relay 1."""
  travelgroupresourceEdge(
    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesEdge

  """
  Reads a single `Tripofferresource` that is related to this `Travelgroupresource`.
  """
  tripofferresourceByAtTripOfferResource: Tripofferresource
}

"""All input for the `deleteTripofferresourceByNodeId` mutation."""
input DeleteTripofferresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tripofferresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTripofferresource` mutation."""
input DeleteTripofferresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Tripofferresource` mutation."""
type DeleteTripofferresourcePayload {
  """Reads a single `Agency` that is related to this `Tripofferresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Tripofferresource`.
  """
  availableAtCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Usertable` that is related to this `Tripofferresource`.
  """
  createdBy: Usertable
  deletedTripofferresourceNodeId: ID

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideResponsible: Guide

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideSecondary: Guide

  """
  Reads a single `Priceinfo` that is related to this `Tripofferresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Publisher` that is related to this `Tripofferresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Tripofferresource` that was deleted by this mutation."""
  tripofferresource: Tripofferresource

  """An edge for our `Tripofferresource`. May be used by Relay 1."""
  tripofferresourceEdge(
    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesEdge
}

"""All input for the `deleteTriptypeByNodeId` mutation."""
input DeleteTriptypeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Triptype` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTriptype` mutation."""
input DeleteTriptypeInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  tripTypeName: String!
}

"""The output of our delete `Triptype` mutation."""
type DeleteTriptypePayload {
  """Reads a single `Agency` that is related to this `Triptype`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedTriptypeNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Triptype` that was deleted by this mutation."""
  triptype: Triptype

  """An edge for our `Triptype`. May be used by Relay 1."""
  triptypeEdge(
    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TriptypesEdge
}

"""All input for the `deleteUserAuthenticationByNodeId` mutation."""
input DeleteUserAuthenticationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UserAuthentication` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUserAuthentication` mutation."""
input DeleteUserAuthenticationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `UserAuthentication` mutation."""
type DeleteUserAuthenticationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedUserAuthenticationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserAuthentication`."""
  user: User

  """The `UserAuthentication` that was deleted by this mutation."""
  userAuthentication: UserAuthentication
}

"""All input for the `deleteUserByNodeId` mutation."""
input DeleteUserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `User` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUserEmailByNodeId` mutation."""
input DeleteUserEmailByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UserEmail` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUserEmail` mutation."""
input DeleteUserEmailInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `UserEmail` mutation."""
type DeleteUserEmailPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedUserEmailNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserEmail`."""
  user: User

  """The `UserEmail` that was deleted by this mutation."""
  userEmail: UserEmail

  """An edge for our `UserEmail`. May be used by Relay 1."""
  userEmailEdge(
    """The method to use when ordering `UserEmail`."""
    orderBy: [UserEmailsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserEmailsEdge
}

"""All input for the `deleteUserFeedPostByNodeId` mutation."""
input DeleteUserFeedPostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UserFeedPost` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUserFeedPost` mutation."""
input DeleteUserFeedPostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """An identifier for this entry in the feed."""
  id: Int!
}

"""The output of our delete `UserFeedPost` mutation."""
type DeleteUserFeedPostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedUserFeedPostNodeId: ID

  """Reads a single `Post` that is related to this `UserFeedPost`."""
  post: Post

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserFeedPost`."""
  user: User

  """The `UserFeedPost` that was deleted by this mutation."""
  userFeedPost: UserFeedPost

  """An edge for our `UserFeedPost`. May be used by Relay 1."""
  userFeedPostEdge(
    """The method to use when ordering `UserFeedPost`."""
    orderBy: [UserFeedPostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserFeedPostsEdge
}

"""All input for the `deleteUser` mutation."""
input DeleteUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """Unique identifier for the user."""
  id: UUID!
}

"""The output of our delete `User` mutation."""
type DeleteUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedUserNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `User` that was deleted by this mutation."""
  user: User

  """An edge for our `User`. May be used by Relay 1."""
  userEdge(
    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersEdge
}

"""All input for the `deleteUsertableByNodeId` mutation."""
input DeleteUsertableByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Usertable` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUsertable` mutation."""
input DeleteUsertableInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  userEmail: String!
}

"""The output of our delete `Usertable` mutation."""
type DeleteUsertablePayload {
  """Reads a single `Account` that is related to this `Usertable`."""
  accountById: Account

  """Reads a single `Agency` that is related to this `Usertable`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  deletedUsertableNodeId: ID

  """Reads a single `Guide` that is related to this `Usertable`."""
  guideByAtGuide: Guide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Tourist` that is related to this `Usertable`."""
  touristByAtTourist: Tourist

  """The `Usertable` that was deleted by this mutation."""
  usertable: Usertable

  """An edge for our `Usertable`. May be used by Relay 1."""
  usertableEdge(
    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesEdge
}

type Destinationresource implements Node {
  """
  Reads a single `Bookingcalendar` that is related to this `Destinationresource`.
  """
  activeAtPeriods: Bookingcalendar
  activeAtPeriodsId: Int

  """Reads a single `Agency` that is related to this `Destinationresource`."""
  agencyByAtAgency: Agency
  area: Area

  """Reads and enables pagination through a set of `Assocdestination`."""
  assocdestinationsByDestinationId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocdestinationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocdestinationsConnection!
  atAgency: Int!

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  createdBy: Usertable
  createdById: Int!
  destinationName: String

  """
  Reads a single `Geocoding` that is related to this `Destinationresource`.
  """
  geoCoding: Geocoding
  geoCodingId: Int
  id: Int!
  isActive: Boolean
  isPublic: Boolean!
  judet: Judet
  lastModified: Datetime
  lastModifiedBy: Int

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByAtDestination(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """
  Reads a single `Presentation` that is related to this `Destinationresource`.
  """
  presentation: Presentation
  presentationId: Int

  """
  Reads a single `Priceinfo` that is related to this `Destinationresource`.
  """
  priceInfo: Priceinfo
  priceInfoId: Int

  """
  Reads a single `Publisher` that is related to this `Destinationresource`.
  """
  publishedBy: Publisher
  publishedById: Int!
  timeCreated: Datetime

  """
  Reads a single `Triptype` that is related to this `Destinationresource`.
  """
  triptypeByAtAgencyAndTripTypeName: Triptype
  tripTypeName: String

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  usertableByLastModifiedBy: Usertable
}

"""
A condition to be used against `Destinationresource` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input DestinationresourceCondition {
  """Checks for equality with the object’s `activeAtPeriodsId` field."""
  activeAtPeriodsId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `geoCodingId` field."""
  geoCodingId: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `lastModifiedBy` field."""
  lastModifiedBy: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int

  """Checks for equality with the object’s `priceInfoId` field."""
  priceInfoId: Int

  """Checks for equality with the object’s `publishedById` field."""
  publishedById: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Destinationresource`"""
input DestinationresourceInput {
  activeAtPeriodsId: Int
  area: Area
  atAgency: Int!
  createdById: Int!
  destinationName: String
  geoCodingId: Int
  id: Int
  isActive: Boolean
  isPublic: Boolean
  judet: Judet
  lastModified: Datetime
  lastModifiedBy: Int
  presentationId: Int
  priceInfoId: Int
  publishedById: Int!
  timeCreated: Datetime
  tripTypeName: String
}

"""
Represents an update to a `Destinationresource`. Fields that are set will be updated.
"""
input DestinationresourcePatch {
  activeAtPeriodsId: Int
  area: Area
  atAgency: Int
  createdById: Int
  destinationName: String
  geoCodingId: Int
  id: Int
  isActive: Boolean
  isPublic: Boolean
  judet: Judet
  lastModified: Datetime
  lastModifiedBy: Int
  presentationId: Int
  priceInfoId: Int
  publishedById: Int
  timeCreated: Datetime
  tripTypeName: String
}

"""A connection to a list of `Destinationresource` values."""
type DestinationresourcesConnection {
  """
  A list of edges which contains the `Destinationresource` and cursor to aid in pagination.
  """
  edges: [DestinationresourcesEdge!]!

  """A list of `Destinationresource` objects."""
  nodes: [Destinationresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Destinationresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Destinationresource` edge in the connection."""
type DestinationresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Destinationresource` at the end of the edge."""
  node: Destinationresource!
}

"""Methods to use when ordering `Destinationresource`."""
enum DestinationresourcesOrderBy {
  ACTIVE_AT_PERIODS_ID_ASC
  ACTIVE_AT_PERIODS_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  GEO_CODING_ID_ASC
  GEO_CODING_ID_DESC
  ID_ASC
  ID_DESC
  LAST_MODIFIED_BY_ASC
  LAST_MODIFIED_BY_DESC
  NATURAL
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  PRICE_INFO_ID_ASC
  PRICE_INFO_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHED_BY_ID_ASC
  PUBLISHED_BY_ID_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

type Eventresource implements Node {
  """
  Reads a single `Bookingcalendar` that is related to this `Eventresource`.
  """
  activeAtPeriods: Bookingcalendar
  activeAtPeriodsId: Int!

  """Reads a single `Agency` that is related to this `Eventresource`."""
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Agencyevent`."""
  agencyeventsByEventId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyeventCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyeventsConnection!
  agencyName: String

  """Reads and enables pagination through a set of `Assocevent`."""
  assoceventsByEventId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoceventCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoceventsConnection!
  atAgency: Int
  atGuide: Int

  """Reads a single `Contact` that is related to this `Eventresource`."""
  contact: Contact
  contactId: Int!

  """Reads a single `Usertable` that is related to this `Eventresource`."""
  createdBy: Usertable
  createdById: Int!
  eventName: String

  """Reads a single `Guide` that is related to this `Eventresource`."""
  guideByAtGuide: Guide
  id: Int!
  isActive: Boolean
  isPublic: Boolean!
  lastModified: Datetime
  locatedIn: Area

  """Reads a single `Contact` that is related to this `Eventresource`."""
  locationAddress: Contact
  locationAddressId: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  ownedByAt: Boolean!

  """Reads a single `Presentation` that is related to this `Eventresource`."""
  presentation: Presentation
  presentationId: Int!

  """Reads a single `Publisher` that is related to this `Eventresource`."""
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime

  """Reads a single `Triptype` that is related to this `Eventresource`."""
  triptypeByAtAgencyAndTripTypeName: Triptype
  tripTypeName: String
}

"""
A condition to be used against `Eventresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input EventresourceCondition {
  """Checks for equality with the object’s `activeAtPeriodsId` field."""
  activeAtPeriodsId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `locationAddressId` field."""
  locationAddressId: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Eventresource`"""
input EventresourceInput {
  activeAtPeriodsId: Int!
  agencyName: String
  atAgency: Int
  atGuide: Int
  contactId: Int!
  createdById: Int!
  eventName: String
  id: Int
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  locatedIn: Area
  locationAddressId: Int!
  ownedByAt: Boolean
  presentationId: Int!
  publisherId: Int!
  timeCreated: Datetime
  tripTypeName: String
}

"""
Represents an update to a `Eventresource`. Fields that are set will be updated.
"""
input EventresourcePatch {
  activeAtPeriodsId: Int
  agencyName: String
  atAgency: Int
  atGuide: Int
  contactId: Int
  createdById: Int
  eventName: String
  id: Int
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  locatedIn: Area
  locationAddressId: Int
  ownedByAt: Boolean
  presentationId: Int
  publisherId: Int
  timeCreated: Datetime
  tripTypeName: String
}

"""A connection to a list of `Eventresource` values."""
type EventresourcesConnection {
  """
  A list of edges which contains the `Eventresource` and cursor to aid in pagination.
  """
  edges: [EventresourcesEdge!]!

  """A list of `Eventresource` objects."""
  nodes: [Eventresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Eventresource` you could get from the connection."""
  totalCount: Int!
}

"""A `Eventresource` edge in the connection."""
type EventresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Eventresource` at the end of the edge."""
  node: Eventresource!
}

"""Methods to use when ordering `Eventresource`."""
enum EventresourcesOrderBy {
  ACTIVE_AT_PERIODS_ID_ASC
  ACTIVE_AT_PERIODS_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  LOCATION_ADDRESS_ID_ASC
  LOCATION_ADDRESS_ID_DESC
  NATURAL
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

"""All input for the `forgotPassword` mutation."""
input ForgotPasswordInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  email: String!
}

"""The output of our `forgotPassword` mutation."""
type ForgotPasswordPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

type Geocoding implements Node {
  """Reads a single `Usertable` that is related to this `Geocoding`."""
  createdBy: Usertable
  createdById: Int!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByGeoCodingId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection!
  formattedAdress: String
  id: Int!
  lastModified: Datetime
  locationLat: Int
  locationLng: Int
  locationType: String

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  placesId: String

  """Reads a single `Publisher` that is related to this `Geocoding`."""
  publishedBy: Publisher
  publishedById: Int!
  timeCreated: Datetime
  type: String
  viewportNorthEastLat: Int
  viewportNorthEastLng: Int
  viewportSouthWestLat: Int
  viewportSouthWestLng: Int
}

"""
A condition to be used against `Geocoding` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GeocodingCondition {
  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publishedById` field."""
  publishedById: Int
}

"""An input for mutations affecting `Geocoding`"""
input GeocodingInput {
  createdById: Int!
  formattedAdress: String
  id: Int
  lastModified: Datetime
  locationLat: Int
  locationLng: Int
  locationType: String
  placesId: String
  publishedById: Int!
  timeCreated: Datetime
  type: String
  viewportNorthEastLat: Int
  viewportNorthEastLng: Int
  viewportSouthWestLat: Int
  viewportSouthWestLng: Int
}

"""
Represents an update to a `Geocoding`. Fields that are set will be updated.
"""
input GeocodingPatch {
  createdById: Int
  formattedAdress: String
  id: Int
  lastModified: Datetime
  locationLat: Int
  locationLng: Int
  locationType: String
  placesId: String
  publishedById: Int
  timeCreated: Datetime
  type: String
  viewportNorthEastLat: Int
  viewportNorthEastLng: Int
  viewportSouthWestLat: Int
  viewportSouthWestLng: Int
}

"""A connection to a list of `Geocoding` values."""
type GeocodingsConnection {
  """
  A list of edges which contains the `Geocoding` and cursor to aid in pagination.
  """
  edges: [GeocodingsEdge!]!

  """A list of `Geocoding` objects."""
  nodes: [Geocoding!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Geocoding` you could get from the connection."""
  totalCount: Int!
}

"""A `Geocoding` edge in the connection."""
type GeocodingsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Geocoding` at the end of the edge."""
  node: Geocoding!
}

"""Methods to use when ordering `Geocoding`."""
enum GeocodingsOrderBy {
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHED_BY_ID_ASC
  PUBLISHED_BY_ID_DESC
}

type Guide implements Node {
  accomodationIdPool: [Int]

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByAtGuide(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection!

  """Reads a single `Agency` that is related to this `Guide`."""
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Agencyguide`."""
  agencyguides(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyguideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyguidesConnection!
  agencyReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  areas: [Area]!
  atAgency: Int

  """Reads a single `Bookingcalendar` that is related to this `Guide`."""
  bookingCalendar: Bookingcalendar
  bookingCalendarId: Int!

  """Reads a single `Contact` that is related to this `Guide`."""
  contact: Contact
  contactId: Int!

  """Reads a single `Usertable` that is related to this `Guide`."""
  createdBy: Usertable
  createdById: Int!
  eventIdPool: [Int]

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByAtGuide(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection!

  """Reads a single `Guidebid` that is related to this `Guide`."""
  guideBid: Guidebid
  guideBidId: Int!

  """Reads a single `Guidedeal` that is related to this `Guide`."""
  guideDeal: Guidedeal
  guideDealId: Int!

  """Reads a single `Guidefavorite` that is related to this `Guide`."""
  guideFavorite: Guidefavorite
  guideFavoriteId: Int!
  guideFirstName: String
  guideLastName: String
  guideLicenceUrl: String

  """Reads a single `Guideoffer` that is related to this `Guide`."""
  guideOffer: Guideoffer
  guideOfferId: Int!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByAtGuide(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Guidereview`."""
  guidereviewsByGuideIdTarget(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidereviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsConnection!
  hasGuideLicence: Boolean!
  hasOwnCompany: Boolean!
  hostIdPool: [Int]

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByAtGuide(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection!
  id: Int!
  isActive: Boolean
  isPublic: Boolean!

  """Reads a single `Languagelevel` that is related to this `Guide`."""
  languageLevel: Languagelevel
  languageLevelId: Int!
  lastModified: Datetime
  name: String

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Guide`."""
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByAtGuide(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesConnection!
  touristReviewInIdPool: [Int]
  touristReviewOutIdPool: [Int]
  transportIdPool: [Int]

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByAtGuide(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByAtGuide(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByGuideResponsibleId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByGuideSecondaryId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesConnection!
  tripTypeName: String

  """Reads and enables pagination through a set of `Usertable`."""
  usertablesByAtGuide(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsertableCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesConnection!
}

type Guidebid implements Node {
  """Reads and enables pagination through a set of `Guide`."""
  guidesByGuideBidId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  tripOfferIdPool: [Int]
}

"""
A condition to be used against `Guidebid` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GuidebidCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Guidebid`"""
input GuidebidInput {
  id: Int
  tripOfferIdPool: [Int]
}

"""
Represents an update to a `Guidebid`. Fields that are set will be updated.
"""
input GuidebidPatch {
  id: Int
  tripOfferIdPool: [Int]
}

"""A connection to a list of `Guidebid` values."""
type GuidebidsConnection {
  """
  A list of edges which contains the `Guidebid` and cursor to aid in pagination.
  """
  edges: [GuidebidsEdge!]!

  """A list of `Guidebid` objects."""
  nodes: [Guidebid!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guidebid` you could get from the connection."""
  totalCount: Int!
}

"""A `Guidebid` edge in the connection."""
type GuidebidsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guidebid` at the end of the edge."""
  node: Guidebid!
}

"""Methods to use when ordering `Guidebid`."""
enum GuidebidsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Guide` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input GuideCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `guideBidId` field."""
  guideBidId: Int

  """Checks for equality with the object’s `guideDealId` field."""
  guideDealId: Int

  """Checks for equality with the object’s `guideFavoriteId` field."""
  guideFavoriteId: Int

  """Checks for equality with the object’s `guideOfferId` field."""
  guideOfferId: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `languageLevelId` field."""
  languageLevelId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

type Guidedeal implements Node {
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]

  """Reads and enables pagination through a set of `Guide`."""
  guidesByGuideDealId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  touristResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
}

"""
A condition to be used against `Guidedeal` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GuidedealCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Guidedeal`"""
input GuidedealInput {
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  id: Int
  touristResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
}

"""
Represents an update to a `Guidedeal`. Fields that are set will be updated.
"""
input GuidedealPatch {
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  id: Int
  touristResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
}

"""A connection to a list of `Guidedeal` values."""
type GuidedealsConnection {
  """
  A list of edges which contains the `Guidedeal` and cursor to aid in pagination.
  """
  edges: [GuidedealsEdge!]!

  """A list of `Guidedeal` objects."""
  nodes: [Guidedeal!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guidedeal` you could get from the connection."""
  totalCount: Int!
}

"""A `Guidedeal` edge in the connection."""
type GuidedealsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guidedeal` at the end of the edge."""
  node: Guidedeal!
}

"""Methods to use when ordering `Guidedeal`."""
enum GuidedealsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Guidefavorite implements Node {
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]

  """Reads and enables pagination through a set of `Guide`."""
  guidesByGuideFavoriteId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  travelGroupResourceIdPool: [Int]
}

"""
A condition to be used against `Guidefavorite` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input GuidefavoriteCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Guidefavorite`"""
input GuidefavoriteInput {
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  id: Int
  travelGroupResourceIdPool: [Int]
}

"""
Represents an update to a `Guidefavorite`. Fields that are set will be updated.
"""
input GuidefavoritePatch {
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  id: Int
  travelGroupResourceIdPool: [Int]
}

"""A connection to a list of `Guidefavorite` values."""
type GuidefavoritesConnection {
  """
  A list of edges which contains the `Guidefavorite` and cursor to aid in pagination.
  """
  edges: [GuidefavoritesEdge!]!

  """A list of `Guidefavorite` objects."""
  nodes: [Guidefavorite!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guidefavorite` you could get from the connection."""
  totalCount: Int!
}

"""A `Guidefavorite` edge in the connection."""
type GuidefavoritesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guidefavorite` at the end of the edge."""
  node: Guidefavorite!
}

"""Methods to use when ordering `Guidefavorite`."""
enum GuidefavoritesOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""An input for mutations affecting `Guide`"""
input GuideInput {
  accomodationIdPool: [Int]
  agencyReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  areas: [Area]!
  atAgency: Int
  bookingCalendarId: Int!
  contactId: Int!
  createdById: Int!
  eventIdPool: [Int]
  guideBidId: Int!
  guideDealId: Int!
  guideFavoriteId: Int!
  guideFirstName: String
  guideLastName: String
  guideLicenceUrl: String
  guideOfferId: Int!
  hasGuideLicence: Boolean!
  hasOwnCompany: Boolean!
  hostIdPool: [Int]
  id: Int
  isActive: Boolean
  isPublic: Boolean
  languageLevelId: Int!
  lastModified: Datetime
  name: String
  publisherId: Int!
  timeCreated: Datetime
  touristReviewInIdPool: [Int]
  touristReviewOutIdPool: [Int]
  transportIdPool: [Int]
  tripTypeName: String
}

type Guideoffer implements Node {
  accomodationResourceIdPool: [Int]
  guideResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Guide`."""
  guidesByGuideOfferId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!
  hostResourceIdPool: [Int]
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  transportResourceIdPool: [Int]
}

"""
A condition to be used against `Guideoffer` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GuideofferCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Guideoffer`"""
input GuideofferInput {
  accomodationResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  transportResourceIdPool: [Int]
}

"""
Represents an update to a `Guideoffer`. Fields that are set will be updated.
"""
input GuideofferPatch {
  accomodationResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  transportResourceIdPool: [Int]
}

"""A connection to a list of `Guideoffer` values."""
type GuideoffersConnection {
  """
  A list of edges which contains the `Guideoffer` and cursor to aid in pagination.
  """
  edges: [GuideoffersEdge!]!

  """A list of `Guideoffer` objects."""
  nodes: [Guideoffer!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guideoffer` you could get from the connection."""
  totalCount: Int!
}

"""A `Guideoffer` edge in the connection."""
type GuideoffersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guideoffer` at the end of the edge."""
  node: Guideoffer!
}

"""Methods to use when ordering `Guideoffer`."""
enum GuideoffersOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
Represents an update to a `Guide`. Fields that are set will be updated.
"""
input GuidePatch {
  accomodationIdPool: [Int]
  agencyReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  areas: [Area]
  atAgency: Int
  bookingCalendarId: Int
  contactId: Int
  createdById: Int
  eventIdPool: [Int]
  guideBidId: Int
  guideDealId: Int
  guideFavoriteId: Int
  guideFirstName: String
  guideLastName: String
  guideLicenceUrl: String
  guideOfferId: Int
  hasGuideLicence: Boolean
  hasOwnCompany: Boolean
  hostIdPool: [Int]
  id: Int
  isActive: Boolean
  isPublic: Boolean
  languageLevelId: Int
  lastModified: Datetime
  name: String
  publisherId: Int
  timeCreated: Datetime
  touristReviewInIdPool: [Int]
  touristReviewOutIdPool: [Int]
  transportIdPool: [Int]
  tripTypeName: String
}

type Guideresource implements Node {
  """Reads a single `Agency` that is related to this `Guideresource`."""
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Assocguide`."""
  assocguidesByGuideId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocguideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocguidesConnection!
  atAgency: Int
  atGuide: Int

  """
  Reads a single `Bookingcalendar` that is related to this `Guideresource`.
  """
  bookingCalendar: Bookingcalendar
  bookingCalendarId: Int

  """Reads a single `Usertable` that is related to this `Guideresource`."""
  createdBy: Usertable
  createdById: Int!

  """Reads a single `Guide` that is related to this `Guideresource`."""
  guideByAtGuide: Guide
  guideResourceName: String
  id: Int!
  isActive: Boolean
  isPublic: Boolean!
  isRomanian: Boolean
  lastModified: Datetime
  multipleTimeRange: Boolean!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Priceinfo` that is related to this `Guideresource`."""
  priceInfo: Priceinfo
  priceInfoId: Int!

  """Reads a single `Publisher` that is related to this `Guideresource`."""
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime

  """Reads a single `Timerange` that is related to this `Guideresource`."""
  timeRange: Timerange
  timeRangeId: Int
}

"""
A condition to be used against `Guideresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input GuideresourceCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `priceInfoId` field."""
  priceInfoId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `timeRangeId` field."""
  timeRangeId: Int
}

"""An input for mutations affecting `Guideresource`"""
input GuideresourceInput {
  atAgency: Int
  atGuide: Int
  bookingCalendarId: Int
  createdById: Int!
  guideResourceName: String
  id: Int
  isActive: Boolean
  isPublic: Boolean
  isRomanian: Boolean
  lastModified: Datetime
  multipleTimeRange: Boolean!
  priceInfoId: Int!
  publisherId: Int!
  timeCreated: Datetime
  timeRangeId: Int
}

"""
Represents an update to a `Guideresource`. Fields that are set will be updated.
"""
input GuideresourcePatch {
  atAgency: Int
  atGuide: Int
  bookingCalendarId: Int
  createdById: Int
  guideResourceName: String
  id: Int
  isActive: Boolean
  isPublic: Boolean
  isRomanian: Boolean
  lastModified: Datetime
  multipleTimeRange: Boolean
  priceInfoId: Int
  publisherId: Int
  timeCreated: Datetime
  timeRangeId: Int
}

"""A connection to a list of `Guideresource` values."""
type GuideresourcesConnection {
  """
  A list of edges which contains the `Guideresource` and cursor to aid in pagination.
  """
  edges: [GuideresourcesEdge!]!

  """A list of `Guideresource` objects."""
  nodes: [Guideresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guideresource` you could get from the connection."""
  totalCount: Int!
}

"""A `Guideresource` edge in the connection."""
type GuideresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guideresource` at the end of the edge."""
  node: Guideresource!
}

"""Methods to use when ordering `Guideresource`."""
enum GuideresourcesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRICE_INFO_ID_ASC
  PRICE_INFO_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  TIME_RANGE_ID_ASC
  TIME_RANGE_ID_DESC
}

type Guidereview implements Node {
  byRomanian: Boolean

  """Reads a single `Usertable` that is related to this `Guidereview`."""
  createdBy: Usertable
  createdById: Int!

  """Reads a single `Guide` that is related to this `Guidereview`."""
  guideByGuideIdTarget: Guide
  guideIdTarget: Int!
  halfStars: Int
  id: Int!
  isActive: Boolean

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Guidereview`."""
  publisher: Publisher
  publisherId: Int!
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
}

"""
A condition to be used against `Guidereview` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GuidereviewCondition {
  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `guideIdTarget` field."""
  guideIdTarget: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Guidereview`"""
input GuidereviewInput {
  byRomanian: Boolean
  createdById: Int!
  guideIdTarget: Int!
  halfStars: Int
  id: Int
  isActive: Boolean
  publisherId: Int!
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
}

"""
Represents an update to a `Guidereview`. Fields that are set will be updated.
"""
input GuidereviewPatch {
  byRomanian: Boolean
  createdById: Int
  guideIdTarget: Int
  halfStars: Int
  id: Int
  isActive: Boolean
  publisherId: Int
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
}

"""A connection to a list of `Guidereview` values."""
type GuidereviewsConnection {
  """
  A list of edges which contains the `Guidereview` and cursor to aid in pagination.
  """
  edges: [GuidereviewsEdge!]!

  """A list of `Guidereview` objects."""
  nodes: [Guidereview!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guidereview` you could get from the connection."""
  totalCount: Int!
}

"""A `Guidereview` edge in the connection."""
type GuidereviewsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guidereview` at the end of the edge."""
  node: Guidereview!
}

"""Methods to use when ordering `Guidereview`."""
enum GuidereviewsOrderBy {
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  GUIDE_ID_TARGET_ASC
  GUIDE_ID_TARGET_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

"""A connection to a list of `Guide` values."""
type GuidesConnection {
  """
  A list of edges which contains the `Guide` and cursor to aid in pagination.
  """
  edges: [GuidesEdge!]!

  """A list of `Guide` objects."""
  nodes: [Guide!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guide` you could get from the connection."""
  totalCount: Int!
}

"""A `Guide` edge in the connection."""
type GuidesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guide` at the end of the edge."""
  node: Guide!
}

"""Methods to use when ordering `Guide`."""
enum GuidesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  GUIDE_BID_ID_ASC
  GUIDE_BID_ID_DESC
  GUIDE_DEAL_ID_ASC
  GUIDE_DEAL_ID_DESC
  GUIDE_FAVORITE_ID_ASC
  GUIDE_FAVORITE_ID_DESC
  GUIDE_OFFER_ID_ASC
  GUIDE_OFFER_ID_DESC
  ID_ASC
  ID_DESC
  LANGUAGE_LEVEL_ID_ASC
  LANGUAGE_LEVEL_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

type Hostresource implements Node {
  """
  Reads a single `Accomodationresource` that is related to this `Hostresource`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Contact` that is related to this `Hostresource`."""
  addressInfo: Contact
  addressInfoId: Int!

  """Reads a single `Agency` that is related to this `Hostresource`."""
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Agencyhost`."""
  agencyhostsByHostId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyhostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyhostsConnection!

  """Reads and enables pagination through a set of `Assochost`."""
  assochostsByHostId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssochostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssochostsConnection!
  atAccomodation: Int
  atAgency: Int
  atGuide: Int

  """
  Reads a single `Bookingcalendar` that is related to this `Hostresource`.
  """
  bookingCalendar: Bookingcalendar
  bookingCalendarId: Int!

  """Reads a single `Contact` that is related to this `Hostresource`."""
  contact: Contact
  contactId: Int!

  """Reads a single `Usertable` that is related to this `Hostresource`."""
  createdBy: Usertable
  createdById: Int!

  """Reads a single `Guide` that is related to this `Hostresource`."""
  guideByAtGuide: Guide
  hostResourceName: String
  id: Int!
  isActive: Boolean
  isPublic: Boolean!
  isRomanian: Boolean
  lastModified: Datetime
  locatedIn: Area

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  ownedByAt: Boolean!

  """Reads a single `Presentation` that is related to this `Hostresource`."""
  presentation: Presentation
  presentationId: Int!

  """Reads a single `Publisher` that is related to this `Hostresource`."""
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime
  tripTypeName: String
  withAccomodation: Boolean!
}

"""
A condition to be used against `Hostresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input HostresourceCondition {
  """Checks for equality with the object’s `addressInfoId` field."""
  addressInfoId: Int

  """Checks for equality with the object’s `atAccomodation` field."""
  atAccomodation: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Hostresource`"""
input HostresourceInput {
  addressInfoId: Int!
  atAccomodation: Int
  atAgency: Int
  atGuide: Int
  bookingCalendarId: Int!
  contactId: Int!
  createdById: Int!
  hostResourceName: String
  id: Int
  isActive: Boolean
  isPublic: Boolean
  isRomanian: Boolean
  lastModified: Datetime
  locatedIn: Area
  ownedByAt: Boolean
  presentationId: Int!
  publisherId: Int!
  timeCreated: Datetime
  tripTypeName: String
  withAccomodation: Boolean!
}

"""
Represents an update to a `Hostresource`. Fields that are set will be updated.
"""
input HostresourcePatch {
  addressInfoId: Int
  atAccomodation: Int
  atAgency: Int
  atGuide: Int
  bookingCalendarId: Int
  contactId: Int
  createdById: Int
  hostResourceName: String
  id: Int
  isActive: Boolean
  isPublic: Boolean
  isRomanian: Boolean
  lastModified: Datetime
  locatedIn: Area
  ownedByAt: Boolean
  presentationId: Int
  publisherId: Int
  timeCreated: Datetime
  tripTypeName: String
  withAccomodation: Boolean
}

"""A connection to a list of `Hostresource` values."""
type HostresourcesConnection {
  """
  A list of edges which contains the `Hostresource` and cursor to aid in pagination.
  """
  edges: [HostresourcesEdge!]!

  """A list of `Hostresource` objects."""
  nodes: [Hostresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Hostresource` you could get from the connection."""
  totalCount: Int!
}

"""A `Hostresource` edge in the connection."""
type HostresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Hostresource` at the end of the edge."""
  node: Hostresource!
}

"""Methods to use when ordering `Hostresource`."""
enum HostresourcesOrderBy {
  ADDRESS_INFO_ID_ASC
  ADDRESS_INFO_ID_DESC
  AT_ACCOMODATION_ASC
  AT_ACCOMODATION_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

"""All input for the `inviteToOrganization` mutation."""
input InviteToOrganizationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  email: String
  organizationId: UUID!
  username: String
}

"""The output of our `inviteToOrganization` mutation."""
type InviteToOrganizationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

enum Judet {
  ALBA
  ARAD
  ARGES
  BACAU
  BIHOR
  BISTRITA_NASAUD
  BOTOSANI
  BRAILA
  BRASOV
  BUZAU
  CALARASI
  CARAS_SEVERIN
  CLUJ
  CONSTANTA
  COVASNA
  DAMBOVITA
  DOLJ
  GALATI
  GIURGIU
  GORJ
  HARGHITA
  HUNEDOARA
  IALOMITA
  IASI
  ILFOV
  MARAMURES
  MEHEDINTI
  MURES
  NEAMT
  OLT
  PRAHOVA
  SALAJ
  SATU_MARE
  SIBIU
  SUCEAVA
  TELEORMAN
  TIMIS
  TULCEA
  VALCEA
  VASLUI
  VRANCEA
}

type Languagelevel implements Node {
  """Reads a single `Usertable` that is related to this `Languagelevel`."""
  createdBy: Usertable
  createdById: Int!

  """Reads and enables pagination through a set of `Guide`."""
  guidesByLanguageLevelId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!
  id: Int!
  isActive: Boolean
  langauges: Languages!
  langaugesSkill: Languageskill!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Languagelevel`."""
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime
}

"""
A condition to be used against `Languagelevel` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input LanguagelevelCondition {
  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Languagelevel`"""
input LanguagelevelInput {
  createdById: Int!
  id: Int
  isActive: Boolean
  langauges: Languages!
  langaugesSkill: Languageskill!
  publisherId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Languagelevel`. Fields that are set will be updated.
"""
input LanguagelevelPatch {
  createdById: Int
  id: Int
  isActive: Boolean
  langauges: Languages
  langaugesSkill: Languageskill
  publisherId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Languagelevel` values."""
type LanguagelevelsConnection {
  """
  A list of edges which contains the `Languagelevel` and cursor to aid in pagination.
  """
  edges: [LanguagelevelsEdge!]!

  """A list of `Languagelevel` objects."""
  nodes: [Languagelevel!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Languagelevel` you could get from the connection."""
  totalCount: Int!
}

"""A `Languagelevel` edge in the connection."""
type LanguagelevelsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Languagelevel` at the end of the edge."""
  node: Languagelevel!
}

"""Methods to use when ordering `Languagelevel`."""
enum LanguagelevelsOrderBy {
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

enum Languages {
  ARABIC
  BULGARIAN
  CHINESE
  DANISH
  ENGLISH
  FRENCH
  GERMAN
  GREEK
  HUNGARIAN
  ISRAELI
  ITALIAN
  JAPANESE
  NORWEGIAN
  POLISH
  ROMANIAN
  RUSSIAN
  SERBIAN
  SPANISH
  SWEDISH
  TURKISH
}

enum Languageskill {
  BASIC
  EXCELLENT
  GOOD
  MEDIUM
  NATIVE
}

enum Logcommand {
  ACCOMODATION_CALENDAR
  ACCOMODATION_RESOURCE
  AGENCY
  APP_PUBLIC_PRICEINFO
  BID
  BOOKING_CALENDAR
  CONTACT_INFO
  DESTINATION_RESOURCE
  EVENT_RESOURCE
  GUIDE
  GUIDE_RESOURCE
  HOST_RESOURCE
  LOGIN
  LOGOUT
  PRESENTATION
  PUBLISHER
  REVIEW
  TOURIST
  TOURIST_RESOURCE
  TRANSPORT_RESOURCE
  TRAVEL_GROUP
  TRIP_OFFER_RESOURCE
  UNKNOWN
  USER
}

input LoginInput {
  password: String!
  username: String!
}

type LoginPayload {
  user: User!
}

type LogoutPayload {
  success: Boolean
}

"""All input for the `makeEmailPrimary` mutation."""
input MakeEmailPrimaryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  emailId: UUID!
}

"""The output of our `makeEmailPrimary` mutation."""
type MakeEmailPrimaryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserEmail`."""
  user: User
  userEmail: UserEmail

  """An edge for our `UserEmail`. May be used by Relay 1."""
  userEmailEdge(
    """The method to use when ordering `UserEmail`."""
    orderBy: [UserEmailsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserEmailsEdge
}

type Mediadestinationresource implements Node {
  """
  Reads a single `Agency` that is related to this `Mediadestinationresource`.
  """
  agencyByAtAgency: Agency
  atAgency: Int!
  atDestination: Int!

  """
  Reads a single `Destinationresource` that is related to this `Mediadestinationresource`.
  """
  destinationresourceByAtDestination: Destinationresource
  guideImage: Int
  guideSignedUrl: String
  id: Int
  imageGallery1: Int
  imageGallery10: Int
  imageGallery10SignedUrl: String
  imageGallery1SignedUrl: String
  imageGallery2: Int
  imageGallery2SignedUrl: String
  imageGallery3: Int
  imageGallery3SignedUrl: String
  imageGallery4: Int
  imageGallery4SignedUrl: String
  imageGallery5: Int
  imageGallery5SignedUrl: String
  imageGallery6: Int
  imageGallery6SignedUrl: String
  imageGallery7: Int
  imageGallery7SignedUrl: String
  imageGallery8: Int
  imageGallery8SignedUrl: String
  imageGallery9: Int
  imageGallery9SignedUrl: String
  lastModified: Datetime
  lastModifiedBy: Int
  mainImage: Int
  mainImageSignedUrl: String
  mapImage: Int
  mapImageSignedUrl: String

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByGuideImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery1: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery10: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery2: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery3: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery4: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery5: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery6: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery7: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery8: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery9: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMainImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMapImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByThumbnailImage: Medialocation

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  signedUrlsUpdate: Datetime!
  thumbnailImage: Int
  thumbnailImageSignedUrl: String
  timeCreated: Datetime

  """
  Reads a single `Usertable` that is related to this `Mediadestinationresource`.
  """
  usertableByLastModifiedBy: Usertable
}

"""
A condition to be used against `Mediadestinationresource` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input MediadestinationresourceCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atDestination` field."""
  atDestination: Int

  """Checks for equality with the object’s `guideImage` field."""
  guideImage: Int

  """Checks for equality with the object’s `guideSignedUrl` field."""
  guideSignedUrl: String

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `imageGallery1` field."""
  imageGallery1: Int

  """Checks for equality with the object’s `imageGallery10` field."""
  imageGallery10: Int

  """Checks for equality with the object’s `imageGallery10SignedUrl` field."""
  imageGallery10SignedUrl: String

  """Checks for equality with the object’s `imageGallery1SignedUrl` field."""
  imageGallery1SignedUrl: String

  """Checks for equality with the object’s `imageGallery2` field."""
  imageGallery2: Int

  """Checks for equality with the object’s `imageGallery2SignedUrl` field."""
  imageGallery2SignedUrl: String

  """Checks for equality with the object’s `imageGallery3` field."""
  imageGallery3: Int

  """Checks for equality with the object’s `imageGallery3SignedUrl` field."""
  imageGallery3SignedUrl: String

  """Checks for equality with the object’s `imageGallery4` field."""
  imageGallery4: Int

  """Checks for equality with the object’s `imageGallery4SignedUrl` field."""
  imageGallery4SignedUrl: String

  """Checks for equality with the object’s `imageGallery5` field."""
  imageGallery5: Int

  """Checks for equality with the object’s `imageGallery5SignedUrl` field."""
  imageGallery5SignedUrl: String

  """Checks for equality with the object’s `imageGallery6` field."""
  imageGallery6: Int

  """Checks for equality with the object’s `imageGallery6SignedUrl` field."""
  imageGallery6SignedUrl: String

  """Checks for equality with the object’s `imageGallery7` field."""
  imageGallery7: Int

  """Checks for equality with the object’s `imageGallery7SignedUrl` field."""
  imageGallery7SignedUrl: String

  """Checks for equality with the object’s `imageGallery8` field."""
  imageGallery8: Int

  """Checks for equality with the object’s `imageGallery8SignedUrl` field."""
  imageGallery8SignedUrl: String

  """Checks for equality with the object’s `imageGallery9` field."""
  imageGallery9: Int

  """Checks for equality with the object’s `imageGallery9SignedUrl` field."""
  imageGallery9SignedUrl: String

  """Checks for equality with the object’s `lastModified` field."""
  lastModified: Datetime

  """Checks for equality with the object’s `lastModifiedBy` field."""
  lastModifiedBy: Int

  """Checks for equality with the object’s `mainImage` field."""
  mainImage: Int

  """Checks for equality with the object’s `mainImageSignedUrl` field."""
  mainImageSignedUrl: String

  """Checks for equality with the object’s `mapImage` field."""
  mapImage: Int

  """Checks for equality with the object’s `mapImageSignedUrl` field."""
  mapImageSignedUrl: String

  """Checks for equality with the object’s `signedUrlsUpdate` field."""
  signedUrlsUpdate: Datetime

  """Checks for equality with the object’s `thumbnailImage` field."""
  thumbnailImage: Int

  """Checks for equality with the object’s `thumbnailImageSignedUrl` field."""
  thumbnailImageSignedUrl: String
}

"""An input for mutations affecting `Mediadestinationresource`"""
input MediadestinationresourceInput {
  atAgency: Int!
  atDestination: Int!
  guideImage: Int
  guideSignedUrl: String
  id: Int
  imageGallery1: Int
  imageGallery10: Int
  imageGallery10SignedUrl: String
  imageGallery1SignedUrl: String
  imageGallery2: Int
  imageGallery2SignedUrl: String
  imageGallery3: Int
  imageGallery3SignedUrl: String
  imageGallery4: Int
  imageGallery4SignedUrl: String
  imageGallery5: Int
  imageGallery5SignedUrl: String
  imageGallery6: Int
  imageGallery6SignedUrl: String
  imageGallery7: Int
  imageGallery7SignedUrl: String
  imageGallery8: Int
  imageGallery8SignedUrl: String
  imageGallery9: Int
  imageGallery9SignedUrl: String
  lastModified: Datetime
  lastModifiedBy: Int
  mainImage: Int
  mainImageSignedUrl: String
  mapImage: Int
  mapImageSignedUrl: String
  signedUrlsUpdate: Datetime
  thumbnailImage: Int
  thumbnailImageSignedUrl: String
  timeCreated: Datetime
}

"""
Represents an update to a `Mediadestinationresource`. Fields that are set will be updated.
"""
input MediadestinationresourcePatch {
  atAgency: Int
  atDestination: Int
  guideImage: Int
  guideSignedUrl: String
  id: Int
  imageGallery1: Int
  imageGallery10: Int
  imageGallery10SignedUrl: String
  imageGallery1SignedUrl: String
  imageGallery2: Int
  imageGallery2SignedUrl: String
  imageGallery3: Int
  imageGallery3SignedUrl: String
  imageGallery4: Int
  imageGallery4SignedUrl: String
  imageGallery5: Int
  imageGallery5SignedUrl: String
  imageGallery6: Int
  imageGallery6SignedUrl: String
  imageGallery7: Int
  imageGallery7SignedUrl: String
  imageGallery8: Int
  imageGallery8SignedUrl: String
  imageGallery9: Int
  imageGallery9SignedUrl: String
  lastModified: Datetime
  lastModifiedBy: Int
  mainImage: Int
  mainImageSignedUrl: String
  mapImage: Int
  mapImageSignedUrl: String
  signedUrlsUpdate: Datetime
  thumbnailImage: Int
  thumbnailImageSignedUrl: String
  timeCreated: Datetime
}

"""A connection to a list of `Mediadestinationresource` values."""
type MediadestinationresourcesConnection {
  """
  A list of edges which contains the `Mediadestinationresource` and cursor to aid in pagination.
  """
  edges: [MediadestinationresourcesEdge!]!

  """A list of `Mediadestinationresource` objects."""
  nodes: [Mediadestinationresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Mediadestinationresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Mediadestinationresource` edge in the connection."""
type MediadestinationresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Mediadestinationresource` at the end of the edge."""
  node: Mediadestinationresource!
}

"""Methods to use when ordering `Mediadestinationresource`."""
enum MediadestinationresourcesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_DESTINATION_ASC
  AT_DESTINATION_DESC
  GUIDE_IMAGE_ASC
  GUIDE_IMAGE_DESC
  GUIDE_SIGNED_URL_ASC
  GUIDE_SIGNED_URL_DESC
  ID_ASC
  ID_DESC
  IMAGE_GALLERY1_ASC
  IMAGE_GALLERY1_DESC
  IMAGE_GALLERY1_SIGNED_URL_ASC
  IMAGE_GALLERY1_SIGNED_URL_DESC
  IMAGE_GALLERY10_ASC
  IMAGE_GALLERY10_DESC
  IMAGE_GALLERY10_SIGNED_URL_ASC
  IMAGE_GALLERY10_SIGNED_URL_DESC
  IMAGE_GALLERY2_ASC
  IMAGE_GALLERY2_DESC
  IMAGE_GALLERY2_SIGNED_URL_ASC
  IMAGE_GALLERY2_SIGNED_URL_DESC
  IMAGE_GALLERY3_ASC
  IMAGE_GALLERY3_DESC
  IMAGE_GALLERY3_SIGNED_URL_ASC
  IMAGE_GALLERY3_SIGNED_URL_DESC
  IMAGE_GALLERY4_ASC
  IMAGE_GALLERY4_DESC
  IMAGE_GALLERY4_SIGNED_URL_ASC
  IMAGE_GALLERY4_SIGNED_URL_DESC
  IMAGE_GALLERY5_ASC
  IMAGE_GALLERY5_DESC
  IMAGE_GALLERY5_SIGNED_URL_ASC
  IMAGE_GALLERY5_SIGNED_URL_DESC
  IMAGE_GALLERY6_ASC
  IMAGE_GALLERY6_DESC
  IMAGE_GALLERY6_SIGNED_URL_ASC
  IMAGE_GALLERY6_SIGNED_URL_DESC
  IMAGE_GALLERY7_ASC
  IMAGE_GALLERY7_DESC
  IMAGE_GALLERY7_SIGNED_URL_ASC
  IMAGE_GALLERY7_SIGNED_URL_DESC
  IMAGE_GALLERY8_ASC
  IMAGE_GALLERY8_DESC
  IMAGE_GALLERY8_SIGNED_URL_ASC
  IMAGE_GALLERY8_SIGNED_URL_DESC
  IMAGE_GALLERY9_ASC
  IMAGE_GALLERY9_DESC
  IMAGE_GALLERY9_SIGNED_URL_ASC
  IMAGE_GALLERY9_SIGNED_URL_DESC
  LAST_MODIFIED_ASC
  LAST_MODIFIED_BY_ASC
  LAST_MODIFIED_BY_DESC
  LAST_MODIFIED_DESC
  MAIN_IMAGE_ASC
  MAIN_IMAGE_DESC
  MAIN_IMAGE_SIGNED_URL_ASC
  MAIN_IMAGE_SIGNED_URL_DESC
  MAP_IMAGE_ASC
  MAP_IMAGE_DESC
  MAP_IMAGE_SIGNED_URL_ASC
  MAP_IMAGE_SIGNED_URL_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SIGNED_URLS_UPDATE_ASC
  SIGNED_URLS_UPDATE_DESC
  THUMBNAIL_IMAGE_ASC
  THUMBNAIL_IMAGE_DESC
  THUMBNAIL_IMAGE_SIGNED_URL_ASC
  THUMBNAIL_IMAGE_SIGNED_URL_DESC
}

type Medialocation implements Node {
  """Reads a single `Agency` that is related to this `Medialocation`."""
  agencyByAtAgency: Agency
  atAgency: Int!
  atResource: Int!
  id: Int

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByGuideImage(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery1(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery10(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery2(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery3(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery4(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery5(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery6(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery7(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery8(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery9(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByMainImage(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByMapImage(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByThumbnailImage(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!
  mediaLocationPlacement: Medialocationplacement!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  signedUrl2K: String
  signedUrlDesktop: String
  signedUrlMobile: String
  signedUrlsUpdate: Datetime!
  signedUrlTablet: String
  signedUrlThumbnail: String
  timeCreated: Datetime
  uploadLocation2K: String
  uploadLocationDesktop: String
  uploadLocationMobile: String
  uploadLocationOriginal: String
  uploadLocationTablet: String
  uploadLocationThumbnail: String
}

"""
A condition to be used against `Medialocation` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input MedialocationCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atResource` field."""
  atResource: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `uploadLocation2K` field."""
  uploadLocation2K: String

  """Checks for equality with the object’s `uploadLocationDesktop` field."""
  uploadLocationDesktop: String

  """Checks for equality with the object’s `uploadLocationMobile` field."""
  uploadLocationMobile: String

  """Checks for equality with the object’s `uploadLocationOriginal` field."""
  uploadLocationOriginal: String

  """Checks for equality with the object’s `uploadLocationTablet` field."""
  uploadLocationTablet: String

  """Checks for equality with the object’s `uploadLocationThumbnail` field."""
  uploadLocationThumbnail: String
}

"""An input for mutations affecting `Medialocation`"""
input MedialocationInput {
  atAgency: Int!
  atResource: Int!
  id: Int
  mediaLocationPlacement: Medialocationplacement!
  signedUrl2K: String
  signedUrlDesktop: String
  signedUrlMobile: String
  signedUrlsUpdate: Datetime
  signedUrlTablet: String
  signedUrlThumbnail: String
  timeCreated: Datetime
  uploadLocation2K: String
  uploadLocationDesktop: String
  uploadLocationMobile: String
  uploadLocationOriginal: String
  uploadLocationTablet: String
  uploadLocationThumbnail: String
}

"""
Represents an update to a `Medialocation`. Fields that are set will be updated.
"""
input MedialocationPatch {
  atAgency: Int
  atResource: Int
  id: Int
  mediaLocationPlacement: Medialocationplacement
  signedUrl2K: String
  signedUrlDesktop: String
  signedUrlMobile: String
  signedUrlsUpdate: Datetime
  signedUrlTablet: String
  signedUrlThumbnail: String
  timeCreated: Datetime
  uploadLocation2K: String
  uploadLocationDesktop: String
  uploadLocationMobile: String
  uploadLocationOriginal: String
  uploadLocationTablet: String
  uploadLocationThumbnail: String
}

enum Medialocationplacement {
  GUIDE_IMAGE
  IMAGE_GALLERY1
  IMAGE_GALLERY10
  IMAGE_GALLERY2
  IMAGE_GALLERY3
  IMAGE_GALLERY4
  IMAGE_GALLERY5
  IMAGE_GALLERY6
  IMAGE_GALLERY7
  IMAGE_GALLERY8
  IMAGE_GALLERY9
  MAIN_IMAGE
  MAP_IMAGE
  THUMBNAIL_IMAGE
}

"""A connection to a list of `Medialocation` values."""
type MedialocationsConnection {
  """
  A list of edges which contains the `Medialocation` and cursor to aid in pagination.
  """
  edges: [MedialocationsEdge!]!

  """A list of `Medialocation` objects."""
  nodes: [Medialocation!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Medialocation` you could get from the connection."""
  totalCount: Int!
}

"""A `Medialocation` edge in the connection."""
type MedialocationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Medialocation` at the end of the edge."""
  node: Medialocation!
}

"""Methods to use when ordering `Medialocation`."""
enum MedialocationsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_RESOURCE_ASC
  AT_RESOURCE_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  UPLOAD_LOCATION_DESKTOP_ASC
  UPLOAD_LOCATION_DESKTOP_DESC
  UPLOAD_LOCATION_MOBILE_ASC
  UPLOAD_LOCATION_MOBILE_DESC
  UPLOAD_LOCATION_ORIGINAL_ASC
  UPLOAD_LOCATION_ORIGINAL_DESC
  UPLOAD_LOCATION_TABLET_ASC
  UPLOAD_LOCATION_TABLET_DESC
  UPLOAD_LOCATION_THUMBNAIL_ASC
  UPLOAD_LOCATION_THUMBNAIL_DESC
  UPLOAD_LOCATION2_K_ASC
  UPLOAD_LOCATION2_K_DESC
}

"""
The root mutation type which contains root level fields which mutate data.
"""
type Mutation {
  """
  If someone invited you by your email address then you must include the code
  that was emailed to you, otherwise you may accept the invitation directly
  using the UUID. If successful, you will be a member of the organization.
  """
  acceptInvitationToOrganization(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: AcceptInvitationToOrganizationInput!
  ): AcceptInvitationToOrganizationPayload

  """Enter your old password and a new password to change your password."""
  changePassword(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: ChangePasswordInput!
  ): ChangePasswordPayload

  """
  If you're certain you want to delete your account, use
  `requestAccountDeletion` to request an account deletion token, and then supply
  the token through this mutation to complete account deletion.
  """
  confirmAccountDeletion(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: ConfirmAccountDeletionInput!
  ): ConfirmAccountDeletionPayload

  """Creates a single `Accomodationresource`."""
  createAccomodationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAccomodationresourceInput!
  ): CreateAccomodationresourcePayload

  """Creates a single `Account`."""
  createAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAccountInput!
  ): CreateAccountPayload

  """Creates a single `Accounting`."""
  createAccounting(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAccountingInput!
  ): CreateAccountingPayload

  """Creates a single `Agency`."""
  createAgency(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyInput!
  ): CreateAgencyPayload

  """Creates a single `Agencyaccomodation`."""
  createAgencyaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyaccomodationInput!
  ): CreateAgencyaccomodationPayload

  """Creates a single `Agencybid`."""
  createAgencybid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencybidInput!
  ): CreateAgencybidPayload

  """Creates a single `Agencydeal`."""
  createAgencydeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencydealInput!
  ): CreateAgencydealPayload

  """Creates a single `Agencyevent`."""
  createAgencyevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyeventInput!
  ): CreateAgencyeventPayload

  """Creates a single `Agencyfavorite`."""
  createAgencyfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyfavoriteInput!
  ): CreateAgencyfavoritePayload

  """Creates a single `Agencyguide`."""
  createAgencyguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyguideInput!
  ): CreateAgencyguidePayload

  """Creates a single `Agencyhost`."""
  createAgencyhost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyhostInput!
  ): CreateAgencyhostPayload

  """Creates a single `Agencymedialibrary`."""
  createAgencymedialibrary(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencymedialibraryInput!
  ): CreateAgencymedialibraryPayload

  """Creates a single `Agencyoffer`."""
  createAgencyoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyofferInput!
  ): CreateAgencyofferPayload

  """Creates a single `Agencyreview`."""
  createAgencyreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyreviewInput!
  ): CreateAgencyreviewPayload

  """Creates a single `Agencytourist`."""
  createAgencytourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencytouristInput!
  ): CreateAgencytouristPayload

  """Creates a single `Agencytransport`."""
  createAgencytransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencytransportInput!
  ): CreateAgencytransportPayload

  """Creates a single `Agencytravelgroup`."""
  createAgencytravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencytravelgroupInput!
  ): CreateAgencytravelgroupPayload

  """Creates a single `Agencytripoffer`."""
  createAgencytripoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencytripofferInput!
  ): CreateAgencytripofferPayload

  """Creates a single `Agencyuser`."""
  createAgencyuser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyuserInput!
  ): CreateAgencyuserPayload

  """Creates a single `Assocaccomodation`."""
  createAssocaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssocaccomodationInput!
  ): CreateAssocaccomodationPayload

  """Creates a single `Assocdestination`."""
  createAssocdestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssocdestinationInput!
  ): CreateAssocdestinationPayload

  """Creates a single `Assocevent`."""
  createAssocevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssoceventInput!
  ): CreateAssoceventPayload

  """Creates a single `Assocguide`."""
  createAssocguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssocguideInput!
  ): CreateAssocguidePayload

  """Creates a single `Assochost`."""
  createAssochost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssochostInput!
  ): CreateAssochostPayload

  """Creates a single `Assoctransport`."""
  createAssoctransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssoctransportInput!
  ): CreateAssoctransportPayload

  """Creates a single `Assoctravelgroup`."""
  createAssoctravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssoctravelgroupInput!
  ): CreateAssoctravelgroupPayload

  """Creates a single `Auctioninfo`."""
  createAuctioninfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAuctioninfoInput!
  ): CreateAuctioninfoPayload

  """Creates a single `Bid`."""
  createBid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateBidInput!
  ): CreateBidPayload

  """Creates a single `Bookingcalendar`."""
  createBookingcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateBookingcalendarInput!
  ): CreateBookingcalendarPayload

  """Creates a single `Calendarentry`."""
  createCalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalendarentryInput!
  ): CreateCalendarentryPayload

  """Creates a single `Commandlogentry`."""
  createCommandlogentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCommandlogentryInput!
  ): CreateCommandlogentryPayload

  """Creates a single `Contact`."""
  createContact(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateContactInput!
  ): CreateContactPayload

  """Creates a single `Date_`."""
  createDate_(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateDateInput!
  ): CreateDatePayload

  """Creates a single `Destinationresource`."""
  createDestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateDestinationresourceInput!
  ): CreateDestinationresourcePayload

  """Creates a single `Eventresource`."""
  createEventresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateEventresourceInput!
  ): CreateEventresourcePayload

  """Creates a single `Geocoding`."""
  createGeocoding(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGeocodingInput!
  ): CreateGeocodingPayload

  """Creates a single `Guide`."""
  createGuide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuideInput!
  ): CreateGuidePayload

  """Creates a single `Guidebid`."""
  createGuidebid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuidebidInput!
  ): CreateGuidebidPayload

  """Creates a single `Guidedeal`."""
  createGuidedeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuidedealInput!
  ): CreateGuidedealPayload

  """Creates a single `Guidefavorite`."""
  createGuidefavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuidefavoriteInput!
  ): CreateGuidefavoritePayload

  """Creates a single `Guideoffer`."""
  createGuideoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuideofferInput!
  ): CreateGuideofferPayload

  """Creates a single `Guideresource`."""
  createGuideresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuideresourceInput!
  ): CreateGuideresourcePayload

  """Creates a single `Guidereview`."""
  createGuidereview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuidereviewInput!
  ): CreateGuidereviewPayload

  """Creates a single `Hostresource`."""
  createHostresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateHostresourceInput!
  ): CreateHostresourcePayload

  """Creates a single `Languagelevel`."""
  createLanguagelevel(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateLanguagelevelInput!
  ): CreateLanguagelevelPayload

  """Creates a single `Mediadestinationresource`."""
  createMediadestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMediadestinationresourceInput!
  ): CreateMediadestinationresourcePayload

  """Creates a single `Medialocation`."""
  createMedialocation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMedialocationInput!
  ): CreateMedialocationPayload

  """
  An `Organization` is a great way of sharing access to resources between
  multiple users without compromising security. When you create an organization
  you will have the 'owner' and 'billing contact' roles. You may invite other
  users and redistribute these roles.
  """
  createOrganization(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateOrganizationInput!
  ): CreateOrganizationPayload

  """Creates a single `OrganizationInvitation`."""
  createOrganizationInvitation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateOrganizationInvitationInput!
  ): CreateOrganizationInvitationPayload

  """Creates a single `OrganizationMembership`."""
  createOrganizationMembership(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateOrganizationMembershipInput!
  ): CreateOrganizationMembershipPayload

  """Creates a single `Post`."""
  createPost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreatePostInput!
  ): CreatePostPayload

  """Creates a single `Presentation`."""
  createPresentation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreatePresentationInput!
  ): CreatePresentationPayload

  """Creates a single `Priceinfo`."""
  createPriceinfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreatePriceinfoInput!
  ): CreatePriceinfoPayload

  """Creates a single `Publisher`."""
  createPublisher(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreatePublisherInput!
  ): CreatePublisherPayload

  """Creates a single `Review`."""
  createReview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateReviewInput!
  ): CreateReviewPayload

  """Creates a single `Roomcalendar`."""
  createRoomcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateRoomcalendarInput!
  ): CreateRoomcalendarPayload

  """Creates a single `Roomcalendarentry`."""
  createRoomcalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateRoomcalendarentryInput!
  ): CreateRoomcalendarentryPayload

  """Creates a single `Roomlist`."""
  createRoomlist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateRoomlistInput!
  ): CreateRoomlistPayload

  """Creates a single `Similarbytriptypeaccomodation`."""
  createSimilarbytriptypeaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypeaccomodationInput!
  ): CreateSimilarbytriptypeaccomodationPayload

  """Creates a single `Similarbytriptypedestination`."""
  createSimilarbytriptypedestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypedestinationInput!
  ): CreateSimilarbytriptypedestinationPayload

  """Creates a single `Similarbytriptypeevent`."""
  createSimilarbytriptypeevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypeeventInput!
  ): CreateSimilarbytriptypeeventPayload

  """Creates a single `Similarbytriptypeguide`."""
  createSimilarbytriptypeguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypeguideInput!
  ): CreateSimilarbytriptypeguidePayload

  """Creates a single `Similarbytriptypehost`."""
  createSimilarbytriptypehost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypehostInput!
  ): CreateSimilarbytriptypehostPayload

  """Creates a single `Similarbytriptypetransport`."""
  createSimilarbytriptypetransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypetransportInput!
  ): CreateSimilarbytriptypetransportPayload

  """Creates a single `Similarbytriptypetravelgroup`."""
  createSimilarbytriptypetravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypetravelgroupInput!
  ): CreateSimilarbytriptypetravelgroupPayload

  """Creates a single `Timerange`."""
  createTimerange(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTimerangeInput!
  ): CreateTimerangePayload

  """Creates a single `Topic`."""
  createTopic(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTopicInput!
  ): CreateTopicPayload

  """Creates a single `Tourist`."""
  createTourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristInput!
  ): CreateTouristPayload

  """Creates a single `Touristbid`."""
  createTouristbid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristbidInput!
  ): CreateTouristbidPayload

  """Creates a single `Touristdeal`."""
  createTouristdeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristdealInput!
  ): CreateTouristdealPayload

  """Creates a single `Touristfavorite`."""
  createTouristfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristfavoriteInput!
  ): CreateTouristfavoritePayload

  """Creates a single `Touristoffer`."""
  createTouristoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristofferInput!
  ): CreateTouristofferPayload

  """Creates a single `Touristresource`."""
  createTouristresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristresourceInput!
  ): CreateTouristresourcePayload

  """Creates a single `Touristreview`."""
  createTouristreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristreviewInput!
  ): CreateTouristreviewPayload

  """Creates a single `Transportresource`."""
  createTransportresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTransportresourceInput!
  ): CreateTransportresourcePayload

  """Creates a single `Travelgroupresource`."""
  createTravelgroupresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTravelgroupresourceInput!
  ): CreateTravelgroupresourcePayload

  """Creates a single `Tripofferresource`."""
  createTripofferresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTripofferresourceInput!
  ): CreateTripofferresourcePayload

  """Creates a single `Triptype`."""
  createTriptype(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTriptypeInput!
  ): CreateTriptypePayload

  """Creates a single `User`."""
  createUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserInput!
  ): CreateUserPayload

  """Creates a single `UserAuthentication`."""
  createUserAuthentication(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserAuthenticationInput!
  ): CreateUserAuthenticationPayload

  """Creates a single `UserEmail`."""
  createUserEmail(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserEmailInput!
  ): CreateUserEmailPayload

  """Creates a single `UserFeedPost`."""
  createUserFeedPost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserFeedPostInput!
  ): CreateUserFeedPostPayload

  """Creates a single `Usertable`."""
  createUsertable(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUsertableInput!
  ): CreateUsertablePayload

  """Deletes a single `Accomodationresource` using a unique key."""
  deleteAccomodationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccomodationresourceInput!
  ): DeleteAccomodationresourcePayload

  """Deletes a single `Accomodationresource` using its globally unique id."""
  deleteAccomodationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccomodationresourceByNodeIdInput!
  ): DeleteAccomodationresourcePayload

  """Deletes a single `Account` using a unique key."""
  deleteAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccountInput!
  ): DeleteAccountPayload

  """Deletes a single `Account` using its globally unique id."""
  deleteAccountByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccountByNodeIdInput!
  ): DeleteAccountPayload

  """Deletes a single `Accounting` using a unique key."""
  deleteAccounting(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccountingInput!
  ): DeleteAccountingPayload

  """Deletes a single `Accounting` using its globally unique id."""
  deleteAccountingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccountingByNodeIdInput!
  ): DeleteAccountingPayload

  """Deletes a single `Agency` using a unique key."""
  deleteAgency(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyInput!
  ): DeleteAgencyPayload

  """Deletes a single `Agencyaccomodation` using a unique key."""
  deleteAgencyaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyaccomodationInput!
  ): DeleteAgencyaccomodationPayload

  """Deletes a single `Agencyaccomodation` using its globally unique id."""
  deleteAgencyaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyaccomodationByNodeIdInput!
  ): DeleteAgencyaccomodationPayload

  """Deletes a single `Agencybid` using a unique key."""
  deleteAgencybid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencybidInput!
  ): DeleteAgencybidPayload

  """Deletes a single `Agencybid` using its globally unique id."""
  deleteAgencybidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencybidByNodeIdInput!
  ): DeleteAgencybidPayload

  """Deletes a single `Agency` using its globally unique id."""
  deleteAgencyByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyByNodeIdInput!
  ): DeleteAgencyPayload

  """Deletes a single `Agencydeal` using a unique key."""
  deleteAgencydeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencydealInput!
  ): DeleteAgencydealPayload

  """Deletes a single `Agencydeal` using its globally unique id."""
  deleteAgencydealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencydealByNodeIdInput!
  ): DeleteAgencydealPayload

  """Deletes a single `Agencyevent` using a unique key."""
  deleteAgencyevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyeventInput!
  ): DeleteAgencyeventPayload

  """Deletes a single `Agencyevent` using its globally unique id."""
  deleteAgencyeventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyeventByNodeIdInput!
  ): DeleteAgencyeventPayload

  """Deletes a single `Agencyfavorite` using a unique key."""
  deleteAgencyfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyfavoriteInput!
  ): DeleteAgencyfavoritePayload

  """Deletes a single `Agencyfavorite` using its globally unique id."""
  deleteAgencyfavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyfavoriteByNodeIdInput!
  ): DeleteAgencyfavoritePayload

  """Deletes a single `Agencyguide` using a unique key."""
  deleteAgencyguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyguideInput!
  ): DeleteAgencyguidePayload

  """Deletes a single `Agencyguide` using its globally unique id."""
  deleteAgencyguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyguideByNodeIdInput!
  ): DeleteAgencyguidePayload

  """Deletes a single `Agencyhost` using a unique key."""
  deleteAgencyhost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyhostInput!
  ): DeleteAgencyhostPayload

  """Deletes a single `Agencyhost` using its globally unique id."""
  deleteAgencyhostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyhostByNodeIdInput!
  ): DeleteAgencyhostPayload

  """Deletes a single `Agencyoffer` using a unique key."""
  deleteAgencyoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyofferInput!
  ): DeleteAgencyofferPayload

  """Deletes a single `Agencyoffer` using its globally unique id."""
  deleteAgencyofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyofferByNodeIdInput!
  ): DeleteAgencyofferPayload

  """Deletes a single `Agencyreview` using a unique key."""
  deleteAgencyreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyreviewInput!
  ): DeleteAgencyreviewPayload

  """Deletes a single `Agencyreview` using its globally unique id."""
  deleteAgencyreviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyreviewByNodeIdInput!
  ): DeleteAgencyreviewPayload

  """Deletes a single `Agencytourist` using a unique key."""
  deleteAgencytourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytouristInput!
  ): DeleteAgencytouristPayload

  """Deletes a single `Agencytourist` using its globally unique id."""
  deleteAgencytouristByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytouristByNodeIdInput!
  ): DeleteAgencytouristPayload

  """Deletes a single `Agencytransport` using a unique key."""
  deleteAgencytransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytransportInput!
  ): DeleteAgencytransportPayload

  """Deletes a single `Agencytransport` using its globally unique id."""
  deleteAgencytransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytransportByNodeIdInput!
  ): DeleteAgencytransportPayload

  """Deletes a single `Agencytravelgroup` using a unique key."""
  deleteAgencytravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytravelgroupInput!
  ): DeleteAgencytravelgroupPayload

  """Deletes a single `Agencytravelgroup` using its globally unique id."""
  deleteAgencytravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytravelgroupByNodeIdInput!
  ): DeleteAgencytravelgroupPayload

  """Deletes a single `Agencytripoffer` using a unique key."""
  deleteAgencytripoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytripofferInput!
  ): DeleteAgencytripofferPayload

  """Deletes a single `Agencytripoffer` using its globally unique id."""
  deleteAgencytripofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytripofferByNodeIdInput!
  ): DeleteAgencytripofferPayload

  """Deletes a single `Agencyuser` using a unique key."""
  deleteAgencyuser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyuserInput!
  ): DeleteAgencyuserPayload

  """Deletes a single `Agencyuser` using its globally unique id."""
  deleteAgencyuserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyuserByNodeIdInput!
  ): DeleteAgencyuserPayload

  """Deletes a single `Assocaccomodation` using a unique key."""
  deleteAssocaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocaccomodationInput!
  ): DeleteAssocaccomodationPayload

  """Deletes a single `Assocaccomodation` using its globally unique id."""
  deleteAssocaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocaccomodationByNodeIdInput!
  ): DeleteAssocaccomodationPayload

  """Deletes a single `Assocdestination` using a unique key."""
  deleteAssocdestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocdestinationInput!
  ): DeleteAssocdestinationPayload

  """Deletes a single `Assocdestination` using its globally unique id."""
  deleteAssocdestinationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocdestinationByNodeIdInput!
  ): DeleteAssocdestinationPayload

  """Deletes a single `Assocevent` using a unique key."""
  deleteAssocevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoceventInput!
  ): DeleteAssoceventPayload

  """Deletes a single `Assocevent` using its globally unique id."""
  deleteAssoceventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoceventByNodeIdInput!
  ): DeleteAssoceventPayload

  """Deletes a single `Assocguide` using a unique key."""
  deleteAssocguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocguideInput!
  ): DeleteAssocguidePayload

  """Deletes a single `Assocguide` using its globally unique id."""
  deleteAssocguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocguideByNodeIdInput!
  ): DeleteAssocguidePayload

  """Deletes a single `Assochost` using a unique key."""
  deleteAssochost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssochostInput!
  ): DeleteAssochostPayload

  """Deletes a single `Assochost` using its globally unique id."""
  deleteAssochostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssochostByNodeIdInput!
  ): DeleteAssochostPayload

  """Deletes a single `Assoctransport` using a unique key."""
  deleteAssoctransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoctransportInput!
  ): DeleteAssoctransportPayload

  """Deletes a single `Assoctransport` using its globally unique id."""
  deleteAssoctransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoctransportByNodeIdInput!
  ): DeleteAssoctransportPayload

  """Deletes a single `Assoctravelgroup` using a unique key."""
  deleteAssoctravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoctravelgroupInput!
  ): DeleteAssoctravelgroupPayload

  """Deletes a single `Assoctravelgroup` using its globally unique id."""
  deleteAssoctravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoctravelgroupByNodeIdInput!
  ): DeleteAssoctravelgroupPayload

  """Deletes a single `Auctioninfo` using a unique key."""
  deleteAuctioninfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAuctioninfoInput!
  ): DeleteAuctioninfoPayload

  """Deletes a single `Auctioninfo` using its globally unique id."""
  deleteAuctioninfoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAuctioninfoByNodeIdInput!
  ): DeleteAuctioninfoPayload

  """Deletes a single `Bid` using a unique key."""
  deleteBid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteBidInput!
  ): DeleteBidPayload

  """Deletes a single `Bid` using its globally unique id."""
  deleteBidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteBidByNodeIdInput!
  ): DeleteBidPayload

  """Deletes a single `Bookingcalendar` using a unique key."""
  deleteBookingcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteBookingcalendarInput!
  ): DeleteBookingcalendarPayload

  """Deletes a single `Bookingcalendar` using its globally unique id."""
  deleteBookingcalendarByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteBookingcalendarByNodeIdInput!
  ): DeleteBookingcalendarPayload

  """Deletes a single `Calendarentry` using a unique key."""
  deleteCalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarentryInput!
  ): DeleteCalendarentryPayload

  """Deletes a single `Calendarentry` using its globally unique id."""
  deleteCalendarentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarentryByNodeIdInput!
  ): DeleteCalendarentryPayload

  """Deletes a single `Commandlogentry` using a unique key."""
  deleteCommandlogentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCommandlogentryInput!
  ): DeleteCommandlogentryPayload

  """Deletes a single `Commandlogentry` using its globally unique id."""
  deleteCommandlogentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCommandlogentryByNodeIdInput!
  ): DeleteCommandlogentryPayload

  """Deletes a single `Contact` using a unique key."""
  deleteContact(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteContactInput!
  ): DeleteContactPayload

  """Deletes a single `Contact` using its globally unique id."""
  deleteContactByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteContactByNodeIdInput!
  ): DeleteContactPayload

  """Deletes a single `Destinationresource` using a unique key."""
  deleteDestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDestinationresourceInput!
  ): DeleteDestinationresourcePayload

  """Deletes a single `Destinationresource` using its globally unique id."""
  deleteDestinationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDestinationresourceByNodeIdInput!
  ): DeleteDestinationresourcePayload

  """Deletes a single `Eventresource` using a unique key."""
  deleteEventresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteEventresourceInput!
  ): DeleteEventresourcePayload

  """Deletes a single `Eventresource` using its globally unique id."""
  deleteEventresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteEventresourceByNodeIdInput!
  ): DeleteEventresourcePayload

  """Deletes a single `Geocoding` using a unique key."""
  deleteGeocoding(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGeocodingInput!
  ): DeleteGeocodingPayload

  """Deletes a single `Geocoding` using its globally unique id."""
  deleteGeocodingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGeocodingByNodeIdInput!
  ): DeleteGeocodingPayload

  """Deletes a single `Guide` using a unique key."""
  deleteGuide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideInput!
  ): DeleteGuidePayload

  """Deletes a single `Guidebid` using a unique key."""
  deleteGuidebid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidebidInput!
  ): DeleteGuidebidPayload

  """Deletes a single `Guidebid` using its globally unique id."""
  deleteGuidebidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidebidByNodeIdInput!
  ): DeleteGuidebidPayload

  """Deletes a single `Guide` using its globally unique id."""
  deleteGuideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideByNodeIdInput!
  ): DeleteGuidePayload

  """Deletes a single `Guidedeal` using a unique key."""
  deleteGuidedeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidedealInput!
  ): DeleteGuidedealPayload

  """Deletes a single `Guidedeal` using its globally unique id."""
  deleteGuidedealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidedealByNodeIdInput!
  ): DeleteGuidedealPayload

  """Deletes a single `Guidefavorite` using a unique key."""
  deleteGuidefavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidefavoriteInput!
  ): DeleteGuidefavoritePayload

  """Deletes a single `Guidefavorite` using its globally unique id."""
  deleteGuidefavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidefavoriteByNodeIdInput!
  ): DeleteGuidefavoritePayload

  """Deletes a single `Guideoffer` using a unique key."""
  deleteGuideoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideofferInput!
  ): DeleteGuideofferPayload

  """Deletes a single `Guideoffer` using its globally unique id."""
  deleteGuideofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideofferByNodeIdInput!
  ): DeleteGuideofferPayload

  """Deletes a single `Guideresource` using a unique key."""
  deleteGuideresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideresourceInput!
  ): DeleteGuideresourcePayload

  """Deletes a single `Guideresource` using its globally unique id."""
  deleteGuideresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideresourceByNodeIdInput!
  ): DeleteGuideresourcePayload

  """Deletes a single `Guidereview` using a unique key."""
  deleteGuidereview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidereviewInput!
  ): DeleteGuidereviewPayload

  """Deletes a single `Guidereview` using its globally unique id."""
  deleteGuidereviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidereviewByNodeIdInput!
  ): DeleteGuidereviewPayload

  """Deletes a single `Hostresource` using a unique key."""
  deleteHostresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteHostresourceInput!
  ): DeleteHostresourcePayload

  """Deletes a single `Hostresource` using its globally unique id."""
  deleteHostresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteHostresourceByNodeIdInput!
  ): DeleteHostresourcePayload

  """Deletes a single `Languagelevel` using a unique key."""
  deleteLanguagelevel(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteLanguagelevelInput!
  ): DeleteLanguagelevelPayload

  """Deletes a single `Languagelevel` using its globally unique id."""
  deleteLanguagelevelByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteLanguagelevelByNodeIdInput!
  ): DeleteLanguagelevelPayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceInput!
  ): DeleteMediadestinationresourcePayload

  """
  Deletes a single `Mediadestinationresource` using its globally unique id.
  """
  deleteMediadestinationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByNodeIdInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Medialocation` using a unique key."""
  deleteMedialocation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Medialocation` using its globally unique id."""
  deleteMedialocationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationByNodeIdInput!
  ): DeleteMedialocationPayload

  """
  Only the 'owner' may delete an organization. This operation cannot be undone, so be sure that it is what you intend.
  """
  deleteOrganization(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteOrganizationInput!
  ): DeleteOrganizationPayload

  """Deletes a single `OrganizationInvitation` using a unique key."""
  deleteOrganizationInvitation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteOrganizationInvitationInput!
  ): DeleteOrganizationInvitationPayload

  """
  Deletes a single `OrganizationInvitation` using its globally unique id.
  """
  deleteOrganizationInvitationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteOrganizationInvitationByNodeIdInput!
  ): DeleteOrganizationInvitationPayload

  """Deletes a single `OrganizationMembership` using a unique key."""
  deleteOrganizationMembership(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteOrganizationMembershipInput!
  ): DeleteOrganizationMembershipPayload

  """
  Deletes a single `OrganizationMembership` using its globally unique id.
  """
  deleteOrganizationMembershipByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteOrganizationMembershipByNodeIdInput!
  ): DeleteOrganizationMembershipPayload

  """Deletes a single `Post` using a unique key."""
  deletePost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePostInput!
  ): DeletePostPayload

  """Deletes a single `Post` using its globally unique id."""
  deletePostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePostByNodeIdInput!
  ): DeletePostPayload

  """Deletes a single `Presentation` using a unique key."""
  deletePresentation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePresentationInput!
  ): DeletePresentationPayload

  """Deletes a single `Presentation` using its globally unique id."""
  deletePresentationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePresentationByNodeIdInput!
  ): DeletePresentationPayload

  """Deletes a single `Priceinfo` using a unique key."""
  deletePriceinfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePriceinfoInput!
  ): DeletePriceinfoPayload

  """Deletes a single `Priceinfo` using its globally unique id."""
  deletePriceinfoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePriceinfoByNodeIdInput!
  ): DeletePriceinfoPayload

  """Deletes a single `Publisher` using a unique key."""
  deletePublisher(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePublisherInput!
  ): DeletePublisherPayload

  """Deletes a single `Publisher` using its globally unique id."""
  deletePublisherByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePublisherByNodeIdInput!
  ): DeletePublisherPayload

  """Deletes a single `Review` using a unique key."""
  deleteReview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteReviewInput!
  ): DeleteReviewPayload

  """Deletes a single `Review` using its globally unique id."""
  deleteReviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteReviewByNodeIdInput!
  ): DeleteReviewPayload

  """Deletes a single `Roomcalendar` using a unique key."""
  deleteRoomcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomcalendarInput!
  ): DeleteRoomcalendarPayload

  """Deletes a single `Roomcalendar` using its globally unique id."""
  deleteRoomcalendarByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomcalendarByNodeIdInput!
  ): DeleteRoomcalendarPayload

  """Deletes a single `Roomcalendarentry` using a unique key."""
  deleteRoomcalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomcalendarentryInput!
  ): DeleteRoomcalendarentryPayload

  """Deletes a single `Roomcalendarentry` using its globally unique id."""
  deleteRoomcalendarentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomcalendarentryByNodeIdInput!
  ): DeleteRoomcalendarentryPayload

  """Deletes a single `Roomlist` using a unique key."""
  deleteRoomlist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomlistInput!
  ): DeleteRoomlistPayload

  """Deletes a single `Roomlist` using its globally unique id."""
  deleteRoomlistByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomlistByNodeIdInput!
  ): DeleteRoomlistPayload

  """Deletes a single `Similarbytriptypeaccomodation` using a unique key."""
  deleteSimilarbytriptypeaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeaccomodationInput!
  ): DeleteSimilarbytriptypeaccomodationPayload

  """
  Deletes a single `Similarbytriptypeaccomodation` using its globally unique id.
  """
  deleteSimilarbytriptypeaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeaccomodationByNodeIdInput!
  ): DeleteSimilarbytriptypeaccomodationPayload

  """Deletes a single `Similarbytriptypedestination` using a unique key."""
  deleteSimilarbytriptypedestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypedestinationInput!
  ): DeleteSimilarbytriptypedestinationPayload

  """
  Deletes a single `Similarbytriptypedestination` using its globally unique id.
  """
  deleteSimilarbytriptypedestinationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypedestinationByNodeIdInput!
  ): DeleteSimilarbytriptypedestinationPayload

  """Deletes a single `Similarbytriptypeevent` using a unique key."""
  deleteSimilarbytriptypeevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeeventInput!
  ): DeleteSimilarbytriptypeeventPayload

  """
  Deletes a single `Similarbytriptypeevent` using its globally unique id.
  """
  deleteSimilarbytriptypeeventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeeventByNodeIdInput!
  ): DeleteSimilarbytriptypeeventPayload

  """Deletes a single `Similarbytriptypeguide` using a unique key."""
  deleteSimilarbytriptypeguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeguideInput!
  ): DeleteSimilarbytriptypeguidePayload

  """
  Deletes a single `Similarbytriptypeguide` using its globally unique id.
  """
  deleteSimilarbytriptypeguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeguideByNodeIdInput!
  ): DeleteSimilarbytriptypeguidePayload

  """Deletes a single `Similarbytriptypehost` using a unique key."""
  deleteSimilarbytriptypehost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypehostInput!
  ): DeleteSimilarbytriptypehostPayload

  """Deletes a single `Similarbytriptypehost` using its globally unique id."""
  deleteSimilarbytriptypehostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypehostByNodeIdInput!
  ): DeleteSimilarbytriptypehostPayload

  """Deletes a single `Similarbytriptypetransport` using a unique key."""
  deleteSimilarbytriptypetransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypetransportInput!
  ): DeleteSimilarbytriptypetransportPayload

  """
  Deletes a single `Similarbytriptypetransport` using its globally unique id.
  """
  deleteSimilarbytriptypetransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypetransportByNodeIdInput!
  ): DeleteSimilarbytriptypetransportPayload

  """Deletes a single `Similarbytriptypetravelgroup` using a unique key."""
  deleteSimilarbytriptypetravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypetravelgroupInput!
  ): DeleteSimilarbytriptypetravelgroupPayload

  """
  Deletes a single `Similarbytriptypetravelgroup` using its globally unique id.
  """
  deleteSimilarbytriptypetravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypetravelgroupByNodeIdInput!
  ): DeleteSimilarbytriptypetravelgroupPayload

  """Deletes a single `Timerange` using a unique key."""
  deleteTimerange(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTimerangeInput!
  ): DeleteTimerangePayload

  """Deletes a single `Timerange` using its globally unique id."""
  deleteTimerangeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTimerangeByNodeIdInput!
  ): DeleteTimerangePayload

  """Deletes a single `Topic` using a unique key."""
  deleteTopic(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTopicInput!
  ): DeleteTopicPayload

  """Deletes a single `Topic` using its globally unique id."""
  deleteTopicByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTopicByNodeIdInput!
  ): DeleteTopicPayload

  """Deletes a single `Tourist` using a unique key."""
  deleteTourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristInput!
  ): DeleteTouristPayload

  """Deletes a single `Touristbid` using a unique key."""
  deleteTouristbid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristbidInput!
  ): DeleteTouristbidPayload

  """Deletes a single `Touristbid` using its globally unique id."""
  deleteTouristbidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristbidByNodeIdInput!
  ): DeleteTouristbidPayload

  """Deletes a single `Tourist` using its globally unique id."""
  deleteTouristByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristByNodeIdInput!
  ): DeleteTouristPayload

  """Deletes a single `Touristdeal` using a unique key."""
  deleteTouristdeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristdealInput!
  ): DeleteTouristdealPayload

  """Deletes a single `Touristdeal` using its globally unique id."""
  deleteTouristdealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristdealByNodeIdInput!
  ): DeleteTouristdealPayload

  """Deletes a single `Touristfavorite` using a unique key."""
  deleteTouristfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristfavoriteInput!
  ): DeleteTouristfavoritePayload

  """Deletes a single `Touristfavorite` using its globally unique id."""
  deleteTouristfavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristfavoriteByNodeIdInput!
  ): DeleteTouristfavoritePayload

  """Deletes a single `Touristoffer` using a unique key."""
  deleteTouristoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristofferInput!
  ): DeleteTouristofferPayload

  """Deletes a single `Touristoffer` using its globally unique id."""
  deleteTouristofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristofferByNodeIdInput!
  ): DeleteTouristofferPayload

  """Deletes a single `Touristresource` using a unique key."""
  deleteTouristresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristresourceInput!
  ): DeleteTouristresourcePayload

  """Deletes a single `Touristresource` using its globally unique id."""
  deleteTouristresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristresourceByNodeIdInput!
  ): DeleteTouristresourcePayload

  """Deletes a single `Touristreview` using a unique key."""
  deleteTouristreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristreviewInput!
  ): DeleteTouristreviewPayload

  """Deletes a single `Touristreview` using its globally unique id."""
  deleteTouristreviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristreviewByNodeIdInput!
  ): DeleteTouristreviewPayload

  """Deletes a single `Transportresource` using a unique key."""
  deleteTransportresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTransportresourceInput!
  ): DeleteTransportresourcePayload

  """Deletes a single `Transportresource` using its globally unique id."""
  deleteTransportresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTransportresourceByNodeIdInput!
  ): DeleteTransportresourcePayload

  """Deletes a single `Travelgroupresource` using a unique key."""
  deleteTravelgroupresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTravelgroupresourceInput!
  ): DeleteTravelgroupresourcePayload

  """Deletes a single `Travelgroupresource` using its globally unique id."""
  deleteTravelgroupresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTravelgroupresourceByNodeIdInput!
  ): DeleteTravelgroupresourcePayload

  """Deletes a single `Tripofferresource` using a unique key."""
  deleteTripofferresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTripofferresourceInput!
  ): DeleteTripofferresourcePayload

  """Deletes a single `Tripofferresource` using its globally unique id."""
  deleteTripofferresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTripofferresourceByNodeIdInput!
  ): DeleteTripofferresourcePayload

  """Deletes a single `Triptype` using a unique key."""
  deleteTriptype(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTriptypeInput!
  ): DeleteTriptypePayload

  """Deletes a single `Triptype` using its globally unique id."""
  deleteTriptypeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTriptypeByNodeIdInput!
  ): DeleteTriptypePayload

  """Deletes a single `User` using a unique key."""
  deleteUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserInput!
  ): DeleteUserPayload

  """Deletes a single `UserAuthentication` using a unique key."""
  deleteUserAuthentication(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserAuthenticationInput!
  ): DeleteUserAuthenticationPayload

  """Deletes a single `UserAuthentication` using its globally unique id."""
  deleteUserAuthenticationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserAuthenticationByNodeIdInput!
  ): DeleteUserAuthenticationPayload

  """Deletes a single `User` using its globally unique id."""
  deleteUserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserByNodeIdInput!
  ): DeleteUserPayload

  """Deletes a single `UserEmail` using a unique key."""
  deleteUserEmail(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserEmailInput!
  ): DeleteUserEmailPayload

  """Deletes a single `UserEmail` using its globally unique id."""
  deleteUserEmailByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserEmailByNodeIdInput!
  ): DeleteUserEmailPayload

  """Deletes a single `UserFeedPost` using a unique key."""
  deleteUserFeedPost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserFeedPostInput!
  ): DeleteUserFeedPostPayload

  """Deletes a single `UserFeedPost` using its globally unique id."""
  deleteUserFeedPostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserFeedPostByNodeIdInput!
  ): DeleteUserFeedPostPayload

  """Deletes a single `Usertable` using a unique key."""
  deleteUsertable(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsertableInput!
  ): DeleteUsertablePayload

  """Deletes a single `Usertable` using its globally unique id."""
  deleteUsertableByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsertableByNodeIdInput!
  ): DeleteUsertablePayload

  """
  If you've forgotten your password, give us one of your email addresses and
  we'll send you a reset token. Note this only works if you have added an email address!
  """
  forgotPassword(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: ForgotPasswordInput!
  ): ForgotPasswordPayload

  """
  You may invite a user to your organization either by their username (only for
  verified users) or by their email. If you opt to invite by email then an email
  will be sent to this person containing a code that they need to accept the
  invitation. If the person doesn't already have an account they will be
  instructed to create one; their account need not have the email address that
  you invited listed as the secret code is confirmation enough.
  """
  inviteToOrganization(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: InviteToOrganizationInput!
  ): InviteToOrganizationPayload

  """
  Use this mutation to log in to your account; this login uses sessions so you do not need to take further action.
  """
  login(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: LoginInput!
  ): LoginPayload

  """
  Use this mutation to logout from your account. Don't forget to clear the client state!
  """
  logout: LogoutPayload

  """
  Your primary email is where we'll notify of account events; other emails may
  be used for discovery or login. Use this when you're changing your email address.
  """
  makeEmailPrimary(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: MakeEmailPrimaryInput!
  ): MakeEmailPrimaryPayload

  """
  Use this mutation to create an account on our system. This may only be used if you are logged out.
  """
  register(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: RegisterInput!
  ): RegisterPayload

  """
  The owner of an `Organization` may remove an `OrganizationMember` with this mutation.
  """
  removeFromOrganization(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: RemoveFromOrganizationInput!
  ): RemoveFromOrganizationPayload

  """Begin the account deletion flow by requesting the confirmation email"""
  requestAccountDeletion(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: RequestAccountDeletionInput!
  ): RequestAccountDeletionPayload

  """
  If you didn't receive the verification code for this email, we can resend it.
  We silently cap the rate of resends on the backend, so calls to this function
  may not result in another email being sent if it has been called recently.
  """
  resendEmailVerificationCode(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: ResendEmailVerificationCodeInput!
  ): ResendEmailVerificationCodePayload

  """
  After triggering forgotPassword, you'll be sent a reset token. Combine this
  with your user ID and a new password to reset your password.
  """
  resetPassword(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: ResetPasswordInput!
  ): ResetPasswordPayload

  """
  The owner of an `Organization` may use this mutation to make any organization member the billing contact.
  """
  transferOrganizationBillingContact(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: TransferOrganizationBillingContactInput!
  ): TransferOrganizationBillingContactPayload

  """
  The owner of an `Organization` may use this mutation to transfer ownership to
  a different organization member. Take care, if you assign ownership to someone
  who cannot or will not access their account then you may need to contact
  support to have ownership reassigned.
  """
  transferOrganizationOwnership(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: TransferOrganizationOwnershipInput!
  ): TransferOrganizationOwnershipPayload

  """
  Updates a single `Accomodationresource` using a unique key and a patch.
  """
  updateAccomodationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccomodationresourceInput!
  ): UpdateAccomodationresourcePayload

  """
  Updates a single `Accomodationresource` using its globally unique id and a patch.
  """
  updateAccomodationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccomodationresourceByNodeIdInput!
  ): UpdateAccomodationresourcePayload

  """Updates a single `Account` using a unique key and a patch."""
  updateAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccountInput!
  ): UpdateAccountPayload

  """Updates a single `Account` using its globally unique id and a patch."""
  updateAccountByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccountByNodeIdInput!
  ): UpdateAccountPayload

  """Updates a single `Accounting` using a unique key and a patch."""
  updateAccounting(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccountingInput!
  ): UpdateAccountingPayload

  """
  Updates a single `Accounting` using its globally unique id and a patch.
  """
  updateAccountingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccountingByNodeIdInput!
  ): UpdateAccountingPayload

  """Updates a single `Agency` using a unique key and a patch."""
  updateAgency(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyInput!
  ): UpdateAgencyPayload

  """Updates a single `Agencyaccomodation` using a unique key and a patch."""
  updateAgencyaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyaccomodationInput!
  ): UpdateAgencyaccomodationPayload

  """
  Updates a single `Agencyaccomodation` using its globally unique id and a patch.
  """
  updateAgencyaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyaccomodationByNodeIdInput!
  ): UpdateAgencyaccomodationPayload

  """Updates a single `Agencybid` using a unique key and a patch."""
  updateAgencybid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencybidInput!
  ): UpdateAgencybidPayload

  """Updates a single `Agencybid` using its globally unique id and a patch."""
  updateAgencybidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencybidByNodeIdInput!
  ): UpdateAgencybidPayload

  """Updates a single `Agency` using its globally unique id and a patch."""
  updateAgencyByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyByNodeIdInput!
  ): UpdateAgencyPayload

  """Updates a single `Agencydeal` using a unique key and a patch."""
  updateAgencydeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencydealInput!
  ): UpdateAgencydealPayload

  """
  Updates a single `Agencydeal` using its globally unique id and a patch.
  """
  updateAgencydealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencydealByNodeIdInput!
  ): UpdateAgencydealPayload

  """Updates a single `Agencyevent` using a unique key and a patch."""
  updateAgencyevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyeventInput!
  ): UpdateAgencyeventPayload

  """
  Updates a single `Agencyevent` using its globally unique id and a patch.
  """
  updateAgencyeventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyeventByNodeIdInput!
  ): UpdateAgencyeventPayload

  """Updates a single `Agencyfavorite` using a unique key and a patch."""
  updateAgencyfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyfavoriteInput!
  ): UpdateAgencyfavoritePayload

  """
  Updates a single `Agencyfavorite` using its globally unique id and a patch.
  """
  updateAgencyfavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyfavoriteByNodeIdInput!
  ): UpdateAgencyfavoritePayload

  """Updates a single `Agencyguide` using a unique key and a patch."""
  updateAgencyguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyguideInput!
  ): UpdateAgencyguidePayload

  """
  Updates a single `Agencyguide` using its globally unique id and a patch.
  """
  updateAgencyguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyguideByNodeIdInput!
  ): UpdateAgencyguidePayload

  """Updates a single `Agencyhost` using a unique key and a patch."""
  updateAgencyhost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyhostInput!
  ): UpdateAgencyhostPayload

  """
  Updates a single `Agencyhost` using its globally unique id and a patch.
  """
  updateAgencyhostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyhostByNodeIdInput!
  ): UpdateAgencyhostPayload

  """Updates a single `Agencyoffer` using a unique key and a patch."""
  updateAgencyoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyofferInput!
  ): UpdateAgencyofferPayload

  """
  Updates a single `Agencyoffer` using its globally unique id and a patch.
  """
  updateAgencyofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyofferByNodeIdInput!
  ): UpdateAgencyofferPayload

  """Updates a single `Agencyreview` using a unique key and a patch."""
  updateAgencyreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyreviewInput!
  ): UpdateAgencyreviewPayload

  """
  Updates a single `Agencyreview` using its globally unique id and a patch.
  """
  updateAgencyreviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyreviewByNodeIdInput!
  ): UpdateAgencyreviewPayload

  """Updates a single `Agencytourist` using a unique key and a patch."""
  updateAgencytourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytouristInput!
  ): UpdateAgencytouristPayload

  """
  Updates a single `Agencytourist` using its globally unique id and a patch.
  """
  updateAgencytouristByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytouristByNodeIdInput!
  ): UpdateAgencytouristPayload

  """Updates a single `Agencytransport` using a unique key and a patch."""
  updateAgencytransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytransportInput!
  ): UpdateAgencytransportPayload

  """
  Updates a single `Agencytransport` using its globally unique id and a patch.
  """
  updateAgencytransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytransportByNodeIdInput!
  ): UpdateAgencytransportPayload

  """Updates a single `Agencytravelgroup` using a unique key and a patch."""
  updateAgencytravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytravelgroupInput!
  ): UpdateAgencytravelgroupPayload

  """
  Updates a single `Agencytravelgroup` using its globally unique id and a patch.
  """
  updateAgencytravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytravelgroupByNodeIdInput!
  ): UpdateAgencytravelgroupPayload

  """Updates a single `Agencytripoffer` using a unique key and a patch."""
  updateAgencytripoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytripofferInput!
  ): UpdateAgencytripofferPayload

  """
  Updates a single `Agencytripoffer` using its globally unique id and a patch.
  """
  updateAgencytripofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytripofferByNodeIdInput!
  ): UpdateAgencytripofferPayload

  """Updates a single `Agencyuser` using a unique key and a patch."""
  updateAgencyuser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyuserInput!
  ): UpdateAgencyuserPayload

  """
  Updates a single `Agencyuser` using its globally unique id and a patch.
  """
  updateAgencyuserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyuserByNodeIdInput!
  ): UpdateAgencyuserPayload

  """Updates a single `Assocaccomodation` using a unique key and a patch."""
  updateAssocaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocaccomodationInput!
  ): UpdateAssocaccomodationPayload

  """
  Updates a single `Assocaccomodation` using its globally unique id and a patch.
  """
  updateAssocaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocaccomodationByNodeIdInput!
  ): UpdateAssocaccomodationPayload

  """Updates a single `Assocdestination` using a unique key and a patch."""
  updateAssocdestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocdestinationInput!
  ): UpdateAssocdestinationPayload

  """
  Updates a single `Assocdestination` using its globally unique id and a patch.
  """
  updateAssocdestinationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocdestinationByNodeIdInput!
  ): UpdateAssocdestinationPayload

  """Updates a single `Assocevent` using a unique key and a patch."""
  updateAssocevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoceventInput!
  ): UpdateAssoceventPayload

  """
  Updates a single `Assocevent` using its globally unique id and a patch.
  """
  updateAssoceventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoceventByNodeIdInput!
  ): UpdateAssoceventPayload

  """Updates a single `Assocguide` using a unique key and a patch."""
  updateAssocguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocguideInput!
  ): UpdateAssocguidePayload

  """
  Updates a single `Assocguide` using its globally unique id and a patch.
  """
  updateAssocguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocguideByNodeIdInput!
  ): UpdateAssocguidePayload

  """Updates a single `Assochost` using a unique key and a patch."""
  updateAssochost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssochostInput!
  ): UpdateAssochostPayload

  """Updates a single `Assochost` using its globally unique id and a patch."""
  updateAssochostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssochostByNodeIdInput!
  ): UpdateAssochostPayload

  """Updates a single `Assoctransport` using a unique key and a patch."""
  updateAssoctransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoctransportInput!
  ): UpdateAssoctransportPayload

  """
  Updates a single `Assoctransport` using its globally unique id and a patch.
  """
  updateAssoctransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoctransportByNodeIdInput!
  ): UpdateAssoctransportPayload

  """Updates a single `Assoctravelgroup` using a unique key and a patch."""
  updateAssoctravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoctravelgroupInput!
  ): UpdateAssoctravelgroupPayload

  """
  Updates a single `Assoctravelgroup` using its globally unique id and a patch.
  """
  updateAssoctravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoctravelgroupByNodeIdInput!
  ): UpdateAssoctravelgroupPayload

  """Updates a single `Auctioninfo` using a unique key and a patch."""
  updateAuctioninfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAuctioninfoInput!
  ): UpdateAuctioninfoPayload

  """
  Updates a single `Auctioninfo` using its globally unique id and a patch.
  """
  updateAuctioninfoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAuctioninfoByNodeIdInput!
  ): UpdateAuctioninfoPayload

  """Updates a single `Bid` using a unique key and a patch."""
  updateBid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateBidInput!
  ): UpdateBidPayload

  """Updates a single `Bid` using its globally unique id and a patch."""
  updateBidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateBidByNodeIdInput!
  ): UpdateBidPayload

  """Updates a single `Bookingcalendar` using a unique key and a patch."""
  updateBookingcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateBookingcalendarInput!
  ): UpdateBookingcalendarPayload

  """
  Updates a single `Bookingcalendar` using its globally unique id and a patch.
  """
  updateBookingcalendarByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateBookingcalendarByNodeIdInput!
  ): UpdateBookingcalendarPayload

  """Updates a single `Calendarentry` using a unique key and a patch."""
  updateCalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarentryInput!
  ): UpdateCalendarentryPayload

  """
  Updates a single `Calendarentry` using its globally unique id and a patch.
  """
  updateCalendarentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarentryByNodeIdInput!
  ): UpdateCalendarentryPayload

  """Updates a single `Commandlogentry` using a unique key and a patch."""
  updateCommandlogentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCommandlogentryInput!
  ): UpdateCommandlogentryPayload

  """
  Updates a single `Commandlogentry` using its globally unique id and a patch.
  """
  updateCommandlogentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCommandlogentryByNodeIdInput!
  ): UpdateCommandlogentryPayload

  """Updates a single `Contact` using a unique key and a patch."""
  updateContact(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateContactInput!
  ): UpdateContactPayload

  """Updates a single `Contact` using its globally unique id and a patch."""
  updateContactByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateContactByNodeIdInput!
  ): UpdateContactPayload

  """Updates a single `Destinationresource` using a unique key and a patch."""
  updateDestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDestinationresourceInput!
  ): UpdateDestinationresourcePayload

  """
  Updates a single `Destinationresource` using its globally unique id and a patch.
  """
  updateDestinationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDestinationresourceByNodeIdInput!
  ): UpdateDestinationresourcePayload

  """Updates a single `Eventresource` using a unique key and a patch."""
  updateEventresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateEventresourceInput!
  ): UpdateEventresourcePayload

  """
  Updates a single `Eventresource` using its globally unique id and a patch.
  """
  updateEventresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateEventresourceByNodeIdInput!
  ): UpdateEventresourcePayload

  """Updates a single `Geocoding` using a unique key and a patch."""
  updateGeocoding(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGeocodingInput!
  ): UpdateGeocodingPayload

  """Updates a single `Geocoding` using its globally unique id and a patch."""
  updateGeocodingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGeocodingByNodeIdInput!
  ): UpdateGeocodingPayload

  """Updates a single `Guide` using a unique key and a patch."""
  updateGuide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideInput!
  ): UpdateGuidePayload

  """Updates a single `Guidebid` using a unique key and a patch."""
  updateGuidebid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidebidInput!
  ): UpdateGuidebidPayload

  """Updates a single `Guidebid` using its globally unique id and a patch."""
  updateGuidebidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidebidByNodeIdInput!
  ): UpdateGuidebidPayload

  """Updates a single `Guide` using its globally unique id and a patch."""
  updateGuideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideByNodeIdInput!
  ): UpdateGuidePayload

  """Updates a single `Guidedeal` using a unique key and a patch."""
  updateGuidedeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidedealInput!
  ): UpdateGuidedealPayload

  """Updates a single `Guidedeal` using its globally unique id and a patch."""
  updateGuidedealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidedealByNodeIdInput!
  ): UpdateGuidedealPayload

  """Updates a single `Guidefavorite` using a unique key and a patch."""
  updateGuidefavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidefavoriteInput!
  ): UpdateGuidefavoritePayload

  """
  Updates a single `Guidefavorite` using its globally unique id and a patch.
  """
  updateGuidefavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidefavoriteByNodeIdInput!
  ): UpdateGuidefavoritePayload

  """Updates a single `Guideoffer` using a unique key and a patch."""
  updateGuideoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideofferInput!
  ): UpdateGuideofferPayload

  """
  Updates a single `Guideoffer` using its globally unique id and a patch.
  """
  updateGuideofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideofferByNodeIdInput!
  ): UpdateGuideofferPayload

  """Updates a single `Guideresource` using a unique key and a patch."""
  updateGuideresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideresourceInput!
  ): UpdateGuideresourcePayload

  """
  Updates a single `Guideresource` using its globally unique id and a patch.
  """
  updateGuideresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideresourceByNodeIdInput!
  ): UpdateGuideresourcePayload

  """Updates a single `Guidereview` using a unique key and a patch."""
  updateGuidereview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidereviewInput!
  ): UpdateGuidereviewPayload

  """
  Updates a single `Guidereview` using its globally unique id and a patch.
  """
  updateGuidereviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidereviewByNodeIdInput!
  ): UpdateGuidereviewPayload

  """Updates a single `Hostresource` using a unique key and a patch."""
  updateHostresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateHostresourceInput!
  ): UpdateHostresourcePayload

  """
  Updates a single `Hostresource` using its globally unique id and a patch.
  """
  updateHostresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateHostresourceByNodeIdInput!
  ): UpdateHostresourcePayload

  """Updates a single `Languagelevel` using a unique key and a patch."""
  updateLanguagelevel(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateLanguagelevelInput!
  ): UpdateLanguagelevelPayload

  """
  Updates a single `Languagelevel` using its globally unique id and a patch.
  """
  updateLanguagelevelByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateLanguagelevelByNodeIdInput!
  ): UpdateLanguagelevelPayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using its globally unique id and a patch.
  """
  updateMediadestinationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByNodeIdInput!
  ): UpdateMediadestinationresourcePayload

  """Updates a single `Medialocation` using a unique key and a patch."""
  updateMedialocation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationInput!
  ): UpdateMedialocationPayload

  """
  Updates a single `Medialocation` using its globally unique id and a patch.
  """
  updateMedialocationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationByNodeIdInput!
  ): UpdateMedialocationPayload

  """Updates a single `Organization` using a unique key and a patch."""
  updateOrganization(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOrganizationInput!
  ): UpdateOrganizationPayload

  """
  Updates a single `Organization` using its globally unique id and a patch.
  """
  updateOrganizationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOrganizationByNodeIdInput!
  ): UpdateOrganizationPayload

  """
  Updates a single `OrganizationInvitation` using a unique key and a patch.
  """
  updateOrganizationInvitation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOrganizationInvitationInput!
  ): UpdateOrganizationInvitationPayload

  """
  Updates a single `OrganizationInvitation` using its globally unique id and a patch.
  """
  updateOrganizationInvitationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOrganizationInvitationByNodeIdInput!
  ): UpdateOrganizationInvitationPayload

  """
  Updates a single `OrganizationMembership` using a unique key and a patch.
  """
  updateOrganizationMembership(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOrganizationMembershipInput!
  ): UpdateOrganizationMembershipPayload

  """
  Updates a single `OrganizationMembership` using its globally unique id and a patch.
  """
  updateOrganizationMembershipByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOrganizationMembershipByNodeIdInput!
  ): UpdateOrganizationMembershipPayload

  """Updates a single `Post` using a unique key and a patch."""
  updatePost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePostInput!
  ): UpdatePostPayload

  """Updates a single `Post` using its globally unique id and a patch."""
  updatePostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePostByNodeIdInput!
  ): UpdatePostPayload

  """Updates a single `Presentation` using a unique key and a patch."""
  updatePresentation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePresentationInput!
  ): UpdatePresentationPayload

  """
  Updates a single `Presentation` using its globally unique id and a patch.
  """
  updatePresentationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePresentationByNodeIdInput!
  ): UpdatePresentationPayload

  """Updates a single `Priceinfo` using a unique key and a patch."""
  updatePriceinfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePriceinfoInput!
  ): UpdatePriceinfoPayload

  """Updates a single `Priceinfo` using its globally unique id and a patch."""
  updatePriceinfoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePriceinfoByNodeIdInput!
  ): UpdatePriceinfoPayload

  """Updates a single `Publisher` using a unique key and a patch."""
  updatePublisher(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePublisherInput!
  ): UpdatePublisherPayload

  """Updates a single `Publisher` using its globally unique id and a patch."""
  updatePublisherByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePublisherByNodeIdInput!
  ): UpdatePublisherPayload

  """Updates a single `Review` using a unique key and a patch."""
  updateReview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateReviewInput!
  ): UpdateReviewPayload

  """Updates a single `Review` using its globally unique id and a patch."""
  updateReviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateReviewByNodeIdInput!
  ): UpdateReviewPayload

  """Updates a single `Roomcalendar` using a unique key and a patch."""
  updateRoomcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomcalendarInput!
  ): UpdateRoomcalendarPayload

  """
  Updates a single `Roomcalendar` using its globally unique id and a patch.
  """
  updateRoomcalendarByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomcalendarByNodeIdInput!
  ): UpdateRoomcalendarPayload

  """Updates a single `Roomcalendarentry` using a unique key and a patch."""
  updateRoomcalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomcalendarentryInput!
  ): UpdateRoomcalendarentryPayload

  """
  Updates a single `Roomcalendarentry` using its globally unique id and a patch.
  """
  updateRoomcalendarentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomcalendarentryByNodeIdInput!
  ): UpdateRoomcalendarentryPayload

  """Updates a single `Roomlist` using a unique key and a patch."""
  updateRoomlist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomlistInput!
  ): UpdateRoomlistPayload

  """Updates a single `Roomlist` using its globally unique id and a patch."""
  updateRoomlistByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomlistByNodeIdInput!
  ): UpdateRoomlistPayload

  """
  Updates a single `Similarbytriptypeaccomodation` using a unique key and a patch.
  """
  updateSimilarbytriptypeaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeaccomodationInput!
  ): UpdateSimilarbytriptypeaccomodationPayload

  """
  Updates a single `Similarbytriptypeaccomodation` using its globally unique id and a patch.
  """
  updateSimilarbytriptypeaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeaccomodationByNodeIdInput!
  ): UpdateSimilarbytriptypeaccomodationPayload

  """
  Updates a single `Similarbytriptypedestination` using a unique key and a patch.
  """
  updateSimilarbytriptypedestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypedestinationInput!
  ): UpdateSimilarbytriptypedestinationPayload

  """
  Updates a single `Similarbytriptypedestination` using its globally unique id and a patch.
  """
  updateSimilarbytriptypedestinationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypedestinationByNodeIdInput!
  ): UpdateSimilarbytriptypedestinationPayload

  """
  Updates a single `Similarbytriptypeevent` using a unique key and a patch.
  """
  updateSimilarbytriptypeevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeeventInput!
  ): UpdateSimilarbytriptypeeventPayload

  """
  Updates a single `Similarbytriptypeevent` using its globally unique id and a patch.
  """
  updateSimilarbytriptypeeventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeeventByNodeIdInput!
  ): UpdateSimilarbytriptypeeventPayload

  """
  Updates a single `Similarbytriptypeguide` using a unique key and a patch.
  """
  updateSimilarbytriptypeguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeguideInput!
  ): UpdateSimilarbytriptypeguidePayload

  """
  Updates a single `Similarbytriptypeguide` using its globally unique id and a patch.
  """
  updateSimilarbytriptypeguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeguideByNodeIdInput!
  ): UpdateSimilarbytriptypeguidePayload

  """
  Updates a single `Similarbytriptypehost` using a unique key and a patch.
  """
  updateSimilarbytriptypehost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypehostInput!
  ): UpdateSimilarbytriptypehostPayload

  """
  Updates a single `Similarbytriptypehost` using its globally unique id and a patch.
  """
  updateSimilarbytriptypehostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypehostByNodeIdInput!
  ): UpdateSimilarbytriptypehostPayload

  """
  Updates a single `Similarbytriptypetransport` using a unique key and a patch.
  """
  updateSimilarbytriptypetransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypetransportInput!
  ): UpdateSimilarbytriptypetransportPayload

  """
  Updates a single `Similarbytriptypetransport` using its globally unique id and a patch.
  """
  updateSimilarbytriptypetransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypetransportByNodeIdInput!
  ): UpdateSimilarbytriptypetransportPayload

  """
  Updates a single `Similarbytriptypetravelgroup` using a unique key and a patch.
  """
  updateSimilarbytriptypetravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypetravelgroupInput!
  ): UpdateSimilarbytriptypetravelgroupPayload

  """
  Updates a single `Similarbytriptypetravelgroup` using its globally unique id and a patch.
  """
  updateSimilarbytriptypetravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypetravelgroupByNodeIdInput!
  ): UpdateSimilarbytriptypetravelgroupPayload

  """Updates a single `Timerange` using a unique key and a patch."""
  updateTimerange(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTimerangeInput!
  ): UpdateTimerangePayload

  """Updates a single `Timerange` using its globally unique id and a patch."""
  updateTimerangeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTimerangeByNodeIdInput!
  ): UpdateTimerangePayload

  """Updates a single `Topic` using a unique key and a patch."""
  updateTopic(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTopicInput!
  ): UpdateTopicPayload

  """Updates a single `Topic` using its globally unique id and a patch."""
  updateTopicByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTopicByNodeIdInput!
  ): UpdateTopicPayload

  """Updates a single `Tourist` using a unique key and a patch."""
  updateTourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristInput!
  ): UpdateTouristPayload

  """Updates a single `Touristbid` using a unique key and a patch."""
  updateTouristbid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristbidInput!
  ): UpdateTouristbidPayload

  """
  Updates a single `Touristbid` using its globally unique id and a patch.
  """
  updateTouristbidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristbidByNodeIdInput!
  ): UpdateTouristbidPayload

  """Updates a single `Tourist` using its globally unique id and a patch."""
  updateTouristByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristByNodeIdInput!
  ): UpdateTouristPayload

  """Updates a single `Touristdeal` using a unique key and a patch."""
  updateTouristdeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristdealInput!
  ): UpdateTouristdealPayload

  """
  Updates a single `Touristdeal` using its globally unique id and a patch.
  """
  updateTouristdealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristdealByNodeIdInput!
  ): UpdateTouristdealPayload

  """Updates a single `Touristfavorite` using a unique key and a patch."""
  updateTouristfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristfavoriteInput!
  ): UpdateTouristfavoritePayload

  """
  Updates a single `Touristfavorite` using its globally unique id and a patch.
  """
  updateTouristfavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristfavoriteByNodeIdInput!
  ): UpdateTouristfavoritePayload

  """Updates a single `Touristoffer` using a unique key and a patch."""
  updateTouristoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristofferInput!
  ): UpdateTouristofferPayload

  """
  Updates a single `Touristoffer` using its globally unique id and a patch.
  """
  updateTouristofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristofferByNodeIdInput!
  ): UpdateTouristofferPayload

  """Updates a single `Touristresource` using a unique key and a patch."""
  updateTouristresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristresourceInput!
  ): UpdateTouristresourcePayload

  """
  Updates a single `Touristresource` using its globally unique id and a patch.
  """
  updateTouristresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristresourceByNodeIdInput!
  ): UpdateTouristresourcePayload

  """Updates a single `Touristreview` using a unique key and a patch."""
  updateTouristreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristreviewInput!
  ): UpdateTouristreviewPayload

  """
  Updates a single `Touristreview` using its globally unique id and a patch.
  """
  updateTouristreviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristreviewByNodeIdInput!
  ): UpdateTouristreviewPayload

  """Updates a single `Transportresource` using a unique key and a patch."""
  updateTransportresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTransportresourceInput!
  ): UpdateTransportresourcePayload

  """
  Updates a single `Transportresource` using its globally unique id and a patch.
  """
  updateTransportresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTransportresourceByNodeIdInput!
  ): UpdateTransportresourcePayload

  """Updates a single `Travelgroupresource` using a unique key and a patch."""
  updateTravelgroupresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTravelgroupresourceInput!
  ): UpdateTravelgroupresourcePayload

  """
  Updates a single `Travelgroupresource` using its globally unique id and a patch.
  """
  updateTravelgroupresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTravelgroupresourceByNodeIdInput!
  ): UpdateTravelgroupresourcePayload

  """Updates a single `Tripofferresource` using a unique key and a patch."""
  updateTripofferresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTripofferresourceInput!
  ): UpdateTripofferresourcePayload

  """
  Updates a single `Tripofferresource` using its globally unique id and a patch.
  """
  updateTripofferresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTripofferresourceByNodeIdInput!
  ): UpdateTripofferresourcePayload

  """Updates a single `Triptype` using a unique key and a patch."""
  updateTriptype(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTriptypeInput!
  ): UpdateTriptypePayload

  """Updates a single `Triptype` using its globally unique id and a patch."""
  updateTriptypeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTriptypeByNodeIdInput!
  ): UpdateTriptypePayload

  """Updates a single `User` using a unique key and a patch."""
  updateUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserInput!
  ): UpdateUserPayload

  """Updates a single `UserAuthentication` using a unique key and a patch."""
  updateUserAuthentication(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserAuthenticationInput!
  ): UpdateUserAuthenticationPayload

  """
  Updates a single `UserAuthentication` using its globally unique id and a patch.
  """
  updateUserAuthenticationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserAuthenticationByNodeIdInput!
  ): UpdateUserAuthenticationPayload

  """Updates a single `User` using its globally unique id and a patch."""
  updateUserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserByNodeIdInput!
  ): UpdateUserPayload

  """Updates a single `UserEmail` using a unique key and a patch."""
  updateUserEmail(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserEmailInput!
  ): UpdateUserEmailPayload

  """Updates a single `UserEmail` using its globally unique id and a patch."""
  updateUserEmailByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserEmailByNodeIdInput!
  ): UpdateUserEmailPayload

  """Updates a single `UserFeedPost` using a unique key and a patch."""
  updateUserFeedPost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserFeedPostInput!
  ): UpdateUserFeedPostPayload

  """
  Updates a single `UserFeedPost` using its globally unique id and a patch.
  """
  updateUserFeedPostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserFeedPostByNodeIdInput!
  ): UpdateUserFeedPostPayload

  """Updates a single `Usertable` using a unique key and a patch."""
  updateUsertable(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsertableInput!
  ): UpdateUsertablePayload

  """Updates a single `Usertable` using its globally unique id and a patch."""
  updateUsertableByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsertableByNodeIdInput!
  ): UpdateUsertablePayload

  """
  Once you have received a verification token for your email, you may call this
  mutation with that token to make your email verified.
  """
  verifyEmail(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: VerifyEmailInput!
  ): VerifyEmailPayload
}

"""An object with a globally unique `ID`."""
interface Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
}

type Organization implements Node {
  createdAt: Datetime!
  currentUserIsBillingContact: Boolean
  currentUserIsOwner: Boolean
  id: UUID!
  name: String!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """
  Reads and enables pagination through a set of `OrganizationInvitation`.
  """
  organizationInvitations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: OrganizationInvitationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `OrganizationInvitation`."""
    orderBy: [OrganizationInvitationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationInvitationsConnection!

  """
  Reads and enables pagination through a set of `OrganizationMembership`.
  """
  organizationMemberships(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: OrganizationMembershipCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `OrganizationMembership`."""
    orderBy: [OrganizationMembershipsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationMembershipsConnection!
  slug: String!
}

"""
A condition to be used against `Organization` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input OrganizationCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `slug` field."""
  slug: String
}

type OrganizationInvitation implements Node {
  code: String
  email: String
  id: UUID!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """
  Reads a single `Organization` that is related to this `OrganizationInvitation`.
  """
  organization: Organization
  organizationId: UUID!

  """
  Reads a single `User` that is related to this `OrganizationInvitation`.
  """
  user: User
  userId: UUID
}

"""
A condition to be used against `OrganizationInvitation` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input OrganizationInvitationCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `organizationId` field."""
  organizationId: UUID

  """Checks for equality with the object’s `userId` field."""
  userId: UUID
}

"""An input for mutations affecting `OrganizationInvitation`"""
input OrganizationInvitationInput {
  code: String
  email: String
  id: UUID
  organizationId: UUID!
  userId: UUID
}

"""
Represents an update to a `OrganizationInvitation`. Fields that are set will be updated.
"""
input OrganizationInvitationPatch {
  code: String
  email: String
  id: UUID
  organizationId: UUID
  userId: UUID
}

"""A connection to a list of `OrganizationInvitation` values."""
type OrganizationInvitationsConnection {
  """
  A list of edges which contains the `OrganizationInvitation` and cursor to aid in pagination.
  """
  edges: [OrganizationInvitationsEdge!]!

  """A list of `OrganizationInvitation` objects."""
  nodes: [OrganizationInvitation!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `OrganizationInvitation` you could get from the connection.
  """
  totalCount: Int!
}

"""A `OrganizationInvitation` edge in the connection."""
type OrganizationInvitationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `OrganizationInvitation` at the end of the edge."""
  node: OrganizationInvitation!
}

"""Methods to use when ordering `OrganizationInvitation`."""
enum OrganizationInvitationsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  ORGANIZATION_ID_ASC
  ORGANIZATION_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  USER_ID_ASC
  USER_ID_DESC
}

type OrganizationMembership implements Node {
  createdAt: Datetime!
  id: UUID!
  isBillingContact: Boolean!
  isOwner: Boolean!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """
  Reads a single `Organization` that is related to this `OrganizationMembership`.
  """
  organization: Organization
  organizationId: UUID!

  """
  Reads a single `User` that is related to this `OrganizationMembership`.
  """
  user: User
  userId: UUID!
}

"""
A condition to be used against `OrganizationMembership` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input OrganizationMembershipCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `organizationId` field."""
  organizationId: UUID

  """Checks for equality with the object’s `userId` field."""
  userId: UUID
}

"""An input for mutations affecting `OrganizationMembership`"""
input OrganizationMembershipInput {
  createdAt: Datetime
  id: UUID
  isBillingContact: Boolean
  isOwner: Boolean
  organizationId: UUID!
  userId: UUID!
}

"""
Represents an update to a `OrganizationMembership`. Fields that are set will be updated.
"""
input OrganizationMembershipPatch {
  createdAt: Datetime
  id: UUID
  isBillingContact: Boolean
  isOwner: Boolean
  organizationId: UUID
  userId: UUID
}

"""A connection to a list of `OrganizationMembership` values."""
type OrganizationMembershipsConnection {
  """
  A list of edges which contains the `OrganizationMembership` and cursor to aid in pagination.
  """
  edges: [OrganizationMembershipsEdge!]!

  """A list of `OrganizationMembership` objects."""
  nodes: [OrganizationMembership!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `OrganizationMembership` you could get from the connection.
  """
  totalCount: Int!
}

"""A `OrganizationMembership` edge in the connection."""
type OrganizationMembershipsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `OrganizationMembership` at the end of the edge."""
  node: OrganizationMembership!
}

"""Methods to use when ordering `OrganizationMembership`."""
enum OrganizationMembershipsOrderBy {
  ID_ASC
  ID_DESC
  MEMBER_NAME_ASC
  MEMBER_NAME_DESC
  NATURAL
  ORGANIZATION_ID_ASC
  ORGANIZATION_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  USER_ID_ASC
  USER_ID_DESC
}

"""
Represents an update to a `Organization`. Fields that are set will be updated.
"""
input OrganizationPatch {
  createdAt: Datetime
  id: UUID
  name: String
  slug: String
}

"""A connection to a list of `Organization` values."""
type OrganizationsConnection {
  """
  A list of edges which contains the `Organization` and cursor to aid in pagination.
  """
  edges: [OrganizationsEdge!]!

  """A list of `Organization` objects."""
  nodes: [Organization!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Organization` you could get from the connection."""
  totalCount: Int!
}

"""A `Organization` edge in the connection."""
type OrganizationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Organization` at the end of the edge."""
  node: Organization!
}

"""Methods to use when ordering `Organization`."""
enum OrganizationsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SLUG_ASC
  SLUG_DESC
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
}

"""A forum post written by a `User`."""
type Post implements Node {
  """Reads a single `User` that is related to this `Post`."""
  author: User

  """The id of the author `User`."""
  authorId: UUID

  """The main body text of our `Post`."""
  body: String

  """The time this `Post` was created."""
  createdAt: Datetime!

  """The title written by the `User`."""
  headline: String!

  """The primary key for the `Post`."""
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """The `Topic` this has been posted in."""
  topic: String!

  """Reads a single `Topic` that is related to this `Post`."""
  topicByTopic: Topic

  """The time this `Post` was last modified (or created)."""
  updatedAt: Datetime!

  """Reads and enables pagination through a set of `UserFeedPost`."""
  userFeedPosts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserFeedPostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `UserFeedPost`."""
    orderBy: [UserFeedPostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserFeedPostsConnection!
}

"""
A condition to be used against `Post` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input PostCondition {
  """Checks for equality with the object’s `authorId` field."""
  authorId: UUID

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `topic` field."""
  topic: String
}

"""An input for mutations affecting `Post`"""
input PostInput {
  """The id of the author `User`."""
  authorId: UUID

  """The main body text of our `Post`."""
  body: String

  """The time this `Post` was created."""
  createdAt: Datetime

  """The title written by the `User`."""
  headline: String!

  """The primary key for the `Post`."""
  id: Int

  """The `Topic` this has been posted in."""
  topic: String!

  """The time this `Post` was last modified (or created)."""
  updatedAt: Datetime
}

"""Represents an update to a `Post`. Fields that are set will be updated."""
input PostPatch {
  """The id of the author `User`."""
  authorId: UUID

  """The main body text of our `Post`."""
  body: String

  """The time this `Post` was created."""
  createdAt: Datetime

  """The title written by the `User`."""
  headline: String

  """The primary key for the `Post`."""
  id: Int

  """The `Topic` this has been posted in."""
  topic: String

  """The time this `Post` was last modified (or created)."""
  updatedAt: Datetime
}

"""A connection to a list of `Post` values."""
type PostsConnection {
  """
  A list of edges which contains the `Post` and cursor to aid in pagination.
  """
  edges: [PostsEdge!]!

  """A list of `Post` objects."""
  nodes: [Post!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Post` you could get from the connection."""
  totalCount: Int!
}

"""A `Post` edge in the connection."""
type PostsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Post` at the end of the edge."""
  node: Post!
}

"""Methods to use when ordering `Post`."""
enum PostsOrderBy {
  AUTHOR_ID_ASC
  AUTHOR_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TOPIC_ASC
  TOPIC_DESC
}

type Presentation implements Node {
  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection!

  """Reads a single `Usertable` that is related to this `Presentation`."""
  createdBy: Usertable
  createdById: Int!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection!
  headline: String

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection!
  id: Int!
  isActive: Boolean
  lastModified: Datetime

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Presentation`."""
  publisher: Publisher
  publisherId: Int!
  resourceType: Resourcetype!
  resourceTypeId: Int!
  timeCreated: Datetime

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesConnection!
}

"""
A condition to be used against `Presentation` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input PresentationCondition {
  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Presentation`"""
input PresentationInput {
  createdById: Int!
  headline: String
  id: Int
  isActive: Boolean
  lastModified: Datetime
  publisherId: Int!
  resourceType: Resourcetype!
  resourceTypeId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Presentation`. Fields that are set will be updated.
"""
input PresentationPatch {
  createdById: Int
  headline: String
  id: Int
  isActive: Boolean
  lastModified: Datetime
  publisherId: Int
  resourceType: Resourcetype
  resourceTypeId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Presentation` values."""
type PresentationsConnection {
  """
  A list of edges which contains the `Presentation` and cursor to aid in pagination.
  """
  edges: [PresentationsEdge!]!

  """A list of `Presentation` objects."""
  nodes: [Presentation!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Presentation` you could get from the connection."""
  totalCount: Int!
}

"""A `Presentation` edge in the connection."""
type PresentationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Presentation` at the end of the edge."""
  node: Presentation!
}

"""Methods to use when ordering `Presentation`."""
enum PresentationsOrderBy {
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

type Priceinfo implements Node {
  acceptsOffers: Boolean!
  advertisedPrice: Float!
  atResourceType: Resourcetype!
  auctionExpiry: Datetime
  belongsToId: Int!

  """Reads a single `Bid` that is related to this `Priceinfo`."""
  bid: Bid
  bidId: Int

  """Reads a single `Usertable` that is related to this `Priceinfo`."""
  createdBy: Usertable
  createdById: Int!
  currentHighBId: Float

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByPriceInfoId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByPriceInfoId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesConnection!
  id: Int!
  isActive: Boolean
  isAuction: Boolean!
  lastModified: Datetime

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Priceinfo`."""
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByPriceInfoId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByPriceInfoId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesConnection!
}

"""
A condition to be used against `Priceinfo` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input PriceinfoCondition {
  """Checks for equality with the object’s `bidId` field."""
  bidId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Priceinfo`"""
input PriceinfoInput {
  acceptsOffers: Boolean!
  advertisedPrice: Float!
  atResourceType: Resourcetype!
  auctionExpiry: Datetime
  belongsToId: Int!
  bidId: Int
  createdById: Int!
  currentHighBId: Float
  id: Int
  isActive: Boolean
  isAuction: Boolean!
  lastModified: Datetime
  publisherId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Priceinfo`. Fields that are set will be updated.
"""
input PriceinfoPatch {
  acceptsOffers: Boolean
  advertisedPrice: Float
  atResourceType: Resourcetype
  auctionExpiry: Datetime
  belongsToId: Int
  bidId: Int
  createdById: Int
  currentHighBId: Float
  id: Int
  isActive: Boolean
  isAuction: Boolean
  lastModified: Datetime
  publisherId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Priceinfo` values."""
type PriceinfosConnection {
  """
  A list of edges which contains the `Priceinfo` and cursor to aid in pagination.
  """
  edges: [PriceinfosEdge!]!

  """A list of `Priceinfo` objects."""
  nodes: [Priceinfo!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Priceinfo` you could get from the connection."""
  totalCount: Int!
}

"""A `Priceinfo` edge in the connection."""
type PriceinfosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Priceinfo` at the end of the edge."""
  node: Priceinfo!
}

"""Methods to use when ordering `Priceinfo`."""
enum PriceinfosOrderBy {
  BID_ID_ASC
  BID_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

type Publisher implements Node {
  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Accounting`."""
  accountings(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccountingCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountingsConnection!

  """Reads and enables pagination through a set of `Agency`."""
  agencies(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesConnection!

  """Reads and enables pagination through a set of `Agencyreview`."""
  agencyreviews(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyreviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsConnection!

  """Reads and enables pagination through a set of `Auctioninfo`."""
  auctioninfosByPublishedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AuctioninfoCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosConnection!
  belongsToId: Int
  belongsToType: Resourcetype
  canPublish: Boolean
  canReview: Boolean

  """Reads and enables pagination through a set of `Commandlogentry`."""
  commandlogentriesByAtPublisher(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CommandlogentryCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CommandlogentriesConnection!
  commandLogEntryId: [Int]

  """Reads a single `Usertable` that is related to this `Publisher`."""
  createdBy: Usertable
  createdById: Int

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByPublishedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Geocoding`."""
  geocodingsByPublishedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GeocodingCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GeocodingsConnection!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Guidereview`."""
  guidereviews(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidereviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsConnection!

  """Reads and enables pagination through a set of `Guide`."""
  guides(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection!
  id: Int!
  isActive: Boolean
  isRomanian: Boolean

  """Reads and enables pagination through a set of `Languagelevel`."""
  languagelevels(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: LanguagelevelCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LanguagelevelsConnection!
  name: String

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads and enables pagination through a set of `Presentation`."""
  presentations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PresentationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PresentationsConnection!

  """Reads and enables pagination through a set of `Priceinfo`."""
  priceinfos(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PriceinfoCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosConnection!

  """Reads and enables pagination through a set of `Review`."""
  reviews(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ReviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsConnection!

  """Reads and enables pagination through a set of `Review`."""
  reviewsByPublisherTarget(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ReviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsConnection!

  """Reads and enables pagination through a set of `Roomcalendar`."""
  roomcalendars(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsConnection!
  timeCommand: Datetime
  timeCreated: Datetime

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Touristreview`."""
  touristreviews(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristreviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsConnection!

  """Reads and enables pagination through a set of `Tourist`."""
  tourists(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesConnection!
}

"""
A condition to be used against `Publisher` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input PublisherCondition {
  """Checks for equality with the object’s `belongsToType` field."""
  belongsToType: Resourcetype

  """Checks for equality with the object’s `commandLogEntryId` field."""
  commandLogEntryId: [Int]

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Publisher`"""
input PublisherInput {
  belongsToId: Int
  belongsToType: Resourcetype
  canPublish: Boolean
  canReview: Boolean
  commandLogEntryId: [Int]
  createdById: Int
  id: Int
  isActive: Boolean
  isRomanian: Boolean
  name: String
  timeCommand: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Publisher`. Fields that are set will be updated.
"""
input PublisherPatch {
  belongsToId: Int
  belongsToType: Resourcetype
  canPublish: Boolean
  canReview: Boolean
  commandLogEntryId: [Int]
  createdById: Int
  id: Int
  isActive: Boolean
  isRomanian: Boolean
  name: String
  timeCommand: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Publisher` values."""
type PublishersConnection {
  """
  A list of edges which contains the `Publisher` and cursor to aid in pagination.
  """
  edges: [PublishersEdge!]!

  """A list of `Publisher` objects."""
  nodes: [Publisher!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Publisher` you could get from the connection."""
  totalCount: Int!
}

"""A `Publisher` edge in the connection."""
type PublishersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Publisher` at the end of the edge."""
  node: Publisher!
}

"""Methods to use when ordering `Publisher`."""
enum PublishersOrderBy {
  BELONGS_TO_TYPE_ASC
  BELONGS_TO_TYPE_DESC
  COMMAND_LOG_ENTRY_ID_ASC
  COMMAND_LOG_ENTRY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""The root query type which gives access points into the data universe."""
type Query implements Node {
  accomodationresource(id: Int!): Accomodationresource

  """Reads a single `Accomodationresource` using its globally unique `ID`."""
  accomodationresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Accomodationresource`.
    """
    nodeId: ID!
  ): Accomodationresource

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection
  account(id: Int!): Account

  """Reads a single `Account` using its globally unique `ID`."""
  accountByNodeId(
    """The globally unique `ID` to be used in selecting a single `Account`."""
    nodeId: ID!
  ): Account
  accounting(id: Int!): Accounting

  """Reads a single `Accounting` using its globally unique `ID`."""
  accountingByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Accounting`.
    """
    nodeId: ID!
  ): Accounting

  """Reads and enables pagination through a set of `Accounting`."""
  accountings(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccountingCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountingsConnection

  """Reads and enables pagination through a set of `Account`."""
  accounts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccountCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountsConnection

  """Reads and enables pagination through a set of `Agency`."""
  agencies(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesConnection
  agency(id: Int!): Agency
  agencyaccomodation(accomodationId: Int!, agencyId: Int!): Agencyaccomodation

  """Reads a single `Agencyaccomodation` using its globally unique `ID`."""
  agencyaccomodationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyaccomodation`.
    """
    nodeId: ID!
  ): Agencyaccomodation

  """Reads and enables pagination through a set of `Agencyaccomodation`."""
  agencyaccomodations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyaccomodationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyaccomodationsConnection
  agencybid(id: Int!): Agencybid

  """Reads a single `Agencybid` using its globally unique `ID`."""
  agencybidByNodeId(
    """The globally unique `ID` to be used in selecting a single `Agencybid`."""
    nodeId: ID!
  ): Agencybid

  """Reads and enables pagination through a set of `Agencybid`."""
  agencybids(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencybidCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencybidsConnection

  """Reads a single `Agency` using its globally unique `ID`."""
  agencyByNodeId(
    """The globally unique `ID` to be used in selecting a single `Agency`."""
    nodeId: ID!
  ): Agency
  agencydeal(id: Int!): Agencydeal

  """Reads a single `Agencydeal` using its globally unique `ID`."""
  agencydealByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencydeal`.
    """
    nodeId: ID!
  ): Agencydeal

  """Reads and enables pagination through a set of `Agencydeal`."""
  agencydeals(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencydealCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencydeal`."""
    orderBy: [AgencydealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencydealsConnection
  agencyevent(agencyId: Int!, eventId: Int!): Agencyevent

  """Reads a single `Agencyevent` using its globally unique `ID`."""
  agencyeventByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyevent`.
    """
    nodeId: ID!
  ): Agencyevent

  """Reads and enables pagination through a set of `Agencyevent`."""
  agencyevents(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyeventCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyeventsConnection
  agencyfavorite(atAgency: Int!, resourceId: Int!, resourceType: Resourcetype!): Agencyfavorite

  """Reads a single `Agencyfavorite` using its globally unique `ID`."""
  agencyfavoriteByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyfavorite`.
    """
    nodeId: ID!
  ): Agencyfavorite

  """Reads and enables pagination through a set of `Agencyfavorite`."""
  agencyfavorites(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyfavoriteCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyfavorite`."""
    orderBy: [AgencyfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyfavoritesConnection
  agencyguide(agencyId: Int!, guideId: Int!): Agencyguide

  """Reads a single `Agencyguide` using its globally unique `ID`."""
  agencyguideByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyguide`.
    """
    nodeId: ID!
  ): Agencyguide

  """Reads and enables pagination through a set of `Agencyguide`."""
  agencyguides(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyguideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyguidesConnection
  agencyhost(agencyId: Int!, hostId: Int!): Agencyhost

  """Reads a single `Agencyhost` using its globally unique `ID`."""
  agencyhostByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyhost`.
    """
    nodeId: ID!
  ): Agencyhost

  """Reads and enables pagination through a set of `Agencyhost`."""
  agencyhosts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyhostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyhostsConnection

  """Reads and enables pagination through a set of `Agencymedialibrary`."""
  agencymedialibraries(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencymedialibraryCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]
  ): AgencymedialibrariesConnection
  agencymedialibraryById(id: Int!): Agencymedialibrary
  agencyoffer(id: Int!): Agencyoffer

  """Reads a single `Agencyoffer` using its globally unique `ID`."""
  agencyofferByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyoffer`.
    """
    nodeId: ID!
  ): Agencyoffer

  """Reads and enables pagination through a set of `Agencyoffer`."""
  agencyoffers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyofferCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyoffer`."""
    orderBy: [AgencyoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyoffersConnection
  agencyreview(id: Int!): Agencyreview

  """Reads a single `Agencyreview` using its globally unique `ID`."""
  agencyreviewByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyreview`.
    """
    nodeId: ID!
  ): Agencyreview

  """Reads and enables pagination through a set of `Agencyreview`."""
  agencyreviews(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyreviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsConnection
  agencytourist(agencyId: Int!, touristId: Int!): Agencytourist

  """Reads a single `Agencytourist` using its globally unique `ID`."""
  agencytouristByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencytourist`.
    """
    nodeId: ID!
  ): Agencytourist

  """Reads and enables pagination through a set of `Agencytourist`."""
  agencytourists(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytouristsConnection
  agencytransport(agencyId: Int!, transportId: Int!): Agencytransport

  """Reads a single `Agencytransport` using its globally unique `ID`."""
  agencytransportByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencytransport`.
    """
    nodeId: ID!
  ): Agencytransport

  """Reads and enables pagination through a set of `Agencytransport`."""
  agencytransports(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytransportCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytransportsConnection
  agencytravelgroup(agencyId: Int!, travelGroupId: Int!): Agencytravelgroup

  """Reads a single `Agencytravelgroup` using its globally unique `ID`."""
  agencytravelgroupByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencytravelgroup`.
    """
    nodeId: ID!
  ): Agencytravelgroup

  """Reads and enables pagination through a set of `Agencytravelgroup`."""
  agencytravelgroups(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytravelgroupCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytravelgroupsConnection
  agencytripoffer(agencyId: Int!, tripOfferId: Int!): Agencytripoffer

  """Reads a single `Agencytripoffer` using its globally unique `ID`."""
  agencytripofferByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencytripoffer`.
    """
    nodeId: ID!
  ): Agencytripoffer

  """Reads and enables pagination through a set of `Agencytripoffer`."""
  agencytripoffers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytripofferCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytripoffersConnection
  agencyuser(agencyId: Int!, userId: Int!): Agencyuser

  """Reads a single `Agencyuser` using its globally unique `ID`."""
  agencyuserByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyuser`.
    """
    nodeId: ID!
  ): Agencyuser

  """Reads and enables pagination through a set of `Agencyuser`."""
  agencyusers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyuserCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyusersConnection
  assocaccomodation(accomodationId: Int!, atAgency: Int!): Assocaccomodation

  """Reads a single `Assocaccomodation` using its globally unique `ID`."""
  assocaccomodationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assocaccomodation`.
    """
    nodeId: ID!
  ): Assocaccomodation

  """Reads and enables pagination through a set of `Assocaccomodation`."""
  assocaccomodations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocaccomodationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocaccomodationsConnection
  assocdestination(atAgency: Int!, destinationId: Int!): Assocdestination

  """Reads a single `Assocdestination` using its globally unique `ID`."""
  assocdestinationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assocdestination`.
    """
    nodeId: ID!
  ): Assocdestination

  """Reads and enables pagination through a set of `Assocdestination`."""
  assocdestinations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocdestinationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocdestinationsConnection
  assocevent(atAgency: Int!, eventId: Int!): Assocevent

  """Reads a single `Assocevent` using its globally unique `ID`."""
  assoceventByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assocevent`.
    """
    nodeId: ID!
  ): Assocevent

  """Reads and enables pagination through a set of `Assocevent`."""
  assocevents(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoceventCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoceventsConnection
  assocguide(atAgency: Int!, guideId: Int!): Assocguide

  """Reads a single `Assocguide` using its globally unique `ID`."""
  assocguideByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assocguide`.
    """
    nodeId: ID!
  ): Assocguide

  """Reads and enables pagination through a set of `Assocguide`."""
  assocguides(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocguideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocguidesConnection
  assochost(atAgency: Int!, hostId: Int!): Assochost

  """Reads a single `Assochost` using its globally unique `ID`."""
  assochostByNodeId(
    """The globally unique `ID` to be used in selecting a single `Assochost`."""
    nodeId: ID!
  ): Assochost

  """Reads and enables pagination through a set of `Assochost`."""
  assochosts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssochostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssochostsConnection
  assoctransport(atAgency: Int!, transportId: Int!): Assoctransport

  """Reads a single `Assoctransport` using its globally unique `ID`."""
  assoctransportByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assoctransport`.
    """
    nodeId: ID!
  ): Assoctransport

  """Reads and enables pagination through a set of `Assoctransport`."""
  assoctransports(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctransportCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctransportsConnection
  assoctravelgroup(atAgency: Int!, travelGroupId: Int!): Assoctravelgroup

  """Reads a single `Assoctravelgroup` using its globally unique `ID`."""
  assoctravelgroupByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assoctravelgroup`.
    """
    nodeId: ID!
  ): Assoctravelgroup

  """Reads and enables pagination through a set of `Assoctravelgroup`."""
  assoctravelgroups(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctravelgroupCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctravelgroupsConnection
  auctioninfo(id: Int!): Auctioninfo

  """Reads a single `Auctioninfo` using its globally unique `ID`."""
  auctioninfoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Auctioninfo`.
    """
    nodeId: ID!
  ): Auctioninfo

  """Reads and enables pagination through a set of `Auctioninfo`."""
  auctioninfos(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AuctioninfoCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosConnection
  bid(id: Int!): Bid

  """Reads a single `Bid` using its globally unique `ID`."""
  bidByNodeId(
    """The globally unique `ID` to be used in selecting a single `Bid`."""
    nodeId: ID!
  ): Bid

  """Reads and enables pagination through a set of `Bid`."""
  bids(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: BidCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Bid`."""
    orderBy: [BidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BidsConnection
  bookingcalendar(id: Int!): Bookingcalendar

  """Reads a single `Bookingcalendar` using its globally unique `ID`."""
  bookingcalendarByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Bookingcalendar`.
    """
    nodeId: ID!
  ): Bookingcalendar

  """Reads and enables pagination through a set of `Bookingcalendar`."""
  bookingcalendars(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: BookingcalendarCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BookingcalendarsConnection

  """Reads and enables pagination through a set of `Calendarentry`."""
  calendarentries(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarentryCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Calendarentry`."""
    orderBy: [CalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarentriesConnection
  calendarentry(id: Int!): Calendarentry

  """Reads a single `Calendarentry` using its globally unique `ID`."""
  calendarentryByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Calendarentry`.
    """
    nodeId: ID!
  ): Calendarentry

  """Reads and enables pagination through a set of `Commandlogentry`."""
  commandlogentries(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CommandlogentryCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CommandlogentriesConnection
  commandlogentry(id: Int!): Commandlogentry

  """Reads a single `Commandlogentry` using its globally unique `ID`."""
  commandlogentryByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Commandlogentry`.
    """
    nodeId: ID!
  ): Commandlogentry
  contact(id: Int!): Contact

  """Reads a single `Contact` using its globally unique `ID`."""
  contactByNodeId(
    """The globally unique `ID` to be used in selecting a single `Contact`."""
    nodeId: ID!
  ): Contact

  """Reads and enables pagination through a set of `Contact`."""
  contacts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ContactCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ContactsConnection

  """The currently logged in user (or null if not logged in)."""
  currentUser: User

  """Reads and enables pagination through a set of `Date_`."""
  dates_(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Date_`."""
    orderBy: [DatesOrderBy!] = [NATURAL]
  ): DatesConnection
  destinationresource(id: Int!): Destinationresource

  """Reads a single `Destinationresource` using its globally unique `ID`."""
  destinationresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Destinationresource`.
    """
    nodeId: ID!
  ): Destinationresource

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection
  eventresource(id: Int!): Eventresource

  """Reads a single `Eventresource` using its globally unique `ID`."""
  eventresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Eventresource`.
    """
    nodeId: ID!
  ): Eventresource

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection
  geocoding(id: Int!): Geocoding

  """Reads a single `Geocoding` using its globally unique `ID`."""
  geocodingByNodeId(
    """The globally unique `ID` to be used in selecting a single `Geocoding`."""
    nodeId: ID!
  ): Geocoding

  """Reads and enables pagination through a set of `Geocoding`."""
  geocodings(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GeocodingCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GeocodingsConnection
  guide(id: Int!): Guide
  guidebid(id: Int!): Guidebid

  """Reads a single `Guidebid` using its globally unique `ID`."""
  guidebidByNodeId(
    """The globally unique `ID` to be used in selecting a single `Guidebid`."""
    nodeId: ID!
  ): Guidebid

  """Reads and enables pagination through a set of `Guidebid`."""
  guidebids(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidebidCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guidebid`."""
    orderBy: [GuidebidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidebidsConnection

  """Reads a single `Guide` using its globally unique `ID`."""
  guideByNodeId(
    """The globally unique `ID` to be used in selecting a single `Guide`."""
    nodeId: ID!
  ): Guide
  guidedeal(id: Int!): Guidedeal

  """Reads a single `Guidedeal` using its globally unique `ID`."""
  guidedealByNodeId(
    """The globally unique `ID` to be used in selecting a single `Guidedeal`."""
    nodeId: ID!
  ): Guidedeal

  """Reads and enables pagination through a set of `Guidedeal`."""
  guidedeals(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidedealCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guidedeal`."""
    orderBy: [GuidedealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidedealsConnection
  guidefavorite(id: Int!): Guidefavorite

  """Reads a single `Guidefavorite` using its globally unique `ID`."""
  guidefavoriteByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Guidefavorite`.
    """
    nodeId: ID!
  ): Guidefavorite

  """Reads and enables pagination through a set of `Guidefavorite`."""
  guidefavorites(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidefavoriteCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guidefavorite`."""
    orderBy: [GuidefavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidefavoritesConnection
  guideoffer(id: Int!): Guideoffer

  """Reads a single `Guideoffer` using its globally unique `ID`."""
  guideofferByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Guideoffer`.
    """
    nodeId: ID!
  ): Guideoffer

  """Reads and enables pagination through a set of `Guideoffer`."""
  guideoffers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideofferCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guideoffer`."""
    orderBy: [GuideoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideoffersConnection
  guideresource(id: Int!): Guideresource

  """Reads a single `Guideresource` using its globally unique `ID`."""
  guideresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Guideresource`.
    """
    nodeId: ID!
  ): Guideresource

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesConnection
  guidereview(id: Int!): Guidereview

  """Reads a single `Guidereview` using its globally unique `ID`."""
  guidereviewByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Guidereview`.
    """
    nodeId: ID!
  ): Guidereview

  """Reads and enables pagination through a set of `Guidereview`."""
  guidereviews(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidereviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsConnection

  """Reads and enables pagination through a set of `Guide`."""
  guides(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection
  hostresource(id: Int!): Hostresource

  """Reads a single `Hostresource` using its globally unique `ID`."""
  hostresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Hostresource`.
    """
    nodeId: ID!
  ): Hostresource

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection
  languagelevel(id: Int!): Languagelevel

  """Reads a single `Languagelevel` using its globally unique `ID`."""
  languagelevelByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Languagelevel`.
    """
    nodeId: ID!
  ): Languagelevel

  """Reads and enables pagination through a set of `Languagelevel`."""
  languagelevels(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: LanguagelevelCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LanguagelevelsConnection
  mediadestinationresource(atAgency: Int!, atDestination: Int!): Mediadestinationresource
  mediadestinationresourceByGuideSignedUrl(guideSignedUrl: String!): Mediadestinationresource
  mediadestinationresourceById(id: Int!): Mediadestinationresource
  mediadestinationresourceByImageGallery10SignedUrl(imageGallery10SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery1SignedUrl(imageGallery1SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery2SignedUrl(imageGallery2SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery3SignedUrl(imageGallery3SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery4SignedUrl(imageGallery4SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery5SignedUrl(imageGallery5SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery6SignedUrl(imageGallery6SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery7SignedUrl(imageGallery7SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery8SignedUrl(imageGallery8SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery9SignedUrl(imageGallery9SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByMainImageSignedUrl(mainImageSignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByMapImageSignedUrl(mapImageSignedUrl: String!): Mediadestinationresource

  """
  Reads a single `Mediadestinationresource` using its globally unique `ID`.
  """
  mediadestinationresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Mediadestinationresource`.
    """
    nodeId: ID!
  ): Mediadestinationresource
  mediadestinationresourceByThumbnailImageSignedUrl(thumbnailImageSignedUrl: String!): Mediadestinationresource

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection
  medialocation(atAgency: Int!, atResource: Int!, mediaLocationPlacement: Medialocationplacement!): Medialocation
  medialocationById(id: Int!): Medialocation

  """Reads a single `Medialocation` using its globally unique `ID`."""
  medialocationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Medialocation`.
    """
    nodeId: ID!
  ): Medialocation
  medialocationByUploadLocation2K(uploadLocation2K: String!): Medialocation
  medialocationByUploadLocationDesktop(uploadLocationDesktop: String!): Medialocation
  medialocationByUploadLocationMobile(uploadLocationMobile: String!): Medialocation
  medialocationByUploadLocationOriginal(uploadLocationOriginal: String!): Medialocation
  medialocationByUploadLocationTablet(uploadLocationTablet: String!): Medialocation
  medialocationByUploadLocationThumbnail(uploadLocationThumbnail: String!): Medialocation

  """Reads and enables pagination through a set of `Medialocation`."""
  medialocations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MedialocationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MedialocationsConnection

  """Fetches an object given its globally unique `ID`."""
  node(
    """The globally unique `ID`."""
    nodeId: ID!
  ): Node

  """
  The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.
  """
  nodeId: ID!
  organization(id: UUID!): Organization

  """Reads a single `Organization` using its globally unique `ID`."""
  organizationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Organization`.
    """
    nodeId: ID!
  ): Organization
  organizationBySlug(slug: String!): Organization

  """
  Given an invitation UUID (and, if required, the code that was emailed to you),
  retrieves the `Organization` that you were invited to.
  """
  organizationForInvitation(code: String, invitationId: UUID!): Organization
  organizationInvitation(id: UUID!): OrganizationInvitation

  """
  Reads a single `OrganizationInvitation` using its globally unique `ID`.
  """
  organizationInvitationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `OrganizationInvitation`.
    """
    nodeId: ID!
  ): OrganizationInvitation

  """
  Reads and enables pagination through a set of `OrganizationInvitation`.
  """
  organizationInvitations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: OrganizationInvitationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `OrganizationInvitation`."""
    orderBy: [OrganizationInvitationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationInvitationsConnection
  organizationMembership(id: UUID!): OrganizationMembership

  """
  Reads a single `OrganizationMembership` using its globally unique `ID`.
  """
  organizationMembershipByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `OrganizationMembership`.
    """
    nodeId: ID!
  ): OrganizationMembership

  """Reads and enables pagination through a set of `Organization`."""
  organizations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: OrganizationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Organization`."""
    orderBy: [OrganizationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationsConnection
  post(id: Int!): Post

  """Reads a single `Post` using its globally unique `ID`."""
  postByNodeId(
    """The globally unique `ID` to be used in selecting a single `Post`."""
    nodeId: ID!
  ): Post

  """Reads and enables pagination through a set of `Post`."""
  posts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Post`."""
    orderBy: [PostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PostsConnection
  presentation(id: Int!): Presentation

  """Reads a single `Presentation` using its globally unique `ID`."""
  presentationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Presentation`.
    """
    nodeId: ID!
  ): Presentation

  """Reads and enables pagination through a set of `Presentation`."""
  presentations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PresentationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PresentationsConnection
  priceinfo(id: Int!): Priceinfo

  """Reads a single `Priceinfo` using its globally unique `ID`."""
  priceinfoByNodeId(
    """The globally unique `ID` to be used in selecting a single `Priceinfo`."""
    nodeId: ID!
  ): Priceinfo

  """Reads and enables pagination through a set of `Priceinfo`."""
  priceinfos(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PriceinfoCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosConnection
  publisher(id: Int!): Publisher

  """Reads a single `Publisher` using its globally unique `ID`."""
  publisherByNodeId(
    """The globally unique `ID` to be used in selecting a single `Publisher`."""
    nodeId: ID!
  ): Publisher

  """Reads and enables pagination through a set of `Publisher`."""
  publishers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PublisherCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]
  ): PublishersConnection
  review(id: Int!): Review

  """Reads a single `Review` using its globally unique `ID`."""
  reviewByNodeId(
    """The globally unique `ID` to be used in selecting a single `Review`."""
    nodeId: ID!
  ): Review

  """Reads and enables pagination through a set of `Review`."""
  reviews(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ReviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsConnection
  roomcalendar(id: Int!): Roomcalendar

  """Reads a single `Roomcalendar` using its globally unique `ID`."""
  roomcalendarByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Roomcalendar`.
    """
    nodeId: ID!
  ): Roomcalendar

  """Reads and enables pagination through a set of `Roomcalendarentry`."""
  roomcalendarentries(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarentryCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarentriesConnection
  roomcalendarentry(id: Int!): Roomcalendarentry

  """Reads a single `Roomcalendarentry` using its globally unique `ID`."""
  roomcalendarentryByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Roomcalendarentry`.
    """
    nodeId: ID!
  ): Roomcalendarentry

  """Reads and enables pagination through a set of `Roomcalendar`."""
  roomcalendars(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsConnection
  roomlist(id: Int!): Roomlist

  """Reads a single `Roomlist` using its globally unique `ID`."""
  roomlistByNodeId(
    """The globally unique `ID` to be used in selecting a single `Roomlist`."""
    nodeId: ID!
  ): Roomlist

  """Reads and enables pagination through a set of `Roomlist`."""
  roomlists(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomlistCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomlistsConnection
  similarbytriptypeaccomodation(atAgency: Int!, tripTypeName: String!): Similarbytriptypeaccomodation

  """
  Reads a single `Similarbytriptypeaccomodation` using its globally unique `ID`.
  """
  similarbytriptypeaccomodationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypeaccomodation`.
    """
    nodeId: ID!
  ): Similarbytriptypeaccomodation

  """
  Reads and enables pagination through a set of `Similarbytriptypeaccomodation`.
  """
  similarbytriptypeaccomodations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeaccomodationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeaccomodationsConnection
  similarbytriptypedestination(atAgency: Int!, tripTypeName: String!): Similarbytriptypedestination

  """
  Reads a single `Similarbytriptypedestination` using its globally unique `ID`.
  """
  similarbytriptypedestinationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypedestination`.
    """
    nodeId: ID!
  ): Similarbytriptypedestination

  """
  Reads and enables pagination through a set of `Similarbytriptypedestination`.
  """
  similarbytriptypedestinations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypedestinationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypedestinationsConnection
  similarbytriptypeevent(atAgency: Int!, tripTypeName: String!): Similarbytriptypeevent

  """
  Reads a single `Similarbytriptypeevent` using its globally unique `ID`.
  """
  similarbytriptypeeventByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypeevent`.
    """
    nodeId: ID!
  ): Similarbytriptypeevent

  """
  Reads and enables pagination through a set of `Similarbytriptypeevent`.
  """
  similarbytriptypeevents(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeeventCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeeventsConnection
  similarbytriptypeguide(atAgency: Int!, tripTypeName: String!): Similarbytriptypeguide

  """
  Reads a single `Similarbytriptypeguide` using its globally unique `ID`.
  """
  similarbytriptypeguideByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypeguide`.
    """
    nodeId: ID!
  ): Similarbytriptypeguide

  """
  Reads and enables pagination through a set of `Similarbytriptypeguide`.
  """
  similarbytriptypeguides(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeguideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeguidesConnection
  similarbytriptypehost(atAgency: Int!, tripTypeName: String!): Similarbytriptypehost

  """Reads a single `Similarbytriptypehost` using its globally unique `ID`."""
  similarbytriptypehostByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypehost`.
    """
    nodeId: ID!
  ): Similarbytriptypehost

  """Reads and enables pagination through a set of `Similarbytriptypehost`."""
  similarbytriptypehosts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypehostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypehostsConnection
  similarbytriptypetransport(atAgency: Int!, tripTypeName: String!): Similarbytriptypetransport

  """
  Reads a single `Similarbytriptypetransport` using its globally unique `ID`.
  """
  similarbytriptypetransportByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypetransport`.
    """
    nodeId: ID!
  ): Similarbytriptypetransport

  """
  Reads and enables pagination through a set of `Similarbytriptypetransport`.
  """
  similarbytriptypetransports(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypetransportCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetransportsConnection
  similarbytriptypetravelgroup(atAgency: Int!, tripTypeName: String!): Similarbytriptypetravelgroup

  """
  Reads a single `Similarbytriptypetravelgroup` using its globally unique `ID`.
  """
  similarbytriptypetravelgroupByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypetravelgroup`.
    """
    nodeId: ID!
  ): Similarbytriptypetravelgroup

  """
  Reads and enables pagination through a set of `Similarbytriptypetravelgroup`.
  """
  similarbytriptypetravelgroups(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypetravelgroupCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetravelgroupsConnection
  timerange(id: Int!): Timerange

  """Reads a single `Timerange` using its globally unique `ID`."""
  timerangeByNodeId(
    """The globally unique `ID` to be used in selecting a single `Timerange`."""
    nodeId: ID!
  ): Timerange

  """Reads and enables pagination through a set of `Timerange`."""
  timeranges(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TimerangeCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Timerange`."""
    orderBy: [TimerangesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TimerangesConnection
  topic(title: String!): Topic

  """Reads a single `Topic` using its globally unique `ID`."""
  topicByNodeId(
    """The globally unique `ID` to be used in selecting a single `Topic`."""
    nodeId: ID!
  ): Topic

  """Reads and enables pagination through a set of `Topic`."""
  topics(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TopicCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Topic`."""
    orderBy: [TopicsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TopicsConnection
  tourist(id: Int!): Tourist
  touristbid(id: Int!): Touristbid

  """Reads a single `Touristbid` using its globally unique `ID`."""
  touristbidByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristbid`.
    """
    nodeId: ID!
  ): Touristbid

  """Reads and enables pagination through a set of `Touristbid`."""
  touristbids(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristbidCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristbid`."""
    orderBy: [TouristbidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristbidsConnection

  """Reads a single `Tourist` using its globally unique `ID`."""
  touristByNodeId(
    """The globally unique `ID` to be used in selecting a single `Tourist`."""
    nodeId: ID!
  ): Tourist
  touristdeal(id: Int!): Touristdeal

  """Reads a single `Touristdeal` using its globally unique `ID`."""
  touristdealByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristdeal`.
    """
    nodeId: ID!
  ): Touristdeal

  """Reads and enables pagination through a set of `Touristdeal`."""
  touristdeals(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristdealCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristdeal`."""
    orderBy: [TouristdealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristdealsConnection
  touristfavorite(id: Int!): Touristfavorite

  """Reads a single `Touristfavorite` using its globally unique `ID`."""
  touristfavoriteByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristfavorite`.
    """
    nodeId: ID!
  ): Touristfavorite

  """Reads and enables pagination through a set of `Touristfavorite`."""
  touristfavorites(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristfavoriteCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristfavorite`."""
    orderBy: [TouristfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristfavoritesConnection
  touristoffer(id: Int!): Touristoffer

  """Reads a single `Touristoffer` using its globally unique `ID`."""
  touristofferByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristoffer`.
    """
    nodeId: ID!
  ): Touristoffer

  """Reads and enables pagination through a set of `Touristoffer`."""
  touristoffers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristofferCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristoffer`."""
    orderBy: [TouristoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristoffersConnection
  touristresource(id: Int!): Touristresource

  """Reads a single `Touristresource` using its globally unique `ID`."""
  touristresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristresource`.
    """
    nodeId: ID!
  ): Touristresource

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesConnection
  touristreview(id: Int!): Touristreview

  """Reads a single `Touristreview` using its globally unique `ID`."""
  touristreviewByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristreview`.
    """
    nodeId: ID!
  ): Touristreview

  """Reads and enables pagination through a set of `Touristreview`."""
  touristreviews(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristreviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsConnection

  """Reads and enables pagination through a set of `Tourist`."""
  tourists(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsConnection
  transportresource(id: Int!): Transportresource

  """Reads a single `Transportresource` using its globally unique `ID`."""
  transportresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Transportresource`.
    """
    nodeId: ID!
  ): Transportresource

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesConnection
  travelgroupresource(id: Int!): Travelgroupresource

  """Reads a single `Travelgroupresource` using its globally unique `ID`."""
  travelgroupresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Travelgroupresource`.
    """
    nodeId: ID!
  ): Travelgroupresource

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesConnection
  tripofferresource(id: Int!): Tripofferresource

  """Reads a single `Tripofferresource` using its globally unique `ID`."""
  tripofferresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Tripofferresource`.
    """
    nodeId: ID!
  ): Tripofferresource

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresources(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesConnection
  triptype(atAgency: Int!, tripTypeName: String!): Triptype
  triptypeById(id: Int!): Triptype

  """Reads a single `Triptype` using its globally unique `ID`."""
  triptypeByNodeId(
    """The globally unique `ID` to be used in selecting a single `Triptype`."""
    nodeId: ID!
  ): Triptype

  """Reads and enables pagination through a set of `Triptype`."""
  triptypes(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TriptypeCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TriptypesConnection
  user(id: UUID!): User
  userAuthentication(id: UUID!): UserAuthentication

  """Reads a single `UserAuthentication` using its globally unique `ID`."""
  userAuthenticationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `UserAuthentication`.
    """
    nodeId: ID!
  ): UserAuthentication

  """Reads a single `User` using its globally unique `ID`."""
  userByNodeId(
    """The globally unique `ID` to be used in selecting a single `User`."""
    nodeId: ID!
  ): User
  userByUsername(username: String!): User
  userEmail(id: UUID!): UserEmail

  """Reads a single `UserEmail` using its globally unique `ID`."""
  userEmailByNodeId(
    """The globally unique `ID` to be used in selecting a single `UserEmail`."""
    nodeId: ID!
  ): UserEmail
  userFeedPost(id: Int!): UserFeedPost

  """Reads a single `UserFeedPost` using its globally unique `ID`."""
  userFeedPostByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `UserFeedPost`.
    """
    nodeId: ID!
  ): UserFeedPost

  """Reads and enables pagination through a set of `UserFeedPost`."""
  userFeedPosts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserFeedPostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `UserFeedPost`."""
    orderBy: [UserFeedPostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserFeedPostsConnection
  usertable(userEmail: String!): Usertable
  usertableById(id: Int!): Usertable

  """Reads a single `Usertable` using its globally unique `ID`."""
  usertableByNodeId(
    """The globally unique `ID` to be used in selecting a single `Usertable`."""
    nodeId: ID!
  ): Usertable

  """Reads and enables pagination through a set of `Usertable`."""
  usertables(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsertableCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesConnection
}

input RegisterInput {
  avatarUrl: String
  email: String!
  name: String
  password: String!
  username: String!
}

type RegisterPayload {
  user: User!
}

"""All input for the `removeFromOrganization` mutation."""
input RemoveFromOrganizationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  organizationId: UUID!
  userId: UUID!
}

"""The output of our `removeFromOrganization` mutation."""
type RemoveFromOrganizationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `requestAccountDeletion` mutation."""
input RequestAccountDeletionInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
}

"""The output of our `requestAccountDeletion` mutation."""
type RequestAccountDeletionPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
  success: Boolean
}

"""All input for the `resendEmailVerificationCode` mutation."""
input ResendEmailVerificationCodeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  emailId: UUID!
}

"""The output of our `resendEmailVerificationCode` mutation."""
type ResendEmailVerificationCodePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
  success: Boolean
}

"""All input for the `resetPassword` mutation."""
input ResetPasswordInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  newPassword: String!
  resetToken: String!
  userId: UUID!
}

"""The output of our `resetPassword` mutation."""
type ResetPasswordPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
  success: Boolean
}

enum Resourcetype {
  ACCOMODATION_RESOURCE
  AGENCY
  CAR_RESOURCE
  DESTINATION_RESOURCE
  EVENT_RESOURCE
  GUIDE
  GUIDE_RESOURCE
  HOST_RESOURCE
  TOURIST
  TOURIST_RESOURCE
  TRAVEL_GROUP
  TRIP_OFFER_RESOURCE
  UNKNOWN
}

type Review implements Node {
  byRomanian: Boolean

  """Reads a single `Usertable` that is related to this `Review`."""
  createdBy: Usertable
  createdById: Int!
  halfStars: Int
  id: Int!
  isActive: Boolean

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Review`."""
  publisher: Publisher

  """Reads a single `Publisher` that is related to this `Review`."""
  publisherByPublisherTarget: Publisher
  publisherId: Int!
  publisherTarget: Int!
  resourceId: Int!
  resourceType: Resourcetype!
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
}

"""
A condition to be used against `Review` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input ReviewCondition {
  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `publisherTarget` field."""
  publisherTarget: Int
}

"""An input for mutations affecting `Review`"""
input ReviewInput {
  byRomanian: Boolean
  createdById: Int!
  halfStars: Int
  id: Int
  isActive: Boolean
  publisherId: Int!
  publisherTarget: Int!
  resourceId: Int!
  resourceType: Resourcetype!
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
}

"""
Represents an update to a `Review`. Fields that are set will be updated.
"""
input ReviewPatch {
  byRomanian: Boolean
  createdById: Int
  halfStars: Int
  id: Int
  isActive: Boolean
  publisherId: Int
  publisherTarget: Int
  resourceId: Int
  resourceType: Resourcetype
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
}

"""A connection to a list of `Review` values."""
type ReviewsConnection {
  """
  A list of edges which contains the `Review` and cursor to aid in pagination.
  """
  edges: [ReviewsEdge!]!

  """A list of `Review` objects."""
  nodes: [Review!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Review` you could get from the connection."""
  totalCount: Int!
}

"""A `Review` edge in the connection."""
type ReviewsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Review` at the end of the edge."""
  node: Review!
}

"""Methods to use when ordering `Review`."""
enum ReviewsOrderBy {
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  PUBLISHER_TARGET_ASC
  PUBLISHER_TARGET_DESC
}

type Roomcalendar implements Node {
  """
  Reads a single `Roomcalendarentry` that is related to this `Roomcalendar`.
  """
  calendarentry: Roomcalendarentry
  calendarentryId: Int!

  """Reads a single `Usertable` that is related to this `Roomcalendar`."""
  createdBy: Usertable
  createdById: Int!
  id: Int!
  isActive: Boolean

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Roomcalendar`."""
  publisher: Publisher
  publisherId: Int!

  """Reads and enables pagination through a set of `Roomcalendarentry`."""
  roomcalendarentriesByAtRoomCalendar(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarentryCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarentriesConnection!

  """Reads and enables pagination through a set of `Roomlist`."""
  roomlistsByRoomCalendarId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomlistCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomlistsConnection!
  timeCreated: Datetime
}

"""
A condition to be used against `Roomcalendar` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input RoomcalendarCondition {
  """Checks for equality with the object’s `calendarentryId` field."""
  calendarentryId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""A connection to a list of `Roomcalendarentry` values."""
type RoomcalendarentriesConnection {
  """
  A list of edges which contains the `Roomcalendarentry` and cursor to aid in pagination.
  """
  edges: [RoomcalendarentriesEdge!]!

  """A list of `Roomcalendarentry` objects."""
  nodes: [Roomcalendarentry!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Roomcalendarentry` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Roomcalendarentry` edge in the connection."""
type RoomcalendarentriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Roomcalendarentry` at the end of the edge."""
  node: Roomcalendarentry!
}

"""Methods to use when ordering `Roomcalendarentry`."""
enum RoomcalendarentriesOrderBy {
  AT_ROOM_CALENDAR_ASC
  AT_ROOM_CALENDAR_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Roomcalendarentry implements Node {
  atRoomCalendar: Int
  comment: [String]
  fromDate: [Date]
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """
  Reads a single `Roomcalendar` that is related to this `Roomcalendarentry`.
  """
  roomcalendarByAtRoomCalendar: Roomcalendar

  """Reads and enables pagination through a set of `Roomcalendar`."""
  roomcalendarsByCalendarentryId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsConnection!
  timeCreated: Datetime
  toDate: [Date]
}

"""
A condition to be used against `Roomcalendarentry` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input RoomcalendarentryCondition {
  """Checks for equality with the object’s `atRoomCalendar` field."""
  atRoomCalendar: Int

  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Roomcalendarentry`"""
input RoomcalendarentryInput {
  atRoomCalendar: Int
  comment: [String]
  fromDate: [Date]
  id: Int
  timeCreated: Datetime
  toDate: [Date]
}

"""
Represents an update to a `Roomcalendarentry`. Fields that are set will be updated.
"""
input RoomcalendarentryPatch {
  atRoomCalendar: Int
  comment: [String]
  fromDate: [Date]
  id: Int
  timeCreated: Datetime
  toDate: [Date]
}

"""An input for mutations affecting `Roomcalendar`"""
input RoomcalendarInput {
  calendarentryId: Int!
  createdById: Int!
  id: Int
  isActive: Boolean
  publisherId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Roomcalendar`. Fields that are set will be updated.
"""
input RoomcalendarPatch {
  calendarentryId: Int
  createdById: Int
  id: Int
  isActive: Boolean
  publisherId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Roomcalendar` values."""
type RoomcalendarsConnection {
  """
  A list of edges which contains the `Roomcalendar` and cursor to aid in pagination.
  """
  edges: [RoomcalendarsEdge!]!

  """A list of `Roomcalendar` objects."""
  nodes: [Roomcalendar!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Roomcalendar` you could get from the connection."""
  totalCount: Int!
}

"""A `Roomcalendar` edge in the connection."""
type RoomcalendarsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Roomcalendar` at the end of the edge."""
  node: Roomcalendar!
}

"""Methods to use when ordering `Roomcalendar`."""
enum RoomcalendarsOrderBy {
  CALENDARENTRY_ID_ASC
  CALENDARENTRY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

type Roomlist implements Node {
  """
  Reads a single `Accomodationresource` that is related to this `Roomlist`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource
  atAccomodation: Int!
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  roomActive: Boolean

  """Reads a single `Roomcalendar` that is related to this `Roomlist`."""
  roomCalendar: Roomcalendar
  roomCalendarId: Int
  roomNames: String
  roomNumPeople: Int
  roomPrices: Float
}

"""
A condition to be used against `Roomlist` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input RoomlistCondition {
  """Checks for equality with the object’s `atAccomodation` field."""
  atAccomodation: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `roomCalendarId` field."""
  roomCalendarId: Int
}

"""An input for mutations affecting `Roomlist`"""
input RoomlistInput {
  atAccomodation: Int!
  id: Int
  roomActive: Boolean
  roomCalendarId: Int
  roomNames: String
  roomNumPeople: Int
  roomPrices: Float
}

"""
Represents an update to a `Roomlist`. Fields that are set will be updated.
"""
input RoomlistPatch {
  atAccomodation: Int
  id: Int
  roomActive: Boolean
  roomCalendarId: Int
  roomNames: String
  roomNumPeople: Int
  roomPrices: Float
}

"""A connection to a list of `Roomlist` values."""
type RoomlistsConnection {
  """
  A list of edges which contains the `Roomlist` and cursor to aid in pagination.
  """
  edges: [RoomlistsEdge!]!

  """A list of `Roomlist` objects."""
  nodes: [Roomlist!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Roomlist` you could get from the connection."""
  totalCount: Int!
}

"""A `Roomlist` edge in the connection."""
type RoomlistsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Roomlist` at the end of the edge."""
  node: Roomlist!
}

"""Methods to use when ordering `Roomlist`."""
enum RoomlistsOrderBy {
  AT_ACCOMODATION_ASC
  AT_ACCOMODATION_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  ROOM_CALENDAR_ID_ASC
  ROOM_CALENDAR_ID_DESC
}

type Similarbytriptypeaccomodation implements Node {
  """
  -- resourceIds in one dimension, resource types in the other (7-8 or so)
  [destinationres, eventres, accomodationres, hostres, transportres,
  app_public.guideres, app_public.tourist?, travelgroup?]
  
  """
  accomodationIds: [Int]

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeaccomodation`.
  """
  agencyByAtAgency: Agency
  atAgency: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
  tripTypeName: String!
}

"""
A condition to be used against `Similarbytriptypeaccomodation` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypeaccomodationCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Similarbytriptypeaccomodation`"""
input SimilarbytriptypeaccomodationInput {
  """
  -- resourceIds in one dimension, resource types in the other (7-8 or so)
  [destinationres, eventres, accomodationres, hostres, transportres,
  app_public.guideres, app_public.tourist?, travelgroup?]
  
  """
  accomodationIds: [Int]
  atAgency: Int!
  timeCreated: Datetime
  tripTypeName: String!
}

"""
Represents an update to a `Similarbytriptypeaccomodation`. Fields that are set will be updated.
"""
input SimilarbytriptypeaccomodationPatch {
  """
  -- resourceIds in one dimension, resource types in the other (7-8 or so)
  [destinationres, eventres, accomodationres, hostres, transportres,
  app_public.guideres, app_public.tourist?, travelgroup?]
  
  """
  accomodationIds: [Int]
  atAgency: Int
  timeCreated: Datetime
  tripTypeName: String
}

"""A connection to a list of `Similarbytriptypeaccomodation` values."""
type SimilarbytriptypeaccomodationsConnection {
  """
  A list of edges which contains the `Similarbytriptypeaccomodation` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypeaccomodationsEdge!]!

  """A list of `Similarbytriptypeaccomodation` objects."""
  nodes: [Similarbytriptypeaccomodation!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypeaccomodation` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypeaccomodation` edge in the connection."""
type SimilarbytriptypeaccomodationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypeaccomodation` at the end of the edge."""
  node: Similarbytriptypeaccomodation!
}

"""Methods to use when ordering `Similarbytriptypeaccomodation`."""
enum SimilarbytriptypeaccomodationsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

type Similarbytriptypedestination implements Node {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypedestination`.
  """
  agencyByAtAgency: Agency
  atAgency: Int!
  destinationIds: [Int]

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
  tripTypeName: String!
}

"""
A condition to be used against `Similarbytriptypedestination` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypedestinationCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Similarbytriptypedestination`"""
input SimilarbytriptypedestinationInput {
  atAgency: Int!
  destinationIds: [Int]
  timeCreated: Datetime
  tripTypeName: String!
}

"""
Represents an update to a `Similarbytriptypedestination`. Fields that are set will be updated.
"""
input SimilarbytriptypedestinationPatch {
  atAgency: Int
  destinationIds: [Int]
  timeCreated: Datetime
  tripTypeName: String
}

"""A connection to a list of `Similarbytriptypedestination` values."""
type SimilarbytriptypedestinationsConnection {
  """
  A list of edges which contains the `Similarbytriptypedestination` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypedestinationsEdge!]!

  """A list of `Similarbytriptypedestination` objects."""
  nodes: [Similarbytriptypedestination!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypedestination` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypedestination` edge in the connection."""
type SimilarbytriptypedestinationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypedestination` at the end of the edge."""
  node: Similarbytriptypedestination!
}

"""Methods to use when ordering `Similarbytriptypedestination`."""
enum SimilarbytriptypedestinationsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

type Similarbytriptypeevent implements Node {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeevent`.
  """
  agencyByAtAgency: Agency
  atAgency: Int!
  eventIds: [Int]

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
  tripTypeName: String!
}

"""
A condition to be used against `Similarbytriptypeevent` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypeeventCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Similarbytriptypeevent`"""
input SimilarbytriptypeeventInput {
  atAgency: Int!
  eventIds: [Int]
  timeCreated: Datetime
  tripTypeName: String!
}

"""
Represents an update to a `Similarbytriptypeevent`. Fields that are set will be updated.
"""
input SimilarbytriptypeeventPatch {
  atAgency: Int
  eventIds: [Int]
  timeCreated: Datetime
  tripTypeName: String
}

"""A connection to a list of `Similarbytriptypeevent` values."""
type SimilarbytriptypeeventsConnection {
  """
  A list of edges which contains the `Similarbytriptypeevent` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypeeventsEdge!]!

  """A list of `Similarbytriptypeevent` objects."""
  nodes: [Similarbytriptypeevent!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypeevent` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypeevent` edge in the connection."""
type SimilarbytriptypeeventsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypeevent` at the end of the edge."""
  node: Similarbytriptypeevent!
}

"""Methods to use when ordering `Similarbytriptypeevent`."""
enum SimilarbytriptypeeventsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

type Similarbytriptypeguide implements Node {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeguide`.
  """
  agencyByAtAgency: Agency
  atAgency: Int!
  guideIds: [Int]

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
  tripTypeName: String!
}

"""
A condition to be used against `Similarbytriptypeguide` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypeguideCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Similarbytriptypeguide`"""
input SimilarbytriptypeguideInput {
  atAgency: Int!
  guideIds: [Int]
  timeCreated: Datetime
  tripTypeName: String!
}

"""
Represents an update to a `Similarbytriptypeguide`. Fields that are set will be updated.
"""
input SimilarbytriptypeguidePatch {
  atAgency: Int
  guideIds: [Int]
  timeCreated: Datetime
  tripTypeName: String
}

"""A connection to a list of `Similarbytriptypeguide` values."""
type SimilarbytriptypeguidesConnection {
  """
  A list of edges which contains the `Similarbytriptypeguide` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypeguidesEdge!]!

  """A list of `Similarbytriptypeguide` objects."""
  nodes: [Similarbytriptypeguide!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypeguide` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypeguide` edge in the connection."""
type SimilarbytriptypeguidesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypeguide` at the end of the edge."""
  node: Similarbytriptypeguide!
}

"""Methods to use when ordering `Similarbytriptypeguide`."""
enum SimilarbytriptypeguidesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

type Similarbytriptypehost implements Node {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypehost`.
  """
  agencyByAtAgency: Agency
  atAgency: Int!
  hostIds: [Int]

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
  tripTypeName: String!
}

"""
A condition to be used against `Similarbytriptypehost` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypehostCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Similarbytriptypehost`"""
input SimilarbytriptypehostInput {
  atAgency: Int!
  hostIds: [Int]
  timeCreated: Datetime
  tripTypeName: String!
}

"""
Represents an update to a `Similarbytriptypehost`. Fields that are set will be updated.
"""
input SimilarbytriptypehostPatch {
  atAgency: Int
  hostIds: [Int]
  timeCreated: Datetime
  tripTypeName: String
}

"""A connection to a list of `Similarbytriptypehost` values."""
type SimilarbytriptypehostsConnection {
  """
  A list of edges which contains the `Similarbytriptypehost` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypehostsEdge!]!

  """A list of `Similarbytriptypehost` objects."""
  nodes: [Similarbytriptypehost!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypehost` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypehost` edge in the connection."""
type SimilarbytriptypehostsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypehost` at the end of the edge."""
  node: Similarbytriptypehost!
}

"""Methods to use when ordering `Similarbytriptypehost`."""
enum SimilarbytriptypehostsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

type Similarbytriptypetransport implements Node {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypetransport`.
  """
  agencyByAtAgency: Agency
  atAgency: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
  transportIds: [Int]
  tripTypeName: String!
}

"""
A condition to be used against `Similarbytriptypetransport` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypetransportCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Similarbytriptypetransport`"""
input SimilarbytriptypetransportInput {
  atAgency: Int!
  timeCreated: Datetime
  transportIds: [Int]
  tripTypeName: String!
}

"""
Represents an update to a `Similarbytriptypetransport`. Fields that are set will be updated.
"""
input SimilarbytriptypetransportPatch {
  atAgency: Int
  timeCreated: Datetime
  transportIds: [Int]
  tripTypeName: String
}

"""A connection to a list of `Similarbytriptypetransport` values."""
type SimilarbytriptypetransportsConnection {
  """
  A list of edges which contains the `Similarbytriptypetransport` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypetransportsEdge!]!

  """A list of `Similarbytriptypetransport` objects."""
  nodes: [Similarbytriptypetransport!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypetransport` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypetransport` edge in the connection."""
type SimilarbytriptypetransportsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypetransport` at the end of the edge."""
  node: Similarbytriptypetransport!
}

"""Methods to use when ordering `Similarbytriptypetransport`."""
enum SimilarbytriptypetransportsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

type Similarbytriptypetravelgroup implements Node {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypetravelgroup`.
  """
  agencyByAtAgency: Agency
  atAgency: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
  travelGroupIds: [Int]
  tripTypeName: String!
}

"""
A condition to be used against `Similarbytriptypetravelgroup` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypetravelgroupCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String
}

"""An input for mutations affecting `Similarbytriptypetravelgroup`"""
input SimilarbytriptypetravelgroupInput {
  atAgency: Int!
  timeCreated: Datetime
  travelGroupIds: [Int]
  tripTypeName: String!
}

"""
Represents an update to a `Similarbytriptypetravelgroup`. Fields that are set will be updated.
"""
input SimilarbytriptypetravelgroupPatch {
  atAgency: Int
  timeCreated: Datetime
  travelGroupIds: [Int]
  tripTypeName: String
}

"""A connection to a list of `Similarbytriptypetravelgroup` values."""
type SimilarbytriptypetravelgroupsConnection {
  """
  A list of edges which contains the `Similarbytriptypetravelgroup` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypetravelgroupsEdge!]!

  """A list of `Similarbytriptypetravelgroup` objects."""
  nodes: [Similarbytriptypetravelgroup!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypetravelgroup` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypetravelgroup` edge in the connection."""
type SimilarbytriptypetravelgroupsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypetravelgroup` at the end of the edge."""
  node: Similarbytriptypetravelgroup!
}

"""Methods to use when ordering `Similarbytriptypetravelgroup`."""
enum SimilarbytriptypetravelgroupsOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
}

"""
The root subscription type: contains realtime events you can subscribe to with the `subscription` operation.
"""
type Subscription {
  """Triggered when the logged in user's record is updated in some way."""
  currentUserUpdated: UserSubscriptionPayload
}

type Timerange implements Node {
  fromTimestamp: Datetime

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByTimeRangeId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesConnection!
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
  toTimestamp: Datetime
}

"""
A condition to be used against `Timerange` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input TimerangeCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Timerange`"""
input TimerangeInput {
  fromTimestamp: Datetime
  id: Int
  timeCreated: Datetime
  toTimestamp: Datetime
}

"""
Represents an update to a `Timerange`. Fields that are set will be updated.
"""
input TimerangePatch {
  fromTimestamp: Datetime
  id: Int
  timeCreated: Datetime
  toTimestamp: Datetime
}

"""A connection to a list of `Timerange` values."""
type TimerangesConnection {
  """
  A list of edges which contains the `Timerange` and cursor to aid in pagination.
  """
  edges: [TimerangesEdge!]!

  """A list of `Timerange` objects."""
  nodes: [Timerange!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Timerange` you could get from the connection."""
  totalCount: Int!
}

"""A `Timerange` edge in the connection."""
type TimerangesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Timerange` at the end of the edge."""
  node: Timerange!
}

"""Methods to use when ordering `Timerange`."""
enum TimerangesOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Topic implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads and enables pagination through a set of `Post`."""
  postsByTopic(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Post`."""
    orderBy: [PostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PostsConnection!
  title: String!
}

"""
A condition to be used against `Topic` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input TopicCondition {
  """Checks for equality with the object’s `title` field."""
  title: String
}

"""An input for mutations affecting `Topic`"""
input TopicInput {
  title: String!
}

"""
Represents an update to a `Topic`. Fields that are set will be updated.
"""
input TopicPatch {
  title: String
}

"""A connection to a list of `Topic` values."""
type TopicsConnection {
  """
  A list of edges which contains the `Topic` and cursor to aid in pagination.
  """
  edges: [TopicsEdge!]!

  """A list of `Topic` objects."""
  nodes: [Topic!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Topic` you could get from the connection."""
  totalCount: Int!
}

"""A `Topic` edge in the connection."""
type TopicsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Topic` at the end of the edge."""
  node: Topic!
}

"""Methods to use when ordering `Topic`."""
enum TopicsOrderBy {
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TITLE_ASC
  TITLE_DESC
}

type Tourist implements Node {
  agencyReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  alternativeLanguage: Languages
  atTravelGroup: Int

  """Reads a single `Contact` that is related to this `Tourist`."""
  contact: Contact
  contactId: Int!

  """Reads a single `Usertable` that is related to this `Tourist`."""
  createdBy: Usertable
  createdById: Int!
  guideReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  id: Int!
  isActive: Boolean
  isRomanian: Boolean!
  nativeLanguage: Languages

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Tourist`."""
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime

  """Reads a single `Touristbid` that is related to this `Tourist`."""
  touristBid: Touristbid
  touristBidId: Int!

  """Reads a single `Touristdeal` that is related to this `Tourist`."""
  touristDeal: Touristdeal
  touristDealId: Int!

  """Reads a single `Touristfavorite` that is related to this `Tourist`."""
  touristFavorite: Touristfavorite
  touristFavoriteId: Int!
  touristFirstName: String
  touristLastName: String

  """Reads a single `Touristoffer` that is related to this `Tourist`."""
  touristOffer: Touristoffer
  touristOfferId: Int!

  """Reads and enables pagination through a set of `Touristreview`."""
  touristreviewsByTouristIdTarget(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristreviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsConnection!

  """Reads and enables pagination through a set of `Usertable`."""
  usertablesByAtTourist(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsertableCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesConnection!
}

type Touristbid implements Node {
  accomodationResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByTouristBidId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsConnection!
  transportationResourceIdPool: [Int]
  tripOfferResourceIdPool: [Int]
}

"""
A condition to be used against `Touristbid` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input TouristbidCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Touristbid`"""
input TouristbidInput {
  accomodationResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  transportationResourceIdPool: [Int]
  tripOfferResourceIdPool: [Int]
}

"""
Represents an update to a `Touristbid`. Fields that are set will be updated.
"""
input TouristbidPatch {
  accomodationResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  transportationResourceIdPool: [Int]
  tripOfferResourceIdPool: [Int]
}

"""A connection to a list of `Touristbid` values."""
type TouristbidsConnection {
  """
  A list of edges which contains the `Touristbid` and cursor to aid in pagination.
  """
  edges: [TouristbidsEdge!]!

  """A list of `Touristbid` objects."""
  nodes: [Touristbid!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Touristbid` you could get from the connection."""
  totalCount: Int!
}

"""A `Touristbid` edge in the connection."""
type TouristbidsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristbid` at the end of the edge."""
  node: Touristbid!
}

"""Methods to use when ordering `Touristbid`."""
enum TouristbidsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Tourist` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input TouristCondition {
  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `touristBidId` field."""
  touristBidId: Int

  """Checks for equality with the object’s `touristDealId` field."""
  touristDealId: Int

  """Checks for equality with the object’s `touristFavoriteId` field."""
  touristFavoriteId: Int

  """Checks for equality with the object’s `touristOfferId` field."""
  touristOfferId: Int
}

type Touristdeal implements Node {
  accomodationResourceIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  eventResourceIdPool: [Int]
  guideOfferResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByTouristDealId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsConnection!
  transportationResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
}

"""
A condition to be used against `Touristdeal` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input TouristdealCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Touristdeal`"""
input TouristdealInput {
  accomodationResourceIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  eventResourceIdPool: [Int]
  guideOfferResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  transportationResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
}

"""
Represents an update to a `Touristdeal`. Fields that are set will be updated.
"""
input TouristdealPatch {
  accomodationResourceIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  eventResourceIdPool: [Int]
  guideOfferResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  transportationResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
}

"""A connection to a list of `Touristdeal` values."""
type TouristdealsConnection {
  """
  A list of edges which contains the `Touristdeal` and cursor to aid in pagination.
  """
  edges: [TouristdealsEdge!]!

  """A list of `Touristdeal` objects."""
  nodes: [Touristdeal!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Touristdeal` you could get from the connection."""
  totalCount: Int!
}

"""A `Touristdeal` edge in the connection."""
type TouristdealsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristdeal` at the end of the edge."""
  node: Touristdeal!
}

"""Methods to use when ordering `Touristdeal`."""
enum TouristdealsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Touristfavorite implements Node {
  accomodationResourceIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  eventResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByTouristFavoriteId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsConnection!
  transportationResourceIdPool: [Int]
  travelGroupResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
}

"""
A condition to be used against `Touristfavorite` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TouristfavoriteCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Touristfavorite`"""
input TouristfavoriteInput {
  accomodationResourceIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  eventResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  transportationResourceIdPool: [Int]
  travelGroupResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
}

"""
Represents an update to a `Touristfavorite`. Fields that are set will be updated.
"""
input TouristfavoritePatch {
  accomodationResourceIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  eventResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  id: Int
  transportationResourceIdPool: [Int]
  travelGroupResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
}

"""A connection to a list of `Touristfavorite` values."""
type TouristfavoritesConnection {
  """
  A list of edges which contains the `Touristfavorite` and cursor to aid in pagination.
  """
  edges: [TouristfavoritesEdge!]!

  """A list of `Touristfavorite` objects."""
  nodes: [Touristfavorite!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Touristfavorite` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Touristfavorite` edge in the connection."""
type TouristfavoritesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristfavorite` at the end of the edge."""
  node: Touristfavorite!
}

"""Methods to use when ordering `Touristfavorite`."""
enum TouristfavoritesOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""An input for mutations affecting `Tourist`"""
input TouristInput {
  agencyReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  alternativeLanguage: Languages
  atTravelGroup: Int
  contactId: Int!
  createdById: Int!
  guideReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  id: Int
  isActive: Boolean
  isRomanian: Boolean!
  nativeLanguage: Languages
  publisherId: Int!
  timeCreated: Datetime
  touristBidId: Int!
  touristDealId: Int!
  touristFavoriteId: Int!
  touristFirstName: String
  touristLastName: String
  touristOfferId: Int!
}

type Touristoffer implements Node {
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  touristResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByTouristOfferId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsConnection!
}

"""
A condition to be used against `Touristoffer` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TouristofferCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Touristoffer`"""
input TouristofferInput {
  id: Int
  touristResourceIdPool: [Int]
}

"""
Represents an update to a `Touristoffer`. Fields that are set will be updated.
"""
input TouristofferPatch {
  id: Int
  touristResourceIdPool: [Int]
}

"""A connection to a list of `Touristoffer` values."""
type TouristoffersConnection {
  """
  A list of edges which contains the `Touristoffer` and cursor to aid in pagination.
  """
  edges: [TouristoffersEdge!]!

  """A list of `Touristoffer` objects."""
  nodes: [Touristoffer!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Touristoffer` you could get from the connection."""
  totalCount: Int!
}

"""A `Touristoffer` edge in the connection."""
type TouristoffersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristoffer` at the end of the edge."""
  node: Touristoffer!
}

"""Methods to use when ordering `Touristoffer`."""
enum TouristoffersOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
Represents an update to a `Tourist`. Fields that are set will be updated.
"""
input TouristPatch {
  agencyReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  alternativeLanguage: Languages
  atTravelGroup: Int
  contactId: Int
  createdById: Int
  guideReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  id: Int
  isActive: Boolean
  isRomanian: Boolean
  nativeLanguage: Languages
  publisherId: Int
  timeCreated: Datetime
  touristBidId: Int
  touristDealId: Int
  touristFavoriteId: Int
  touristFirstName: String
  touristLastName: String
  touristOfferId: Int
}

type Touristresource implements Node {
  """Reads a single `Agency` that is related to this `Touristresource`."""
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Agencytourist`."""
  agencytouristsByTouristId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytouristsConnection!
  atAgency: Int
  atGuide: Int
  atTravelGroup: Int

  """Reads a single `Contact` that is related to this `Touristresource`."""
  contact: Contact
  contactId: Int!

  """Reads a single `Usertable` that is related to this `Touristresource`."""
  createdBy: Usertable
  createdById: Int!

  """Reads a single `Guide` that is related to this `Touristresource`."""
  guideByAtGuide: Guide
  id: Int!
  isActive: Boolean
  isPublic: Boolean!
  isRomanian: Boolean
  isSigned: Boolean!
  lastModified: Datetime
  name: String

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Priceinfo` that is related to this `Touristresource`."""
  priceInfo: Priceinfo
  priceInfoId: Int!

  """Reads a single `Publisher` that is related to this `Touristresource`."""
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime

  """
  Reads a single `Travelgroupresource` that is related to this `Touristresource`.
  """
  travelgroupresourceByAtTravelGroup: Travelgroupresource

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByAtTouristResource(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesConnection!

  """
  Reads a single `Bookingcalendar` that is related to this `Touristresource`.
  """
  travellingCalendar: Bookingcalendar
  travellingCalendarId: Int!
}

"""
A condition to be used against `Touristresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TouristresourceCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `atTravelGroup` field."""
  atTravelGroup: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `priceInfoId` field."""
  priceInfoId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `travellingCalendarId` field."""
  travellingCalendarId: Int
}

"""An input for mutations affecting `Touristresource`"""
input TouristresourceInput {
  atAgency: Int
  atGuide: Int
  atTravelGroup: Int
  contactId: Int!
  createdById: Int!
  id: Int
  isActive: Boolean
  isPublic: Boolean
  isRomanian: Boolean
  isSigned: Boolean!
  lastModified: Datetime
  name: String
  priceInfoId: Int!
  publisherId: Int!
  timeCreated: Datetime
  travellingCalendarId: Int!
}

"""
Represents an update to a `Touristresource`. Fields that are set will be updated.
"""
input TouristresourcePatch {
  atAgency: Int
  atGuide: Int
  atTravelGroup: Int
  contactId: Int
  createdById: Int
  id: Int
  isActive: Boolean
  isPublic: Boolean
  isRomanian: Boolean
  isSigned: Boolean
  lastModified: Datetime
  name: String
  priceInfoId: Int
  publisherId: Int
  timeCreated: Datetime
  travellingCalendarId: Int
}

"""A connection to a list of `Touristresource` values."""
type TouristresourcesConnection {
  """
  A list of edges which contains the `Touristresource` and cursor to aid in pagination.
  """
  edges: [TouristresourcesEdge!]!

  """A list of `Touristresource` objects."""
  nodes: [Touristresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Touristresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Touristresource` edge in the connection."""
type TouristresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristresource` at the end of the edge."""
  node: Touristresource!
}

"""Methods to use when ordering `Touristresource`."""
enum TouristresourcesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  AT_TRAVEL_GROUP_ASC
  AT_TRAVEL_GROUP_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRICE_INFO_ID_ASC
  PRICE_INFO_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  TRAVELLING_CALENDAR_ID_ASC
  TRAVELLING_CALENDAR_ID_DESC
}

type Touristreview implements Node {
  byRomanian: Boolean

  """Reads a single `Usertable` that is related to this `Touristreview`."""
  createdBy: Usertable
  createdById: Int!
  halfStars: Int!
  id: Int!
  isActive: Boolean

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Publisher` that is related to this `Touristreview`."""
  publisher: Publisher
  publisherId: Int!
  reviewText: String!
  startDateTripEvent: Date!
  timeCreated: Datetime

  """Reads a single `Tourist` that is related to this `Touristreview`."""
  touristByTouristIdTarget: Tourist
  touristIdTarget: Int!
}

"""
A condition to be used against `Touristreview` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TouristreviewCondition {
  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `touristIdTarget` field."""
  touristIdTarget: Int
}

"""An input for mutations affecting `Touristreview`"""
input TouristreviewInput {
  byRomanian: Boolean
  createdById: Int!
  halfStars: Int!
  id: Int
  isActive: Boolean
  publisherId: Int!
  reviewText: String!
  startDateTripEvent: Date!
  timeCreated: Datetime
  touristIdTarget: Int!
}

"""
Represents an update to a `Touristreview`. Fields that are set will be updated.
"""
input TouristreviewPatch {
  byRomanian: Boolean
  createdById: Int
  halfStars: Int
  id: Int
  isActive: Boolean
  publisherId: Int
  reviewText: String
  startDateTripEvent: Date
  timeCreated: Datetime
  touristIdTarget: Int
}

"""A connection to a list of `Touristreview` values."""
type TouristreviewsConnection {
  """
  A list of edges which contains the `Touristreview` and cursor to aid in pagination.
  """
  edges: [TouristreviewsEdge!]!

  """A list of `Touristreview` objects."""
  nodes: [Touristreview!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Touristreview` you could get from the connection."""
  totalCount: Int!
}

"""A `Touristreview` edge in the connection."""
type TouristreviewsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristreview` at the end of the edge."""
  node: Touristreview!
}

"""Methods to use when ordering `Touristreview`."""
enum TouristreviewsOrderBy {
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  TOURIST_ID_TARGET_ASC
  TOURIST_ID_TARGET_DESC
}

"""A connection to a list of `Tourist` values."""
type TouristsConnection {
  """
  A list of edges which contains the `Tourist` and cursor to aid in pagination.
  """
  edges: [TouristsEdge!]!

  """A list of `Tourist` objects."""
  nodes: [Tourist!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Tourist` you could get from the connection."""
  totalCount: Int!
}

"""A `Tourist` edge in the connection."""
type TouristsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Tourist` at the end of the edge."""
  node: Tourist!
}

"""Methods to use when ordering `Tourist`."""
enum TouristsOrderBy {
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  TOURIST_BID_ID_ASC
  TOURIST_BID_ID_DESC
  TOURIST_DEAL_ID_ASC
  TOURIST_DEAL_ID_DESC
  TOURIST_FAVORITE_ID_ASC
  TOURIST_FAVORITE_ID_DESC
  TOURIST_OFFER_ID_ASC
  TOURIST_OFFER_ID_DESC
}

"""All input for the `transferOrganizationBillingContact` mutation."""
input TransferOrganizationBillingContactInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  organizationId: UUID!
  userId: UUID!
}

"""The output of our `transferOrganizationBillingContact` mutation."""
type TransferOrganizationBillingContactPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  organization: Organization

  """An edge for our `Organization`. May be used by Relay 1."""
  organizationEdge(
    """The method to use when ordering `Organization`."""
    orderBy: [OrganizationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `transferOrganizationOwnership` mutation."""
input TransferOrganizationOwnershipInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  organizationId: UUID!
  userId: UUID!
}

"""The output of our `transferOrganizationOwnership` mutation."""
type TransferOrganizationOwnershipPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  organization: Organization

  """An edge for our `Organization`. May be used by Relay 1."""
  organizationEdge(
    """The method to use when ordering `Organization`."""
    orderBy: [OrganizationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

type Transportresource implements Node {
  """Reads a single `Contact` that is related to this `Transportresource`."""
  addressInfo: Contact
  addressInfoId: Int!

  """Reads a single `Agency` that is related to this `Transportresource`."""
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Agencytransport`."""
  agencytransportsByTransportId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytransportCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytransportsConnection!

  """Reads and enables pagination through a set of `Assoctransport`."""
  assoctransportsByTransportId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctransportCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctransportsConnection!
  atAgency: Int
  atGuide: Int

  """
  Reads a single `Bookingcalendar` that is related to this `Transportresource`.
  """
  bookingCalendar: Bookingcalendar
  bookingCalendarId: Int!

  """Reads a single `Contact` that is related to this `Transportresource`."""
  contact: Contact
  contactId: Int!

  """
  Reads a single `Usertable` that is related to this `Transportresource`.
  """
  createdBy: Usertable
  createdById: Int!

  """Reads a single `Guide` that is related to this `Transportresource`."""
  guideByAtGuide: Guide
  id: Int!
  isActive: Boolean
  isBus: Boolean!
  isPublic: Boolean!
  lastModified: Datetime
  locatedIn: Area!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  numberOfPlaces: Int!
  ownedByAt: Boolean!

  """
  Reads a single `Presentation` that is related to this `Transportresource`.
  """
  presentation: Presentation
  presentationId: Int

  """
  Reads a single `Publisher` that is related to this `Transportresource`.
  """
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime
  transportName: String
}

"""
A condition to be used against `Transportresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TransportresourceCondition {
  """Checks for equality with the object’s `addressInfoId` field."""
  addressInfoId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Transportresource`"""
input TransportresourceInput {
  addressInfoId: Int!
  atAgency: Int
  atGuide: Int
  bookingCalendarId: Int!
  contactId: Int!
  createdById: Int!
  id: Int
  isActive: Boolean
  isBus: Boolean!
  isPublic: Boolean
  lastModified: Datetime
  locatedIn: Area!
  numberOfPlaces: Int!
  ownedByAt: Boolean
  presentationId: Int
  publisherId: Int!
  timeCreated: Datetime
  transportName: String
}

"""
Represents an update to a `Transportresource`. Fields that are set will be updated.
"""
input TransportresourcePatch {
  addressInfoId: Int
  atAgency: Int
  atGuide: Int
  bookingCalendarId: Int
  contactId: Int
  createdById: Int
  id: Int
  isActive: Boolean
  isBus: Boolean
  isPublic: Boolean
  lastModified: Datetime
  locatedIn: Area
  numberOfPlaces: Int
  ownedByAt: Boolean
  presentationId: Int
  publisherId: Int
  timeCreated: Datetime
  transportName: String
}

"""A connection to a list of `Transportresource` values."""
type TransportresourcesConnection {
  """
  A list of edges which contains the `Transportresource` and cursor to aid in pagination.
  """
  edges: [TransportresourcesEdge!]!

  """A list of `Transportresource` objects."""
  nodes: [Transportresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Transportresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Transportresource` edge in the connection."""
type TransportresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Transportresource` at the end of the edge."""
  node: Transportresource!
}

"""Methods to use when ordering `Transportresource`."""
enum TransportresourcesOrderBy {
  ADDRESS_INFO_ID_ASC
  ADDRESS_INFO_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

type Travelgroupresource implements Node {
  """Reads a single `Agency` that is related to this `Travelgroupresource`."""
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Agencytravelgroup`."""
  agencytravelgroupsByTravelGroupId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytravelgroupCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytravelgroupsConnection!

  """Reads and enables pagination through a set of `Assoctravelgroup`."""
  assoctravelgroupsByTravelGroupId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctravelgroupCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctravelgroupsConnection!
  atAgency: Int
  atGuide: Int
  atTouristResource: Int!
  atTripOfferResource: Int

  """
  Reads a single `Bookingcalendar` that is related to this `Travelgroupresource`.
  """
  bookingCalendar: Bookingcalendar
  bookingCalendarId: Int!

  """
  Reads a single `Contact` that is related to this `Travelgroupresource`.
  """
  contact: Contact
  contactId: Int!

  """
  Reads a single `Usertable` that is related to this `Travelgroupresource`.
  """
  createdBy: Usertable
  createdById: Int!
  customInfo: [String]

  """Reads a single `Guide` that is related to this `Travelgroupresource`."""
  guideByAtGuide: Guide
  id: Int!
  isActive: Boolean
  isRomanian: Boolean!
  language: Languages!
  lastModified: Datetime

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  numberOfAdults: Int
  numberOfChildren: Int

  """
  Reads a single `Publisher` that is related to this `Travelgroupresource`.
  """
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime

  """
  Reads a single `Touristresource` that is related to this `Travelgroupresource`.
  """
  touristresourceByAtTouristResource: Touristresource

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByAtTravelGroup(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesConnection!
  travelGroupName: String

  """
  Reads a single `Tripofferresource` that is related to this `Travelgroupresource`.
  """
  tripofferresourceByAtTripOfferResource: Tripofferresource
}

"""
A condition to be used against `Travelgroupresource` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input TravelgroupresourceCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `atTouristResource` field."""
  atTouristResource: Int

  """Checks for equality with the object’s `atTripOfferResource` field."""
  atTripOfferResource: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Travelgroupresource`"""
input TravelgroupresourceInput {
  atAgency: Int
  atGuide: Int
  atTouristResource: Int!
  atTripOfferResource: Int
  bookingCalendarId: Int!
  contactId: Int!
  createdById: Int!
  customInfo: [String]
  id: Int
  isActive: Boolean
  isRomanian: Boolean!
  language: Languages!
  lastModified: Datetime
  numberOfAdults: Int
  numberOfChildren: Int
  publisherId: Int!
  timeCreated: Datetime
  travelGroupName: String
}

"""
Represents an update to a `Travelgroupresource`. Fields that are set will be updated.
"""
input TravelgroupresourcePatch {
  atAgency: Int
  atGuide: Int
  atTouristResource: Int
  atTripOfferResource: Int
  bookingCalendarId: Int
  contactId: Int
  createdById: Int
  customInfo: [String]
  id: Int
  isActive: Boolean
  isRomanian: Boolean
  language: Languages
  lastModified: Datetime
  numberOfAdults: Int
  numberOfChildren: Int
  publisherId: Int
  timeCreated: Datetime
  travelGroupName: String
}

"""A connection to a list of `Travelgroupresource` values."""
type TravelgroupresourcesConnection {
  """
  A list of edges which contains the `Travelgroupresource` and cursor to aid in pagination.
  """
  edges: [TravelgroupresourcesEdge!]!

  """A list of `Travelgroupresource` objects."""
  nodes: [Travelgroupresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Travelgroupresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Travelgroupresource` edge in the connection."""
type TravelgroupresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Travelgroupresource` at the end of the edge."""
  node: Travelgroupresource!
}

"""Methods to use when ordering `Travelgroupresource`."""
enum TravelgroupresourcesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  AT_TOURIST_RESOURCE_ASC
  AT_TOURIST_RESOURCE_DESC
  AT_TRIP_OFFER_RESOURCE_ASC
  AT_TRIP_OFFER_RESOURCE_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

type Tripofferresource implements Node {
  """Reads a single `Agency` that is related to this `Tripofferresource`."""
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Agencytripoffer`."""
  agencytripoffersByTripOfferId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytripofferCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytripoffersConnection!
  atAgency: Int
  atGuide: Int

  """
  Reads a single `Bookingcalendar` that is related to this `Tripofferresource`.
  """
  availableAtCalendar: Bookingcalendar
  availableAtCalendarId: Int!

  """
  Reads a single `Usertable` that is related to this `Tripofferresource`.
  """
  createdBy: Usertable
  createdById: Int!
  destinationId: [Int]!

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideResponsible: Guide
  guideResponsibleId: Int!

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideSecondary: Guide
  guideSecondaryId: Int
  id: Int!
  isActive: Boolean
  isPublic: Boolean!
  isSigned: Boolean!
  lastModified: Datetime

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """
  Reads a single `Priceinfo` that is related to this `Tripofferresource`.
  """
  priceInfo: Priceinfo
  priceInfoId: Int!

  """
  Reads a single `Publisher` that is related to this `Tripofferresource`.
  """
  publisher: Publisher
  publisherId: Int!
  timeCreated: Datetime

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByAtTripOfferResource(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesConnection!
  tripOfferName: String
}

"""
A condition to be used against `Tripofferresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TripofferresourceCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `availableAtCalendarId` field."""
  availableAtCalendarId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `guideResponsibleId` field."""
  guideResponsibleId: Int

  """Checks for equality with the object’s `guideSecondaryId` field."""
  guideSecondaryId: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `priceInfoId` field."""
  priceInfoId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Tripofferresource`"""
input TripofferresourceInput {
  atAgency: Int
  atGuide: Int
  availableAtCalendarId: Int!
  createdById: Int!
  destinationId: [Int]!
  guideResponsibleId: Int!
  guideSecondaryId: Int
  id: Int
  isActive: Boolean
  isPublic: Boolean
  isSigned: Boolean!
  lastModified: Datetime
  priceInfoId: Int!
  publisherId: Int!
  timeCreated: Datetime
  tripOfferName: String
}

"""
Represents an update to a `Tripofferresource`. Fields that are set will be updated.
"""
input TripofferresourcePatch {
  atAgency: Int
  atGuide: Int
  availableAtCalendarId: Int
  createdById: Int
  destinationId: [Int]
  guideResponsibleId: Int
  guideSecondaryId: Int
  id: Int
  isActive: Boolean
  isPublic: Boolean
  isSigned: Boolean
  lastModified: Datetime
  priceInfoId: Int
  publisherId: Int
  timeCreated: Datetime
  tripOfferName: String
}

"""A connection to a list of `Tripofferresource` values."""
type TripofferresourcesConnection {
  """
  A list of edges which contains the `Tripofferresource` and cursor to aid in pagination.
  """
  edges: [TripofferresourcesEdge!]!

  """A list of `Tripofferresource` objects."""
  nodes: [Tripofferresource!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Tripofferresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Tripofferresource` edge in the connection."""
type TripofferresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Tripofferresource` at the end of the edge."""
  node: Tripofferresource!
}

"""Methods to use when ordering `Tripofferresource`."""
enum TripofferresourcesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AVAILABLE_AT_CALENDAR_ID_ASC
  AVAILABLE_AT_CALENDAR_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  GUIDE_RESPONSIBLE_ID_ASC
  GUIDE_RESPONSIBLE_ID_DESC
  GUIDE_SECONDARY_ID_ASC
  GUIDE_SECONDARY_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRICE_INFO_ID_ASC
  PRICE_INFO_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
}

type Triptype implements Node {
  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByAtAgencyAndTripTypeName(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection!

  """Reads a single `Agency` that is related to this `Triptype`."""
  agencyByAtAgency: Agency
  atAgency: Int!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByAtAgencyAndTripTypeName(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByAtAgencyAndTripTypeName(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection!
  id: Int!
  lastModified: Datetime

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  timeCreated: Datetime
  tripTypeName: String!
}

"""
A condition to be used against `Triptype` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input TriptypeCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Triptype`"""
input TriptypeInput {
  atAgency: Int!
  id: Int
  lastModified: Datetime
  timeCreated: Datetime
  tripTypeName: String!
}

"""
Represents an update to a `Triptype`. Fields that are set will be updated.
"""
input TriptypePatch {
  atAgency: Int
  id: Int
  lastModified: Datetime
  timeCreated: Datetime
  tripTypeName: String
}

"""A connection to a list of `Triptype` values."""
type TriptypesConnection {
  """
  A list of edges which contains the `Triptype` and cursor to aid in pagination.
  """
  edges: [TriptypesEdge!]!

  """A list of `Triptype` objects."""
  nodes: [Triptype!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Triptype` you could get from the connection."""
  totalCount: Int!
}

"""A `Triptype` edge in the connection."""
type TriptypesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Triptype` at the end of the edge."""
  node: Triptype!
}

"""Methods to use when ordering `Triptype`."""
enum TriptypesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""All input for the `updateAccomodationresourceByNodeId` mutation."""
input UpdateAccomodationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Accomodationresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Accomodationresource` being updated.
  """
  patch: AccomodationresourcePatch!
}

"""All input for the `updateAccomodationresource` mutation."""
input UpdateAccomodationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Accomodationresource` being updated.
  """
  patch: AccomodationresourcePatch!
}

"""The output of our update `Accomodationresource` mutation."""
type UpdateAccomodationresourcePayload {
  """The `Accomodationresource` that was updated by this mutation."""
  accomodationresource: Accomodationresource

  """An edge for our `Accomodationresource`. May be used by Relay 1."""
  accomodationresourceEdge(
    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesEdge

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  address: Contact

  """
  Reads a single `Agency` that is related to this `Accomodationresource`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  contact: Contact

  """
  Reads a single `Usertable` that is related to this `Accomodationresource`.
  """
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Accomodationresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Bookingcalendar` that is related to this `Accomodationresource`.
  """
  locationCalendar: Bookingcalendar

  """
  Reads a single `Presentation` that is related to this `Accomodationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Publisher` that is related to this `Accomodationresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Triptype` that is related to this `Accomodationresource`.
  """
  triptypeByAtAgencyAndTripTypeName: Triptype
}

"""All input for the `updateAccountByNodeId` mutation."""
input UpdateAccountByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Account` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Account` being updated.
  """
  patch: AccountPatch!
}

"""All input for the `updateAccountingByNodeId` mutation."""
input UpdateAccountingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Accounting` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Accounting` being updated.
  """
  patch: AccountingPatch!
}

"""All input for the `updateAccounting` mutation."""
input UpdateAccountingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Accounting` being updated.
  """
  patch: AccountingPatch!
}

"""The output of our update `Accounting` mutation."""
type UpdateAccountingPayload {
  """The `Accounting` that was updated by this mutation."""
  accounting: Accounting

  """An edge for our `Accounting`. May be used by Relay 1."""
  accountingEdge(
    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountingsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Publisher` that is related to this `Accounting`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAccount` mutation."""
input UpdateAccountInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Account` being updated.
  """
  patch: AccountPatch!
}

"""The output of our update `Account` mutation."""
type UpdateAccountPayload {
  """The `Account` that was updated by this mutation."""
  account: Account

  """An edge for our `Account`. May be used by Relay 1."""
  accountEdge(
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgencyaccomodationByNodeId` mutation."""
input UpdateAgencyaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyaccomodation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyaccomodation` being updated.
  """
  patch: AgencyaccomodationPatch!
}

"""All input for the `updateAgencyaccomodation` mutation."""
input UpdateAgencyaccomodationInput {
  accomodationId: Int!
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyaccomodation` being updated.
  """
  patch: AgencyaccomodationPatch!
}

"""The output of our update `Agencyaccomodation` mutation."""
type UpdateAgencyaccomodationPayload {
  """
  Reads a single `Accomodationresource` that is related to this `Agencyaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Agencyaccomodation`."""
  agency: Agency

  """The `Agencyaccomodation` that was updated by this mutation."""
  agencyaccomodation: Agencyaccomodation

  """An edge for our `Agencyaccomodation`. May be used by Relay 1."""
  agencyaccomodationEdge(
    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyaccomodationsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgencybidByNodeId` mutation."""
input UpdateAgencybidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencybid` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencybid` being updated.
  """
  patch: AgencybidPatch!
}

"""All input for the `updateAgencybid` mutation."""
input UpdateAgencybidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Agencybid` being updated.
  """
  patch: AgencybidPatch!
}

"""The output of our update `Agencybid` mutation."""
type UpdateAgencybidPayload {
  """Reads a single `Agency` that is related to this `Agencybid`."""
  agency: Agency

  """The `Agencybid` that was updated by this mutation."""
  agencybid: Agencybid

  """An edge for our `Agencybid`. May be used by Relay 1."""
  agencybidEdge(
    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencybidsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgencyByNodeId` mutation."""
input UpdateAgencyByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agency` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agency` being updated.
  """
  patch: AgencyPatch!
}

"""All input for the `updateAgencydealByNodeId` mutation."""
input UpdateAgencydealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencydeal` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencydeal` being updated.
  """
  patch: AgencydealPatch!
}

"""All input for the `updateAgencydeal` mutation."""
input UpdateAgencydealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Agencydeal` being updated.
  """
  patch: AgencydealPatch!
}

"""The output of our update `Agencydeal` mutation."""
type UpdateAgencydealPayload {
  """The `Agencydeal` that was updated by this mutation."""
  agencydeal: Agencydeal

  """An edge for our `Agencydeal`. May be used by Relay 1."""
  agencydealEdge(
    """The method to use when ordering `Agencydeal`."""
    orderBy: [AgencydealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencydealsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgencyeventByNodeId` mutation."""
input UpdateAgencyeventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyevent` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyevent` being updated.
  """
  patch: AgencyeventPatch!
}

"""All input for the `updateAgencyevent` mutation."""
input UpdateAgencyeventInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  eventId: Int!

  """
  An object where the defined keys will be set on the `Agencyevent` being updated.
  """
  patch: AgencyeventPatch!
}

"""The output of our update `Agencyevent` mutation."""
type UpdateAgencyeventPayload {
  """Reads a single `Agency` that is related to this `Agencyevent`."""
  agency: Agency

  """The `Agencyevent` that was updated by this mutation."""
  agencyevent: Agencyevent

  """An edge for our `Agencyevent`. May be used by Relay 1."""
  agencyeventEdge(
    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyeventsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Eventresource` that is related to this `Agencyevent`."""
  event: Eventresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgencyfavoriteByNodeId` mutation."""
input UpdateAgencyfavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyfavorite` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyfavorite` being updated.
  """
  patch: AgencyfavoritePatch!
}

"""All input for the `updateAgencyfavorite` mutation."""
input UpdateAgencyfavoriteInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyfavorite` being updated.
  """
  patch: AgencyfavoritePatch!
  resourceId: Int!
  resourceType: Resourcetype!
}

"""The output of our update `Agencyfavorite` mutation."""
type UpdateAgencyfavoritePayload {
  """Reads a single `Agency` that is related to this `Agencyfavorite`."""
  agencyByAtAgency: Agency

  """The `Agencyfavorite` that was updated by this mutation."""
  agencyfavorite: Agencyfavorite

  """An edge for our `Agencyfavorite`. May be used by Relay 1."""
  agencyfavoriteEdge(
    """The method to use when ordering `Agencyfavorite`."""
    orderBy: [AgencyfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyfavoritesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgencyguideByNodeId` mutation."""
input UpdateAgencyguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyguide` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyguide` being updated.
  """
  patch: AgencyguidePatch!
}

"""All input for the `updateAgencyguide` mutation."""
input UpdateAgencyguideInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  guideId: Int!

  """
  An object where the defined keys will be set on the `Agencyguide` being updated.
  """
  patch: AgencyguidePatch!
}

"""The output of our update `Agencyguide` mutation."""
type UpdateAgencyguidePayload {
  """Reads a single `Agency` that is related to this `Agencyguide`."""
  agency: Agency

  """The `Agencyguide` that was updated by this mutation."""
  agencyguide: Agencyguide

  """An edge for our `Agencyguide`. May be used by Relay 1."""
  agencyguideEdge(
    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyguidesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Guide` that is related to this `Agencyguide`."""
  guide: Guide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgencyhostByNodeId` mutation."""
input UpdateAgencyhostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyhost` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyhost` being updated.
  """
  patch: AgencyhostPatch!
}

"""All input for the `updateAgencyhost` mutation."""
input UpdateAgencyhostInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  hostId: Int!

  """
  An object where the defined keys will be set on the `Agencyhost` being updated.
  """
  patch: AgencyhostPatch!
}

"""The output of our update `Agencyhost` mutation."""
type UpdateAgencyhostPayload {
  """Reads a single `Agency` that is related to this `Agencyhost`."""
  agency: Agency

  """The `Agencyhost` that was updated by this mutation."""
  agencyhost: Agencyhost

  """An edge for our `Agencyhost`. May be used by Relay 1."""
  agencyhostEdge(
    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyhostsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Hostresource` that is related to this `Agencyhost`."""
  host: Hostresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgency` mutation."""
input UpdateAgencyInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Agency` being updated.
  """
  patch: AgencyPatch!
}

"""All input for the `updateAgencyofferByNodeId` mutation."""
input UpdateAgencyofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyoffer` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyoffer` being updated.
  """
  patch: AgencyofferPatch!
}

"""All input for the `updateAgencyoffer` mutation."""
input UpdateAgencyofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Agencyoffer` being updated.
  """
  patch: AgencyofferPatch!
}

"""The output of our update `Agencyoffer` mutation."""
type UpdateAgencyofferPayload {
  """The `Agencyoffer` that was updated by this mutation."""
  agencyoffer: Agencyoffer

  """An edge for our `Agencyoffer`. May be used by Relay 1."""
  agencyofferEdge(
    """The method to use when ordering `Agencyoffer`."""
    orderBy: [AgencyoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyoffersEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""The output of our update `Agency` mutation."""
type UpdateAgencyPayload {
  """The `Agency` that was updated by this mutation."""
  agency: Agency

  """Reads a single `Agencydeal` that is related to this `Agency`."""
  agencyDeal: Agencydeal

  """An edge for our `Agency`. May be used by Relay 1."""
  agencyEdge(
    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesEdge

  """Reads a single `Agencymedialibrary` that is related to this `Agency`."""
  agencyMediaLibrary: Agencymedialibrary

  """Reads a single `Agencyoffer` that is related to this `Agency`."""
  agencyOffer: Agencyoffer

  """Reads a single `Bookingcalendar` that is related to this `Agency`."""
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Agency`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Agency`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Agency`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgencyreviewByNodeId` mutation."""
input UpdateAgencyreviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyreview` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyreview` being updated.
  """
  patch: AgencyreviewPatch!
}

"""All input for the `updateAgencyreview` mutation."""
input UpdateAgencyreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Agencyreview` being updated.
  """
  patch: AgencyreviewPatch!
}

"""The output of our update `Agencyreview` mutation."""
type UpdateAgencyreviewPayload {
  """Reads a single `Agency` that is related to this `Agencyreview`."""
  agencyByAgencyIdTarget: Agency

  """The `Agencyreview` that was updated by this mutation."""
  agencyreview: Agencyreview

  """An edge for our `Agencyreview`. May be used by Relay 1."""
  agencyreviewEdge(
    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Agencyreview`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Agencyreview`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAgencytouristByNodeId` mutation."""
input UpdateAgencytouristByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytourist` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencytourist` being updated.
  """
  patch: AgencytouristPatch!
}

"""All input for the `updateAgencytourist` mutation."""
input UpdateAgencytouristInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencytourist` being updated.
  """
  patch: AgencytouristPatch!
  touristId: Int!
}

"""The output of our update `Agencytourist` mutation."""
type UpdateAgencytouristPayload {
  """Reads a single `Agency` that is related to this `Agencytourist`."""
  agency: Agency

  """The `Agencytourist` that was updated by this mutation."""
  agencytourist: Agencytourist

  """An edge for our `Agencytourist`. May be used by Relay 1."""
  agencytouristEdge(
    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytouristsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Touristresource` that is related to this `Agencytourist`.
  """
  tourist: Touristresource
}

"""All input for the `updateAgencytransportByNodeId` mutation."""
input UpdateAgencytransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytransport` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencytransport` being updated.
  """
  patch: AgencytransportPatch!
}

"""All input for the `updateAgencytransport` mutation."""
input UpdateAgencytransportInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencytransport` being updated.
  """
  patch: AgencytransportPatch!
  transportId: Int!
}

"""The output of our update `Agencytransport` mutation."""
type UpdateAgencytransportPayload {
  """Reads a single `Agency` that is related to this `Agencytransport`."""
  agency: Agency

  """The `Agencytransport` that was updated by this mutation."""
  agencytransport: Agencytransport

  """An edge for our `Agencytransport`. May be used by Relay 1."""
  agencytransportEdge(
    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytransportsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Transportresource` that is related to this `Agencytransport`.
  """
  transport: Transportresource
}

"""All input for the `updateAgencytravelgroupByNodeId` mutation."""
input UpdateAgencytravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytravelgroup` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencytravelgroup` being updated.
  """
  patch: AgencytravelgroupPatch!
}

"""All input for the `updateAgencytravelgroup` mutation."""
input UpdateAgencytravelgroupInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencytravelgroup` being updated.
  """
  patch: AgencytravelgroupPatch!
  travelGroupId: Int!
}

"""The output of our update `Agencytravelgroup` mutation."""
type UpdateAgencytravelgroupPayload {
  """Reads a single `Agency` that is related to this `Agencytravelgroup`."""
  agency: Agency

  """The `Agencytravelgroup` that was updated by this mutation."""
  agencytravelgroup: Agencytravelgroup

  """An edge for our `Agencytravelgroup`. May be used by Relay 1."""
  agencytravelgroupEdge(
    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytravelgroupsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Travelgroupresource` that is related to this `Agencytravelgroup`.
  """
  travelGroup: Travelgroupresource
}

"""All input for the `updateAgencytripofferByNodeId` mutation."""
input UpdateAgencytripofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytripoffer` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencytripoffer` being updated.
  """
  patch: AgencytripofferPatch!
}

"""All input for the `updateAgencytripoffer` mutation."""
input UpdateAgencytripofferInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencytripoffer` being updated.
  """
  patch: AgencytripofferPatch!
  tripOfferId: Int!
}

"""The output of our update `Agencytripoffer` mutation."""
type UpdateAgencytripofferPayload {
  """Reads a single `Agency` that is related to this `Agencytripoffer`."""
  agency: Agency

  """The `Agencytripoffer` that was updated by this mutation."""
  agencytripoffer: Agencytripoffer

  """An edge for our `Agencytripoffer`. May be used by Relay 1."""
  agencytripofferEdge(
    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytripoffersEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Tripofferresource` that is related to this `Agencytripoffer`.
  """
  tripOffer: Tripofferresource
}

"""All input for the `updateAgencyuserByNodeId` mutation."""
input UpdateAgencyuserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyuser` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyuser` being updated.
  """
  patch: AgencyuserPatch!
}

"""All input for the `updateAgencyuser` mutation."""
input UpdateAgencyuserInput {
  agencyId: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyuser` being updated.
  """
  patch: AgencyuserPatch!
  userId: Int!
}

"""The output of our update `Agencyuser` mutation."""
type UpdateAgencyuserPayload {
  """Reads a single `Agency` that is related to this `Agencyuser`."""
  agency: Agency

  """The `Agencyuser` that was updated by this mutation."""
  agencyuser: Agencyuser

  """An edge for our `Agencyuser`. May be used by Relay 1."""
  agencyuserEdge(
    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyusersEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Agencyuser`."""
  user: Usertable
}

"""All input for the `updateAssocaccomodationByNodeId` mutation."""
input UpdateAssocaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocaccomodation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assocaccomodation` being updated.
  """
  patch: AssocaccomodationPatch!
}

"""All input for the `updateAssocaccomodation` mutation."""
input UpdateAssocaccomodationInput {
  accomodationId: Int!
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assocaccomodation` being updated.
  """
  patch: AssocaccomodationPatch!
}

"""The output of our update `Assocaccomodation` mutation."""
type UpdateAssocaccomodationPayload {
  """
  Reads a single `Accomodationresource` that is related to this `Assocaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Assocaccomodation`."""
  agencyByAtAgency: Agency

  """The `Assocaccomodation` that was updated by this mutation."""
  assocaccomodation: Assocaccomodation

  """An edge for our `Assocaccomodation`. May be used by Relay 1."""
  assocaccomodationEdge(
    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocaccomodationsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAssocdestinationByNodeId` mutation."""
input UpdateAssocdestinationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocdestination` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assocdestination` being updated.
  """
  patch: AssocdestinationPatch!
}

"""All input for the `updateAssocdestination` mutation."""
input UpdateAssocdestinationInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  destinationId: Int!

  """
  An object where the defined keys will be set on the `Assocdestination` being updated.
  """
  patch: AssocdestinationPatch!
}

"""The output of our update `Assocdestination` mutation."""
type UpdateAssocdestinationPayload {
  """Reads a single `Agency` that is related to this `Assocdestination`."""
  agencyByAtAgency: Agency

  """The `Assocdestination` that was updated by this mutation."""
  assocdestination: Assocdestination

  """An edge for our `Assocdestination`. May be used by Relay 1."""
  assocdestinationEdge(
    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocdestinationsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Destinationresource` that is related to this `Assocdestination`.
  """
  destination: Destinationresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAssoceventByNodeId` mutation."""
input UpdateAssoceventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocevent` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assocevent` being updated.
  """
  patch: AssoceventPatch!
}

"""All input for the `updateAssocevent` mutation."""
input UpdateAssoceventInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  eventId: Int!

  """
  An object where the defined keys will be set on the `Assocevent` being updated.
  """
  patch: AssoceventPatch!
}

"""The output of our update `Assocevent` mutation."""
type UpdateAssoceventPayload {
  """Reads a single `Agency` that is related to this `Assocevent`."""
  agencyByAtAgency: Agency

  """The `Assocevent` that was updated by this mutation."""
  assocevent: Assocevent

  """An edge for our `Assocevent`. May be used by Relay 1."""
  assoceventEdge(
    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoceventsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Eventresource` that is related to this `Assocevent`."""
  event: Eventresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAssocguideByNodeId` mutation."""
input UpdateAssocguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocguide` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assocguide` being updated.
  """
  patch: AssocguidePatch!
}

"""All input for the `updateAssocguide` mutation."""
input UpdateAssocguideInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  guideId: Int!

  """
  An object where the defined keys will be set on the `Assocguide` being updated.
  """
  patch: AssocguidePatch!
}

"""The output of our update `Assocguide` mutation."""
type UpdateAssocguidePayload {
  """Reads a single `Agency` that is related to this `Assocguide`."""
  agencyByAtAgency: Agency

  """The `Assocguide` that was updated by this mutation."""
  assocguide: Assocguide

  """An edge for our `Assocguide`. May be used by Relay 1."""
  assocguideEdge(
    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocguidesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Guideresource` that is related to this `Assocguide`."""
  guide: Guideresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAssochostByNodeId` mutation."""
input UpdateAssochostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assochost` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assochost` being updated.
  """
  patch: AssochostPatch!
}

"""All input for the `updateAssochost` mutation."""
input UpdateAssochostInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  hostId: Int!

  """
  An object where the defined keys will be set on the `Assochost` being updated.
  """
  patch: AssochostPatch!
}

"""The output of our update `Assochost` mutation."""
type UpdateAssochostPayload {
  """Reads a single `Agency` that is related to this `Assochost`."""
  agencyByAtAgency: Agency

  """The `Assochost` that was updated by this mutation."""
  assochost: Assochost

  """An edge for our `Assochost`. May be used by Relay 1."""
  assochostEdge(
    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssochostsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Hostresource` that is related to this `Assochost`."""
  host: Hostresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateAssoctransportByNodeId` mutation."""
input UpdateAssoctransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assoctransport` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assoctransport` being updated.
  """
  patch: AssoctransportPatch!
}

"""All input for the `updateAssoctransport` mutation."""
input UpdateAssoctransportInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assoctransport` being updated.
  """
  patch: AssoctransportPatch!
  transportId: Int!
}

"""The output of our update `Assoctransport` mutation."""
type UpdateAssoctransportPayload {
  """Reads a single `Agency` that is related to this `Assoctransport`."""
  agencyByAtAgency: Agency

  """The `Assoctransport` that was updated by this mutation."""
  assoctransport: Assoctransport

  """An edge for our `Assoctransport`. May be used by Relay 1."""
  assoctransportEdge(
    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctransportsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Transportresource` that is related to this `Assoctransport`.
  """
  transport: Transportresource
}

"""All input for the `updateAssoctravelgroupByNodeId` mutation."""
input UpdateAssoctravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assoctravelgroup` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assoctravelgroup` being updated.
  """
  patch: AssoctravelgroupPatch!
}

"""All input for the `updateAssoctravelgroup` mutation."""
input UpdateAssoctravelgroupInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assoctravelgroup` being updated.
  """
  patch: AssoctravelgroupPatch!
  travelGroupId: Int!
}

"""The output of our update `Assoctravelgroup` mutation."""
type UpdateAssoctravelgroupPayload {
  """Reads a single `Agency` that is related to this `Assoctravelgroup`."""
  agencyByAtAgency: Agency

  """The `Assoctravelgroup` that was updated by this mutation."""
  assoctravelgroup: Assoctravelgroup

  """An edge for our `Assoctravelgroup`. May be used by Relay 1."""
  assoctravelgroupEdge(
    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctravelgroupsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Travelgroupresource` that is related to this `Assoctravelgroup`.
  """
  travelGroup: Travelgroupresource
}

"""All input for the `updateAuctioninfoByNodeId` mutation."""
input UpdateAuctioninfoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Auctioninfo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Auctioninfo` being updated.
  """
  patch: AuctioninfoPatch!
}

"""All input for the `updateAuctioninfo` mutation."""
input UpdateAuctioninfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Auctioninfo` being updated.
  """
  patch: AuctioninfoPatch!
}

"""The output of our update `Auctioninfo` mutation."""
type UpdateAuctioninfoPayload {
  """The `Auctioninfo` that was updated by this mutation."""
  auctioninfo: Auctioninfo

  """An edge for our `Auctioninfo`. May be used by Relay 1."""
  auctioninfoEdge(
    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosEdge

  """Reads a single `Bid` that is related to this `Auctioninfo`."""
  bid: Bid

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Auctioninfo`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Auctioninfo`."""
  publishedBy: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateBidByNodeId` mutation."""
input UpdateBidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Bid` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Bid` being updated.
  """
  patch: BidPatch!
}

"""All input for the `updateBid` mutation."""
input UpdateBidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Bid` being updated.
  """
  patch: BidPatch!
}

"""The output of our update `Bid` mutation."""
type UpdateBidPayload {
  """The `Bid` that was updated by this mutation."""
  bid: Bid

  """An edge for our `Bid`. May be used by Relay 1."""
  bidEdge(
    """The method to use when ordering `Bid`."""
    orderBy: [BidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BidsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateBookingcalendarByNodeId` mutation."""
input UpdateBookingcalendarByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Bookingcalendar` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Bookingcalendar` being updated.
  """
  patch: BookingcalendarPatch!
}

"""All input for the `updateBookingcalendar` mutation."""
input UpdateBookingcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Bookingcalendar` being updated.
  """
  patch: BookingcalendarPatch!
}

"""The output of our update `Bookingcalendar` mutation."""
type UpdateBookingcalendarPayload {
  """The `Bookingcalendar` that was updated by this mutation."""
  bookingcalendar: Bookingcalendar

  """An edge for our `Bookingcalendar`. May be used by Relay 1."""
  bookingcalendarEdge(
    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BookingcalendarsEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Bookingcalendar`."""
  createdBy: Usertable

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateCalendarentryByNodeId` mutation."""
input UpdateCalendarentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Calendarentry` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Calendarentry` being updated.
  """
  patch: CalendarentryPatch!
}

"""All input for the `updateCalendarentry` mutation."""
input UpdateCalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Calendarentry` being updated.
  """
  patch: CalendarentryPatch!
}

"""The output of our update `Calendarentry` mutation."""
type UpdateCalendarentryPayload {
  """The `Calendarentry` that was updated by this mutation."""
  calendarentry: Calendarentry

  """An edge for our `Calendarentry`. May be used by Relay 1."""
  calendarentryEdge(
    """The method to use when ordering `Calendarentry`."""
    orderBy: [CalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarentriesEdge

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateCommandlogentryByNodeId` mutation."""
input UpdateCommandlogentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Commandlogentry` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Commandlogentry` being updated.
  """
  patch: CommandlogentryPatch!
}

"""All input for the `updateCommandlogentry` mutation."""
input UpdateCommandlogentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Commandlogentry` being updated.
  """
  patch: CommandlogentryPatch!
}

"""The output of our update `Commandlogentry` mutation."""
type UpdateCommandlogentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Commandlogentry` that was updated by this mutation."""
  commandlogentry: Commandlogentry

  """An edge for our `Commandlogentry`. May be used by Relay 1."""
  commandlogentryEdge(
    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CommandlogentriesEdge

  """Reads a single `Publisher` that is related to this `Commandlogentry`."""
  publisherByAtPublisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateContactByNodeId` mutation."""
input UpdateContactByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Contact` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Contact` being updated.
  """
  patch: ContactPatch!
}

"""All input for the `updateContact` mutation."""
input UpdateContactInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Contact` being updated.
  """
  patch: ContactPatch!
}

"""The output of our update `Contact` mutation."""
type UpdateContactPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Contact` that was updated by this mutation."""
  contact: Contact

  """An edge for our `Contact`. May be used by Relay 1."""
  contactEdge(
    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ContactsEdge

  """Reads a single `Usertable` that is related to this `Contact`."""
  createdBy: Usertable

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateDestinationresourceByNodeId` mutation."""
input UpdateDestinationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Destinationresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Destinationresource` being updated.
  """
  patch: DestinationresourcePatch!
}

"""All input for the `updateDestinationresource` mutation."""
input UpdateDestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Destinationresource` being updated.
  """
  patch: DestinationresourcePatch!
}

"""The output of our update `Destinationresource` mutation."""
type UpdateDestinationresourcePayload {
  """
  Reads a single `Bookingcalendar` that is related to this `Destinationresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Destinationresource`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  createdBy: Usertable

  """The `Destinationresource` that was updated by this mutation."""
  destinationresource: Destinationresource

  """An edge for our `Destinationresource`. May be used by Relay 1."""
  destinationresourceEdge(
    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesEdge

  """
  Reads a single `Geocoding` that is related to this `Destinationresource`.
  """
  geoCoding: Geocoding

  """
  Reads a single `Presentation` that is related to this `Destinationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Priceinfo` that is related to this `Destinationresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Publisher` that is related to this `Destinationresource`.
  """
  publishedBy: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Triptype` that is related to this `Destinationresource`.
  """
  triptypeByAtAgencyAndTripTypeName: Triptype

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  usertableByLastModifiedBy: Usertable
}

"""All input for the `updateEventresourceByNodeId` mutation."""
input UpdateEventresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Eventresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Eventresource` being updated.
  """
  patch: EventresourcePatch!
}

"""All input for the `updateEventresource` mutation."""
input UpdateEventresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Eventresource` being updated.
  """
  patch: EventresourcePatch!
}

"""The output of our update `Eventresource` mutation."""
type UpdateEventresourcePayload {
  """
  Reads a single `Bookingcalendar` that is related to this `Eventresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Eventresource`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Eventresource`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Eventresource`."""
  createdBy: Usertable

  """The `Eventresource` that was updated by this mutation."""
  eventresource: Eventresource

  """An edge for our `Eventresource`. May be used by Relay 1."""
  eventresourceEdge(
    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesEdge

  """Reads a single `Guide` that is related to this `Eventresource`."""
  guideByAtGuide: Guide

  """Reads a single `Contact` that is related to this `Eventresource`."""
  locationAddress: Contact

  """Reads a single `Presentation` that is related to this `Eventresource`."""
  presentation: Presentation

  """Reads a single `Publisher` that is related to this `Eventresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Triptype` that is related to this `Eventresource`."""
  triptypeByAtAgencyAndTripTypeName: Triptype
}

"""All input for the `updateGeocodingByNodeId` mutation."""
input UpdateGeocodingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Geocoding` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Geocoding` being updated.
  """
  patch: GeocodingPatch!
}

"""All input for the `updateGeocoding` mutation."""
input UpdateGeocodingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Geocoding` being updated.
  """
  patch: GeocodingPatch!
}

"""The output of our update `Geocoding` mutation."""
type UpdateGeocodingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Geocoding`."""
  createdBy: Usertable

  """The `Geocoding` that was updated by this mutation."""
  geocoding: Geocoding

  """An edge for our `Geocoding`. May be used by Relay 1."""
  geocodingEdge(
    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GeocodingsEdge

  """Reads a single `Publisher` that is related to this `Geocoding`."""
  publishedBy: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateGuidebidByNodeId` mutation."""
input UpdateGuidebidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidebid` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guidebid` being updated.
  """
  patch: GuidebidPatch!
}

"""All input for the `updateGuidebid` mutation."""
input UpdateGuidebidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Guidebid` being updated.
  """
  patch: GuidebidPatch!
}

"""The output of our update `Guidebid` mutation."""
type UpdateGuidebidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidebid` that was updated by this mutation."""
  guidebid: Guidebid

  """An edge for our `Guidebid`. May be used by Relay 1."""
  guidebidEdge(
    """The method to use when ordering `Guidebid`."""
    orderBy: [GuidebidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidebidsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateGuideByNodeId` mutation."""
input UpdateGuideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guide` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guide` being updated.
  """
  patch: GuidePatch!
}

"""All input for the `updateGuidedealByNodeId` mutation."""
input UpdateGuidedealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidedeal` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guidedeal` being updated.
  """
  patch: GuidedealPatch!
}

"""All input for the `updateGuidedeal` mutation."""
input UpdateGuidedealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Guidedeal` being updated.
  """
  patch: GuidedealPatch!
}

"""The output of our update `Guidedeal` mutation."""
type UpdateGuidedealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidedeal` that was updated by this mutation."""
  guidedeal: Guidedeal

  """An edge for our `Guidedeal`. May be used by Relay 1."""
  guidedealEdge(
    """The method to use when ordering `Guidedeal`."""
    orderBy: [GuidedealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidedealsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateGuidefavoriteByNodeId` mutation."""
input UpdateGuidefavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidefavorite` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guidefavorite` being updated.
  """
  patch: GuidefavoritePatch!
}

"""All input for the `updateGuidefavorite` mutation."""
input UpdateGuidefavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Guidefavorite` being updated.
  """
  patch: GuidefavoritePatch!
}

"""The output of our update `Guidefavorite` mutation."""
type UpdateGuidefavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidefavorite` that was updated by this mutation."""
  guidefavorite: Guidefavorite

  """An edge for our `Guidefavorite`. May be used by Relay 1."""
  guidefavoriteEdge(
    """The method to use when ordering `Guidefavorite`."""
    orderBy: [GuidefavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidefavoritesEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateGuide` mutation."""
input UpdateGuideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Guide` being updated.
  """
  patch: GuidePatch!
}

"""All input for the `updateGuideofferByNodeId` mutation."""
input UpdateGuideofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guideoffer` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guideoffer` being updated.
  """
  patch: GuideofferPatch!
}

"""All input for the `updateGuideoffer` mutation."""
input UpdateGuideofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Guideoffer` being updated.
  """
  patch: GuideofferPatch!
}

"""The output of our update `Guideoffer` mutation."""
type UpdateGuideofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guideoffer` that was updated by this mutation."""
  guideoffer: Guideoffer

  """An edge for our `Guideoffer`. May be used by Relay 1."""
  guideofferEdge(
    """The method to use when ordering `Guideoffer`."""
    orderBy: [GuideoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideoffersEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""The output of our update `Guide` mutation."""
type UpdateGuidePayload {
  """Reads a single `Agency` that is related to this `Guide`."""
  agencyByAtAgency: Agency

  """Reads a single `Bookingcalendar` that is related to this `Guide`."""
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Guide`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Guide`."""
  createdBy: Usertable

  """The `Guide` that was updated by this mutation."""
  guide: Guide

  """Reads a single `Guidebid` that is related to this `Guide`."""
  guideBid: Guidebid

  """Reads a single `Guidedeal` that is related to this `Guide`."""
  guideDeal: Guidedeal

  """An edge for our `Guide`. May be used by Relay 1."""
  guideEdge(
    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesEdge

  """Reads a single `Guidefavorite` that is related to this `Guide`."""
  guideFavorite: Guidefavorite

  """Reads a single `Guideoffer` that is related to this `Guide`."""
  guideOffer: Guideoffer

  """Reads a single `Languagelevel` that is related to this `Guide`."""
  languageLevel: Languagelevel

  """Reads a single `Publisher` that is related to this `Guide`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateGuideresourceByNodeId` mutation."""
input UpdateGuideresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guideresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guideresource` being updated.
  """
  patch: GuideresourcePatch!
}

"""All input for the `updateGuideresource` mutation."""
input UpdateGuideresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Guideresource` being updated.
  """
  patch: GuideresourcePatch!
}

"""The output of our update `Guideresource` mutation."""
type UpdateGuideresourcePayload {
  """Reads a single `Agency` that is related to this `Guideresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Guideresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Guideresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guideresource`."""
  guideByAtGuide: Guide

  """The `Guideresource` that was updated by this mutation."""
  guideresource: Guideresource

  """An edge for our `Guideresource`. May be used by Relay 1."""
  guideresourceEdge(
    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesEdge

  """Reads a single `Priceinfo` that is related to this `Guideresource`."""
  priceInfo: Priceinfo

  """Reads a single `Publisher` that is related to this `Guideresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Timerange` that is related to this `Guideresource`."""
  timeRange: Timerange
}

"""All input for the `updateGuidereviewByNodeId` mutation."""
input UpdateGuidereviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidereview` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guidereview` being updated.
  """
  patch: GuidereviewPatch!
}

"""All input for the `updateGuidereview` mutation."""
input UpdateGuidereviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Guidereview` being updated.
  """
  patch: GuidereviewPatch!
}

"""The output of our update `Guidereview` mutation."""
type UpdateGuidereviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Guidereview`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guidereview`."""
  guideByGuideIdTarget: Guide

  """The `Guidereview` that was updated by this mutation."""
  guidereview: Guidereview

  """An edge for our `Guidereview`. May be used by Relay 1."""
  guidereviewEdge(
    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsEdge

  """Reads a single `Publisher` that is related to this `Guidereview`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateHostresourceByNodeId` mutation."""
input UpdateHostresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Hostresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Hostresource` being updated.
  """
  patch: HostresourcePatch!
}

"""All input for the `updateHostresource` mutation."""
input UpdateHostresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Hostresource` being updated.
  """
  patch: HostresourcePatch!
}

"""The output of our update `Hostresource` mutation."""
type UpdateHostresourcePayload {
  """
  Reads a single `Accomodationresource` that is related to this `Hostresource`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Contact` that is related to this `Hostresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Hostresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Hostresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Hostresource`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Hostresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Hostresource`."""
  guideByAtGuide: Guide

  """The `Hostresource` that was updated by this mutation."""
  hostresource: Hostresource

  """An edge for our `Hostresource`. May be used by Relay 1."""
  hostresourceEdge(
    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesEdge

  """Reads a single `Presentation` that is related to this `Hostresource`."""
  presentation: Presentation

  """Reads a single `Publisher` that is related to this `Hostresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateLanguagelevelByNodeId` mutation."""
input UpdateLanguagelevelByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Languagelevel` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Languagelevel` being updated.
  """
  patch: LanguagelevelPatch!
}

"""All input for the `updateLanguagelevel` mutation."""
input UpdateLanguagelevelInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Languagelevel` being updated.
  """
  patch: LanguagelevelPatch!
}

"""The output of our update `Languagelevel` mutation."""
type UpdateLanguagelevelPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Languagelevel`."""
  createdBy: Usertable

  """The `Languagelevel` that was updated by this mutation."""
  languagelevel: Languagelevel

  """An edge for our `Languagelevel`. May be used by Relay 1."""
  languagelevelEdge(
    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LanguagelevelsEdge

  """Reads a single `Publisher` that is related to this `Languagelevel`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateMediadestinationresourceByNodeId` mutation."""
input UpdateMediadestinationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Mediadestinationresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
}

"""All input for the `updateMediadestinationresource` mutation."""
input UpdateMediadestinationresourceInput {
  atAgency: Int!
  atDestination: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
}

"""The output of our update `Mediadestinationresource` mutation."""
type UpdateMediadestinationresourcePayload {
  """
  Reads a single `Agency` that is related to this `Mediadestinationresource`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Destinationresource` that is related to this `Mediadestinationresource`.
  """
  destinationresourceByAtDestination: Destinationresource

  """The `Mediadestinationresource` that was updated by this mutation."""
  mediadestinationresource: Mediadestinationresource

  """An edge for our `Mediadestinationresource`. May be used by Relay 1."""
  mediadestinationresourceEdge(
    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesEdge

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByGuideImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery1: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery10: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery2: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery3: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery4: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery5: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery6: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery7: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery8: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery9: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMainImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMapImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByThumbnailImage: Medialocation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Usertable` that is related to this `Mediadestinationresource`.
  """
  usertableByLastModifiedBy: Usertable
}

"""All input for the `updateMedialocationByNodeId` mutation."""
input UpdateMedialocationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Medialocation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
}

"""All input for the `updateMedialocation` mutation."""
input UpdateMedialocationInput {
  atAgency: Int!
  atResource: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  mediaLocationPlacement: Medialocationplacement!

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
}

"""The output of our update `Medialocation` mutation."""
type UpdateMedialocationPayload {
  """Reads a single `Agency` that is related to this `Medialocation`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Medialocation` that was updated by this mutation."""
  medialocation: Medialocation

  """An edge for our `Medialocation`. May be used by Relay 1."""
  medialocationEdge(
    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MedialocationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateOrganizationByNodeId` mutation."""
input UpdateOrganizationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Organization` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Organization` being updated.
  """
  patch: OrganizationPatch!
}

"""All input for the `updateOrganization` mutation."""
input UpdateOrganizationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!

  """
  An object where the defined keys will be set on the `Organization` being updated.
  """
  patch: OrganizationPatch!
}

"""All input for the `updateOrganizationInvitationByNodeId` mutation."""
input UpdateOrganizationInvitationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `OrganizationInvitation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `OrganizationInvitation` being updated.
  """
  patch: OrganizationInvitationPatch!
}

"""All input for the `updateOrganizationInvitation` mutation."""
input UpdateOrganizationInvitationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!

  """
  An object where the defined keys will be set on the `OrganizationInvitation` being updated.
  """
  patch: OrganizationInvitationPatch!
}

"""The output of our update `OrganizationInvitation` mutation."""
type UpdateOrganizationInvitationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Organization` that is related to this `OrganizationInvitation`.
  """
  organization: Organization

  """The `OrganizationInvitation` that was updated by this mutation."""
  organizationInvitation: OrganizationInvitation

  """An edge for our `OrganizationInvitation`. May be used by Relay 1."""
  organizationInvitationEdge(
    """The method to use when ordering `OrganizationInvitation`."""
    orderBy: [OrganizationInvitationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationInvitationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `User` that is related to this `OrganizationInvitation`.
  """
  user: User
}

"""All input for the `updateOrganizationMembershipByNodeId` mutation."""
input UpdateOrganizationMembershipByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `OrganizationMembership` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `OrganizationMembership` being updated.
  """
  patch: OrganizationMembershipPatch!
}

"""All input for the `updateOrganizationMembership` mutation."""
input UpdateOrganizationMembershipInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!

  """
  An object where the defined keys will be set on the `OrganizationMembership` being updated.
  """
  patch: OrganizationMembershipPatch!
}

"""The output of our update `OrganizationMembership` mutation."""
type UpdateOrganizationMembershipPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Organization` that is related to this `OrganizationMembership`.
  """
  organization: Organization

  """The `OrganizationMembership` that was updated by this mutation."""
  organizationMembership: OrganizationMembership

  """An edge for our `OrganizationMembership`. May be used by Relay 1."""
  organizationMembershipEdge(
    """The method to use when ordering `OrganizationMembership`."""
    orderBy: [OrganizationMembershipsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationMembershipsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `User` that is related to this `OrganizationMembership`.
  """
  user: User
}

"""The output of our update `Organization` mutation."""
type UpdateOrganizationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Organization` that was updated by this mutation."""
  organization: Organization

  """An edge for our `Organization`. May be used by Relay 1."""
  organizationEdge(
    """The method to use when ordering `Organization`."""
    orderBy: [OrganizationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updatePostByNodeId` mutation."""
input UpdatePostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Post` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Post` being updated.
  """
  patch: PostPatch!
}

"""All input for the `updatePost` mutation."""
input UpdatePostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The primary key for the `Post`."""
  id: Int!

  """
  An object where the defined keys will be set on the `Post` being updated.
  """
  patch: PostPatch!
}

"""The output of our update `Post` mutation."""
type UpdatePostPayload {
  """Reads a single `User` that is related to this `Post`."""
  author: User

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Post` that was updated by this mutation."""
  post: Post

  """An edge for our `Post`. May be used by Relay 1."""
  postEdge(
    """The method to use when ordering `Post`."""
    orderBy: [PostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PostsEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Topic` that is related to this `Post`."""
  topicByTopic: Topic
}

"""All input for the `updatePresentationByNodeId` mutation."""
input UpdatePresentationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Presentation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Presentation` being updated.
  """
  patch: PresentationPatch!
}

"""All input for the `updatePresentation` mutation."""
input UpdatePresentationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Presentation` being updated.
  """
  patch: PresentationPatch!
}

"""The output of our update `Presentation` mutation."""
type UpdatePresentationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Presentation`."""
  createdBy: Usertable

  """The `Presentation` that was updated by this mutation."""
  presentation: Presentation

  """An edge for our `Presentation`. May be used by Relay 1."""
  presentationEdge(
    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PresentationsEdge

  """Reads a single `Publisher` that is related to this `Presentation`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updatePriceinfoByNodeId` mutation."""
input UpdatePriceinfoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Priceinfo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Priceinfo` being updated.
  """
  patch: PriceinfoPatch!
}

"""All input for the `updatePriceinfo` mutation."""
input UpdatePriceinfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Priceinfo` being updated.
  """
  patch: PriceinfoPatch!
}

"""The output of our update `Priceinfo` mutation."""
type UpdatePriceinfoPayload {
  """Reads a single `Bid` that is related to this `Priceinfo`."""
  bid: Bid

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Priceinfo`."""
  createdBy: Usertable

  """The `Priceinfo` that was updated by this mutation."""
  priceinfo: Priceinfo

  """An edge for our `Priceinfo`. May be used by Relay 1."""
  priceinfoEdge(
    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosEdge

  """Reads a single `Publisher` that is related to this `Priceinfo`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updatePublisherByNodeId` mutation."""
input UpdatePublisherByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Publisher` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Publisher` being updated.
  """
  patch: PublisherPatch!
}

"""All input for the `updatePublisher` mutation."""
input UpdatePublisherInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Publisher` being updated.
  """
  patch: PublisherPatch!
}

"""The output of our update `Publisher` mutation."""
type UpdatePublisherPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Publisher`."""
  createdBy: Usertable

  """The `Publisher` that was updated by this mutation."""
  publisher: Publisher

  """An edge for our `Publisher`. May be used by Relay 1."""
  publisherEdge(
    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]
  ): PublishersEdge

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

"""All input for the `updateReviewByNodeId` mutation."""
input UpdateReviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Review` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Review` being updated.
  """
  patch: ReviewPatch!
}

"""All input for the `updateReview` mutation."""
input UpdateReviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Review` being updated.
  """
  patch: ReviewPatch!
}

"""The output of our update `Review` mutation."""
type UpdateReviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Review`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Review`."""
  publisher: Publisher

  """Reads a single `Publisher` that is related to this `Review`."""
  publisherByPublisherTarget: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Review` that was updated by this mutation."""
  review: Review

  """An edge for our `Review`. May be used by Relay 1."""
  reviewEdge(
    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsEdge
}

"""All input for the `updateRoomcalendarByNodeId` mutation."""
input UpdateRoomcalendarByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomcalendar` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Roomcalendar` being updated.
  """
  patch: RoomcalendarPatch!
}

"""All input for the `updateRoomcalendarentryByNodeId` mutation."""
input UpdateRoomcalendarentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomcalendarentry` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Roomcalendarentry` being updated.
  """
  patch: RoomcalendarentryPatch!
}

"""All input for the `updateRoomcalendarentry` mutation."""
input UpdateRoomcalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Roomcalendarentry` being updated.
  """
  patch: RoomcalendarentryPatch!
}

"""The output of our update `Roomcalendarentry` mutation."""
type UpdateRoomcalendarentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Roomcalendar` that is related to this `Roomcalendarentry`.
  """
  roomcalendarByAtRoomCalendar: Roomcalendar

  """The `Roomcalendarentry` that was updated by this mutation."""
  roomcalendarentry: Roomcalendarentry

  """An edge for our `Roomcalendarentry`. May be used by Relay 1."""
  roomcalendarentryEdge(
    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarentriesEdge
}

"""All input for the `updateRoomcalendar` mutation."""
input UpdateRoomcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Roomcalendar` being updated.
  """
  patch: RoomcalendarPatch!
}

"""The output of our update `Roomcalendar` mutation."""
type UpdateRoomcalendarPayload {
  """
  Reads a single `Roomcalendarentry` that is related to this `Roomcalendar`.
  """
  calendarentry: Roomcalendarentry

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Roomcalendar`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Roomcalendar`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Roomcalendar` that was updated by this mutation."""
  roomcalendar: Roomcalendar

  """An edge for our `Roomcalendar`. May be used by Relay 1."""
  roomcalendarEdge(
    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsEdge
}

"""All input for the `updateRoomlistByNodeId` mutation."""
input UpdateRoomlistByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomlist` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Roomlist` being updated.
  """
  patch: RoomlistPatch!
}

"""All input for the `updateRoomlist` mutation."""
input UpdateRoomlistInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Roomlist` being updated.
  """
  patch: RoomlistPatch!
}

"""The output of our update `Roomlist` mutation."""
type UpdateRoomlistPayload {
  """
  Reads a single `Accomodationresource` that is related to this `Roomlist`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Roomcalendar` that is related to this `Roomlist`."""
  roomCalendar: Roomcalendar

  """The `Roomlist` that was updated by this mutation."""
  roomlist: Roomlist

  """An edge for our `Roomlist`. May be used by Relay 1."""
  roomlistEdge(
    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomlistsEdge
}

"""
All input for the `updateSimilarbytriptypeaccomodationByNodeId` mutation.
"""
input UpdateSimilarbytriptypeaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeaccomodation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypeaccomodation` being updated.
  """
  patch: SimilarbytriptypeaccomodationPatch!
}

"""All input for the `updateSimilarbytriptypeaccomodation` mutation."""
input UpdateSimilarbytriptypeaccomodationInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypeaccomodation` being updated.
  """
  patch: SimilarbytriptypeaccomodationPatch!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypeaccomodation` mutation."""
type UpdateSimilarbytriptypeaccomodationPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeaccomodation`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypeaccomodation` that was updated by this mutation."""
  similarbytriptypeaccomodation: Similarbytriptypeaccomodation

  """
  An edge for our `Similarbytriptypeaccomodation`. May be used by Relay 1.
  """
  similarbytriptypeaccomodationEdge(
    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeaccomodationsEdge
}

"""
All input for the `updateSimilarbytriptypedestinationByNodeId` mutation.
"""
input UpdateSimilarbytriptypedestinationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypedestination` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypedestination` being updated.
  """
  patch: SimilarbytriptypedestinationPatch!
}

"""All input for the `updateSimilarbytriptypedestination` mutation."""
input UpdateSimilarbytriptypedestinationInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypedestination` being updated.
  """
  patch: SimilarbytriptypedestinationPatch!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypedestination` mutation."""
type UpdateSimilarbytriptypedestinationPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypedestination`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypedestination` that was updated by this mutation."""
  similarbytriptypedestination: Similarbytriptypedestination

  """
  An edge for our `Similarbytriptypedestination`. May be used by Relay 1.
  """
  similarbytriptypedestinationEdge(
    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypedestinationsEdge
}

"""All input for the `updateSimilarbytriptypeeventByNodeId` mutation."""
input UpdateSimilarbytriptypeeventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeevent` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypeevent` being updated.
  """
  patch: SimilarbytriptypeeventPatch!
}

"""All input for the `updateSimilarbytriptypeevent` mutation."""
input UpdateSimilarbytriptypeeventInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypeevent` being updated.
  """
  patch: SimilarbytriptypeeventPatch!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypeevent` mutation."""
type UpdateSimilarbytriptypeeventPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeevent`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypeevent` that was updated by this mutation."""
  similarbytriptypeevent: Similarbytriptypeevent

  """An edge for our `Similarbytriptypeevent`. May be used by Relay 1."""
  similarbytriptypeeventEdge(
    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeeventsEdge
}

"""All input for the `updateSimilarbytriptypeguideByNodeId` mutation."""
input UpdateSimilarbytriptypeguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeguide` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypeguide` being updated.
  """
  patch: SimilarbytriptypeguidePatch!
}

"""All input for the `updateSimilarbytriptypeguide` mutation."""
input UpdateSimilarbytriptypeguideInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypeguide` being updated.
  """
  patch: SimilarbytriptypeguidePatch!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypeguide` mutation."""
type UpdateSimilarbytriptypeguidePayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypeguide`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypeguide` that was updated by this mutation."""
  similarbytriptypeguide: Similarbytriptypeguide

  """An edge for our `Similarbytriptypeguide`. May be used by Relay 1."""
  similarbytriptypeguideEdge(
    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeguidesEdge
}

"""All input for the `updateSimilarbytriptypehostByNodeId` mutation."""
input UpdateSimilarbytriptypehostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypehost` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypehost` being updated.
  """
  patch: SimilarbytriptypehostPatch!
}

"""All input for the `updateSimilarbytriptypehost` mutation."""
input UpdateSimilarbytriptypehostInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypehost` being updated.
  """
  patch: SimilarbytriptypehostPatch!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypehost` mutation."""
type UpdateSimilarbytriptypehostPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypehost`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypehost` that was updated by this mutation."""
  similarbytriptypehost: Similarbytriptypehost

  """An edge for our `Similarbytriptypehost`. May be used by Relay 1."""
  similarbytriptypehostEdge(
    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypehostsEdge
}

"""All input for the `updateSimilarbytriptypetransportByNodeId` mutation."""
input UpdateSimilarbytriptypetransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypetransport` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypetransport` being updated.
  """
  patch: SimilarbytriptypetransportPatch!
}

"""All input for the `updateSimilarbytriptypetransport` mutation."""
input UpdateSimilarbytriptypetransportInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypetransport` being updated.
  """
  patch: SimilarbytriptypetransportPatch!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypetransport` mutation."""
type UpdateSimilarbytriptypetransportPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypetransport`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypetransport` that was updated by this mutation."""
  similarbytriptypetransport: Similarbytriptypetransport

  """An edge for our `Similarbytriptypetransport`. May be used by Relay 1."""
  similarbytriptypetransportEdge(
    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetransportsEdge
}

"""
All input for the `updateSimilarbytriptypetravelgroupByNodeId` mutation.
"""
input UpdateSimilarbytriptypetravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypetravelgroup` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypetravelgroup` being updated.
  """
  patch: SimilarbytriptypetravelgroupPatch!
}

"""All input for the `updateSimilarbytriptypetravelgroup` mutation."""
input UpdateSimilarbytriptypetravelgroupInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypetravelgroup` being updated.
  """
  patch: SimilarbytriptypetravelgroupPatch!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypetravelgroup` mutation."""
type UpdateSimilarbytriptypetravelgroupPayload {
  """
  Reads a single `Agency` that is related to this `Similarbytriptypetravelgroup`.
  """
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Similarbytriptypetravelgroup` that was updated by this mutation."""
  similarbytriptypetravelgroup: Similarbytriptypetravelgroup

  """
  An edge for our `Similarbytriptypetravelgroup`. May be used by Relay 1.
  """
  similarbytriptypetravelgroupEdge(
    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetravelgroupsEdge
}

"""All input for the `updateTimerangeByNodeId` mutation."""
input UpdateTimerangeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Timerange` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Timerange` being updated.
  """
  patch: TimerangePatch!
}

"""All input for the `updateTimerange` mutation."""
input UpdateTimerangeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Timerange` being updated.
  """
  patch: TimerangePatch!
}

"""The output of our update `Timerange` mutation."""
type UpdateTimerangePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Timerange` that was updated by this mutation."""
  timerange: Timerange

  """An edge for our `Timerange`. May be used by Relay 1."""
  timerangeEdge(
    """The method to use when ordering `Timerange`."""
    orderBy: [TimerangesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TimerangesEdge
}

"""All input for the `updateTopicByNodeId` mutation."""
input UpdateTopicByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Topic` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Topic` being updated.
  """
  patch: TopicPatch!
}

"""All input for the `updateTopic` mutation."""
input UpdateTopicInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Topic` being updated.
  """
  patch: TopicPatch!
  title: String!
}

"""The output of our update `Topic` mutation."""
type UpdateTopicPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Topic` that was updated by this mutation."""
  topic: Topic

  """An edge for our `Topic`. May be used by Relay 1."""
  topicEdge(
    """The method to use when ordering `Topic`."""
    orderBy: [TopicsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TopicsEdge
}

"""All input for the `updateTouristbidByNodeId` mutation."""
input UpdateTouristbidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristbid` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristbid` being updated.
  """
  patch: TouristbidPatch!
}

"""All input for the `updateTouristbid` mutation."""
input UpdateTouristbidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Touristbid` being updated.
  """
  patch: TouristbidPatch!
}

"""The output of our update `Touristbid` mutation."""
type UpdateTouristbidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristbid` that was updated by this mutation."""
  touristbid: Touristbid

  """An edge for our `Touristbid`. May be used by Relay 1."""
  touristbidEdge(
    """The method to use when ordering `Touristbid`."""
    orderBy: [TouristbidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristbidsEdge
}

"""All input for the `updateTouristByNodeId` mutation."""
input UpdateTouristByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tourist` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Tourist` being updated.
  """
  patch: TouristPatch!
}

"""All input for the `updateTouristdealByNodeId` mutation."""
input UpdateTouristdealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristdeal` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristdeal` being updated.
  """
  patch: TouristdealPatch!
}

"""All input for the `updateTouristdeal` mutation."""
input UpdateTouristdealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Touristdeal` being updated.
  """
  patch: TouristdealPatch!
}

"""The output of our update `Touristdeal` mutation."""
type UpdateTouristdealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristdeal` that was updated by this mutation."""
  touristdeal: Touristdeal

  """An edge for our `Touristdeal`. May be used by Relay 1."""
  touristdealEdge(
    """The method to use when ordering `Touristdeal`."""
    orderBy: [TouristdealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristdealsEdge
}

"""All input for the `updateTouristfavoriteByNodeId` mutation."""
input UpdateTouristfavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristfavorite` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristfavorite` being updated.
  """
  patch: TouristfavoritePatch!
}

"""All input for the `updateTouristfavorite` mutation."""
input UpdateTouristfavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Touristfavorite` being updated.
  """
  patch: TouristfavoritePatch!
}

"""The output of our update `Touristfavorite` mutation."""
type UpdateTouristfavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristfavorite` that was updated by this mutation."""
  touristfavorite: Touristfavorite

  """An edge for our `Touristfavorite`. May be used by Relay 1."""
  touristfavoriteEdge(
    """The method to use when ordering `Touristfavorite`."""
    orderBy: [TouristfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristfavoritesEdge
}

"""All input for the `updateTourist` mutation."""
input UpdateTouristInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Tourist` being updated.
  """
  patch: TouristPatch!
}

"""All input for the `updateTouristofferByNodeId` mutation."""
input UpdateTouristofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristoffer` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristoffer` being updated.
  """
  patch: TouristofferPatch!
}

"""All input for the `updateTouristoffer` mutation."""
input UpdateTouristofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Touristoffer` being updated.
  """
  patch: TouristofferPatch!
}

"""The output of our update `Touristoffer` mutation."""
type UpdateTouristofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristoffer` that was updated by this mutation."""
  touristoffer: Touristoffer

  """An edge for our `Touristoffer`. May be used by Relay 1."""
  touristofferEdge(
    """The method to use when ordering `Touristoffer`."""
    orderBy: [TouristoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristoffersEdge
}

"""The output of our update `Tourist` mutation."""
type UpdateTouristPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Tourist`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Tourist`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Tourist`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Tourist` that was updated by this mutation."""
  tourist: Tourist

  """Reads a single `Touristbid` that is related to this `Tourist`."""
  touristBid: Touristbid

  """Reads a single `Touristdeal` that is related to this `Tourist`."""
  touristDeal: Touristdeal

  """An edge for our `Tourist`. May be used by Relay 1."""
  touristEdge(
    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsEdge

  """Reads a single `Touristfavorite` that is related to this `Tourist`."""
  touristFavorite: Touristfavorite

  """Reads a single `Touristoffer` that is related to this `Tourist`."""
  touristOffer: Touristoffer
}

"""All input for the `updateTouristresourceByNodeId` mutation."""
input UpdateTouristresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristresource` being updated.
  """
  patch: TouristresourcePatch!
}

"""All input for the `updateTouristresource` mutation."""
input UpdateTouristresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Touristresource` being updated.
  """
  patch: TouristresourcePatch!
}

"""The output of our update `Touristresource` mutation."""
type UpdateTouristresourcePayload {
  """Reads a single `Agency` that is related to this `Touristresource`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Touristresource`."""
  contact: Contact

  """Reads a single `Usertable` that is related to this `Touristresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Touristresource`."""
  guideByAtGuide: Guide

  """Reads a single `Priceinfo` that is related to this `Touristresource`."""
  priceInfo: Priceinfo

  """Reads a single `Publisher` that is related to this `Touristresource`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Touristresource` that was updated by this mutation."""
  touristresource: Touristresource

  """An edge for our `Touristresource`. May be used by Relay 1."""
  touristresourceEdge(
    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesEdge

  """
  Reads a single `Travelgroupresource` that is related to this `Touristresource`.
  """
  travelgroupresourceByAtTravelGroup: Travelgroupresource

  """
  Reads a single `Bookingcalendar` that is related to this `Touristresource`.
  """
  travellingCalendar: Bookingcalendar
}

"""All input for the `updateTouristreviewByNodeId` mutation."""
input UpdateTouristreviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristreview` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristreview` being updated.
  """
  patch: TouristreviewPatch!
}

"""All input for the `updateTouristreview` mutation."""
input UpdateTouristreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Touristreview` being updated.
  """
  patch: TouristreviewPatch!
}

"""The output of our update `Touristreview` mutation."""
type UpdateTouristreviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Usertable` that is related to this `Touristreview`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Touristreview`."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Tourist` that is related to this `Touristreview`."""
  touristByTouristIdTarget: Tourist

  """The `Touristreview` that was updated by this mutation."""
  touristreview: Touristreview

  """An edge for our `Touristreview`. May be used by Relay 1."""
  touristreviewEdge(
    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsEdge
}

"""All input for the `updateTransportresourceByNodeId` mutation."""
input UpdateTransportresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Transportresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Transportresource` being updated.
  """
  patch: TransportresourcePatch!
}

"""All input for the `updateTransportresource` mutation."""
input UpdateTransportresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Transportresource` being updated.
  """
  patch: TransportresourcePatch!
}

"""The output of our update `Transportresource` mutation."""
type UpdateTransportresourcePayload {
  """Reads a single `Contact` that is related to this `Transportresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Transportresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Transportresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Contact` that is related to this `Transportresource`."""
  contact: Contact

  """
  Reads a single `Usertable` that is related to this `Transportresource`.
  """
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Transportresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Presentation` that is related to this `Transportresource`.
  """
  presentation: Presentation

  """
  Reads a single `Publisher` that is related to this `Transportresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Transportresource` that was updated by this mutation."""
  transportresource: Transportresource

  """An edge for our `Transportresource`. May be used by Relay 1."""
  transportresourceEdge(
    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesEdge
}

"""All input for the `updateTravelgroupresourceByNodeId` mutation."""
input UpdateTravelgroupresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Travelgroupresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Travelgroupresource` being updated.
  """
  patch: TravelgroupresourcePatch!
}

"""All input for the `updateTravelgroupresource` mutation."""
input UpdateTravelgroupresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Travelgroupresource` being updated.
  """
  patch: TravelgroupresourcePatch!
}

"""The output of our update `Travelgroupresource` mutation."""
type UpdateTravelgroupresourcePayload {
  """Reads a single `Agency` that is related to this `Travelgroupresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Travelgroupresource`.
  """
  bookingCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Contact` that is related to this `Travelgroupresource`.
  """
  contact: Contact

  """
  Reads a single `Usertable` that is related to this `Travelgroupresource`.
  """
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Travelgroupresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Publisher` that is related to this `Travelgroupresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Touristresource` that is related to this `Travelgroupresource`.
  """
  touristresourceByAtTouristResource: Touristresource

  """The `Travelgroupresource` that was updated by this mutation."""
  travelgroupresource: Travelgroupresource

  """An edge for our `Travelgroupresource`. May be used by Relay 1."""
  travelgroupresourceEdge(
    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesEdge

  """
  Reads a single `Tripofferresource` that is related to this `Travelgroupresource`.
  """
  tripofferresourceByAtTripOfferResource: Tripofferresource
}

"""All input for the `updateTripofferresourceByNodeId` mutation."""
input UpdateTripofferresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tripofferresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Tripofferresource` being updated.
  """
  patch: TripofferresourcePatch!
}

"""All input for the `updateTripofferresource` mutation."""
input UpdateTripofferresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!

  """
  An object where the defined keys will be set on the `Tripofferresource` being updated.
  """
  patch: TripofferresourcePatch!
}

"""The output of our update `Tripofferresource` mutation."""
type UpdateTripofferresourcePayload {
  """Reads a single `Agency` that is related to this `Tripofferresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Tripofferresource`.
  """
  availableAtCalendar: Bookingcalendar

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Reads a single `Usertable` that is related to this `Tripofferresource`.
  """
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideResponsible: Guide

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideSecondary: Guide

  """
  Reads a single `Priceinfo` that is related to this `Tripofferresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Publisher` that is related to this `Tripofferresource`.
  """
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Tripofferresource` that was updated by this mutation."""
  tripofferresource: Tripofferresource

  """An edge for our `Tripofferresource`. May be used by Relay 1."""
  tripofferresourceEdge(
    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesEdge
}

"""All input for the `updateTriptypeByNodeId` mutation."""
input UpdateTriptypeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Triptype` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Triptype` being updated.
  """
  patch: TriptypePatch!
}

"""All input for the `updateTriptype` mutation."""
input UpdateTriptypeInput {
  atAgency: Int!

  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Triptype` being updated.
  """
  patch: TriptypePatch!
  tripTypeName: String!
}

"""The output of our update `Triptype` mutation."""
type UpdateTriptypePayload {
  """Reads a single `Agency` that is related to this `Triptype`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `Triptype` that was updated by this mutation."""
  triptype: Triptype

  """An edge for our `Triptype`. May be used by Relay 1."""
  triptypeEdge(
    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TriptypesEdge
}

"""All input for the `updateUserAuthenticationByNodeId` mutation."""
input UpdateUserAuthenticationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UserAuthentication` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `UserAuthentication` being updated.
  """
  patch: UserAuthenticationPatch!
}

"""All input for the `updateUserAuthentication` mutation."""
input UpdateUserAuthenticationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!

  """
  An object where the defined keys will be set on the `UserAuthentication` being updated.
  """
  patch: UserAuthenticationPatch!
}

"""The output of our update `UserAuthentication` mutation."""
type UpdateUserAuthenticationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserAuthentication`."""
  user: User

  """The `UserAuthentication` that was updated by this mutation."""
  userAuthentication: UserAuthentication
}

"""All input for the `updateUserByNodeId` mutation."""
input UpdateUserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `User` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `User` being updated.
  """
  patch: UserPatch!
}

"""All input for the `updateUserEmailByNodeId` mutation."""
input UpdateUserEmailByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UserEmail` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `UserEmail` being updated.
  """
  patch: UserEmailPatch!
}

"""All input for the `updateUserEmail` mutation."""
input UpdateUserEmailInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!

  """
  An object where the defined keys will be set on the `UserEmail` being updated.
  """
  patch: UserEmailPatch!
}

"""The output of our update `UserEmail` mutation."""
type UpdateUserEmailPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserEmail`."""
  user: User

  """The `UserEmail` that was updated by this mutation."""
  userEmail: UserEmail

  """An edge for our `UserEmail`. May be used by Relay 1."""
  userEmailEdge(
    """The method to use when ordering `UserEmail`."""
    orderBy: [UserEmailsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserEmailsEdge
}

"""All input for the `updateUserFeedPostByNodeId` mutation."""
input UpdateUserFeedPostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UserFeedPost` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `UserFeedPost` being updated.
  """
  patch: UserFeedPostPatch!
}

"""All input for the `updateUserFeedPost` mutation."""
input UpdateUserFeedPostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """An identifier for this entry in the feed."""
  id: Int!

  """
  An object where the defined keys will be set on the `UserFeedPost` being updated.
  """
  patch: UserFeedPostPatch!
}

"""The output of our update `UserFeedPost` mutation."""
type UpdateUserFeedPostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Post` that is related to this `UserFeedPost`."""
  post: Post

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UserFeedPost`."""
  user: User

  """The `UserFeedPost` that was updated by this mutation."""
  userFeedPost: UserFeedPost

  """An edge for our `UserFeedPost`. May be used by Relay 1."""
  userFeedPostEdge(
    """The method to use when ordering `UserFeedPost`."""
    orderBy: [UserFeedPostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserFeedPostsEdge
}

"""All input for the `updateUser` mutation."""
input UpdateUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """Unique identifier for the user."""
  id: UUID!

  """
  An object where the defined keys will be set on the `User` being updated.
  """
  patch: UserPatch!
}

"""The output of our update `User` mutation."""
type UpdateUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """The `User` that was updated by this mutation."""
  user: User

  """An edge for our `User`. May be used by Relay 1."""
  userEdge(
    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersEdge
}

"""All input for the `updateUsertableByNodeId` mutation."""
input UpdateUsertableByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Usertable` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Usertable` being updated.
  """
  patch: UsertablePatch!
}

"""All input for the `updateUsertable` mutation."""
input UpdateUsertableInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Usertable` being updated.
  """
  patch: UsertablePatch!
  userEmail: String!
}

"""The output of our update `Usertable` mutation."""
type UpdateUsertablePayload {
  """Reads a single `Account` that is related to this `Usertable`."""
  accountById: Account

  """Reads a single `Agency` that is related to this `Usertable`."""
  agencyByAtAgency: Agency

  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """Reads a single `Guide` that is related to this `Usertable`."""
  guideByAtGuide: Guide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Tourist` that is related to this `Usertable`."""
  touristByAtTourist: Tourist

  """The `Usertable` that was updated by this mutation."""
  usertable: Usertable

  """An edge for our `Usertable`. May be used by Relay 1."""
  usertableEdge(
    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesEdge
}

"""A user who can log in to the application."""
type User implements Node {
  """Reads and enables pagination through a set of `Post`."""
  authoredPosts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Post`."""
    orderBy: [PostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PostsConnection!

  """Optional avatar URL."""
  avatarUrl: String
  createdAt: Datetime!
  hasPassword: Boolean

  """Unique identifier for the user."""
  id: UUID!

  """If true, the user has elevated privileges."""
  isAdmin: Boolean!
  isVerified: Boolean!

  """Public-facing name (or pseudonym) of the user."""
  name: String

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """
  Reads and enables pagination through a set of `OrganizationInvitation`.
  """
  organizationInvitations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: OrganizationInvitationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `OrganizationInvitation`."""
    orderBy: [OrganizationInvitationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationInvitationsConnection!

  """
  Reads and enables pagination through a set of `OrganizationMembership`.
  """
  organizationMemberships(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: OrganizationMembershipCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `OrganizationMembership`."""
    orderBy: [OrganizationMembershipsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OrganizationMembershipsConnection!
  updatedAt: Datetime!

  """Reads and enables pagination through a set of `UserAuthentication`."""
  userAuthenticationsList(
    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserAuthenticationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Skip the first `n` values."""
    offset: Int

    """The method to use when ordering `UserAuthentication`."""
    orderBy: [UserAuthenticationsOrderBy!]
  ): [UserAuthentication!]!

  """Reads and enables pagination through a set of `UserEmail`."""
  userEmails(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserEmailCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `UserEmail`."""
    orderBy: [UserEmailsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserEmailsConnection!

  """Reads and enables pagination through a set of `UserFeedPost`."""
  userFeedPosts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserFeedPostCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `UserFeedPost`."""
    orderBy: [UserFeedPostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserFeedPostsConnection!

  """Public-facing username (or 'handle') of the user."""
  username: String!
}

"""
Contains information about the login providers this user has used, so that they may disconnect them should they wish.
"""
type UserAuthentication implements Node {
  createdAt: Datetime!
  id: UUID!

  """A unique identifier for the user within the login service."""
  identifier: String!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """The login service used, e.g. `twitter` or `github`."""
  service: String!
  updatedAt: Datetime!

  """Reads a single `User` that is related to this `UserAuthentication`."""
  user: User
  userId: UUID!
}

"""
A condition to be used against `UserAuthentication` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input UserAuthenticationCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `service` field."""
  service: String

  """Checks for equality with the object’s `userId` field."""
  userId: UUID
}

"""An input for mutations affecting `UserAuthentication`"""
input UserAuthenticationInput {
  createdAt: Datetime
  id: UUID

  """A unique identifier for the user within the login service."""
  identifier: String!

  """The login service used, e.g. `twitter` or `github`."""
  service: String!
  updatedAt: Datetime
  userId: UUID!
}

"""
Represents an update to a `UserAuthentication`. Fields that are set will be updated.
"""
input UserAuthenticationPatch {
  createdAt: Datetime
  id: UUID

  """A unique identifier for the user within the login service."""
  identifier: String

  """The login service used, e.g. `twitter` or `github`."""
  service: String
  updatedAt: Datetime
  userId: UUID
}

"""Methods to use when ordering `UserAuthentication`."""
enum UserAuthenticationsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SERVICE_ASC
  SERVICE_DESC
  USER_ID_ASC
  USER_ID_DESC
}

"""Information about a user's email address."""
type UserEmail implements Node {
  createdAt: Datetime!

  """The users email address, in `a@b.c` format."""
  email: String!
  id: UUID!
  isPrimary: Boolean!

  """
  True if the user has is_verified their email address (by clicking the link in
  the email we sent them, or logging in with a social login provider), false otherwise.
  """
  isVerified: Boolean!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  updatedAt: Datetime!

  """Reads a single `User` that is related to this `UserEmail`."""
  user: User
  userId: UUID!
}

"""
A condition to be used against `UserEmail` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input UserEmailCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `isPrimary` field."""
  isPrimary: Boolean

  """Checks for equality with the object’s `userId` field."""
  userId: UUID
}

"""An input for mutations affecting `UserEmail`"""
input UserEmailInput {
  createdAt: Datetime

  """The users email address, in `a@b.c` format."""
  email: String!
  id: UUID
  isPrimary: Boolean

  """
  True if the user has is_verified their email address (by clicking the link in
  the email we sent them, or logging in with a social login provider), false otherwise.
  """
  isVerified: Boolean
  updatedAt: Datetime
  userId: UUID
}

"""
Represents an update to a `UserEmail`. Fields that are set will be updated.
"""
input UserEmailPatch {
  createdAt: Datetime

  """The users email address, in `a@b.c` format."""
  email: String
  id: UUID
  isPrimary: Boolean

  """
  True if the user has is_verified their email address (by clicking the link in
  the email we sent them, or logging in with a social login provider), false otherwise.
  """
  isVerified: Boolean
  updatedAt: Datetime
  userId: UUID
}

"""A connection to a list of `UserEmail` values."""
type UserEmailsConnection {
  """
  A list of edges which contains the `UserEmail` and cursor to aid in pagination.
  """
  edges: [UserEmailsEdge!]!

  """A list of `UserEmail` objects."""
  nodes: [UserEmail!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `UserEmail` you could get from the connection."""
  totalCount: Int!
}

"""A `UserEmail` edge in the connection."""
type UserEmailsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UserEmail` at the end of the edge."""
  node: UserEmail!
}

"""Methods to use when ordering `UserEmail`."""
enum UserEmailsOrderBy {
  ID_ASC
  ID_DESC
  IS_PRIMARY_ASC
  IS_PRIMARY_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  USER_ID_ASC
  USER_ID_DESC
}

"""A feed of `Post`s relevant to a particular `User`."""
type UserFeedPost implements Node {
  """The time this feed item was added."""
  createdAt: Datetime!

  """An identifier for this entry in the feed."""
  id: Int!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads a single `Post` that is related to this `UserFeedPost`."""
  post: Post
  postId: Int!

  """Reads a single `User` that is related to this `UserFeedPost`."""
  user: User
  userId: UUID!
}

"""
A condition to be used against `UserFeedPost` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input UserFeedPostCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `postId` field."""
  postId: Int

  """Checks for equality with the object’s `userId` field."""
  userId: UUID
}

"""An input for mutations affecting `UserFeedPost`"""
input UserFeedPostInput {
  """The time this feed item was added."""
  createdAt: Datetime

  """An identifier for this entry in the feed."""
  id: Int
  postId: Int!
  userId: UUID!
}

"""
Represents an update to a `UserFeedPost`. Fields that are set will be updated.
"""
input UserFeedPostPatch {
  """The time this feed item was added."""
  createdAt: Datetime

  """An identifier for this entry in the feed."""
  id: Int
  postId: Int
  userId: UUID
}

"""A connection to a list of `UserFeedPost` values."""
type UserFeedPostsConnection {
  """
  A list of edges which contains the `UserFeedPost` and cursor to aid in pagination.
  """
  edges: [UserFeedPostsEdge!]!

  """A list of `UserFeedPost` objects."""
  nodes: [UserFeedPost!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `UserFeedPost` you could get from the connection."""
  totalCount: Int!
}

"""A `UserFeedPost` edge in the connection."""
type UserFeedPostsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UserFeedPost` at the end of the edge."""
  node: UserFeedPost!
}

"""Methods to use when ordering `UserFeedPost`."""
enum UserFeedPostsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  POST_ID_ASC
  POST_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  USER_ID_ASC
  USER_ID_DESC
}

"""An input for mutations affecting `User`"""
input UserInput {
  """Optional avatar URL."""
  avatarUrl: String
  createdAt: Datetime

  """Unique identifier for the user."""
  id: UUID

  """If true, the user has elevated privileges."""
  isAdmin: Boolean
  isVerified: Boolean

  """Public-facing name (or pseudonym) of the user."""
  name: String
  updatedAt: Datetime

  """Public-facing username (or 'handle') of the user."""
  username: String!
}

"""Represents an update to a `User`. Fields that are set will be updated."""
input UserPatch {
  """Optional avatar URL."""
  avatarUrl: String
  createdAt: Datetime

  """Unique identifier for the user."""
  id: UUID

  """If true, the user has elevated privileges."""
  isAdmin: Boolean
  isVerified: Boolean

  """Public-facing name (or pseudonym) of the user."""
  name: String
  updatedAt: Datetime

  """Public-facing username (or 'handle') of the user."""
  username: String
}

"""A `User` edge in the connection."""
type UsersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `User` at the end of the edge."""
  node: User!
}

"""Methods to use when ordering `User`."""
enum UsersOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  USERNAME_ASC
  USERNAME_DESC
}

type UserSubscriptionPayload {
  event: String
  user: User
}

type Usertable implements Node {
  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesConnection!

  """Reads a single `Account` that is related to this `Usertable`."""
  accountById: Account

  """Reads and enables pagination through a set of `Agency`."""
  agenciesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesConnection!

  """Reads a single `Agency` that is related to this `Usertable`."""
  agencyByAtAgency: Agency

  """Reads and enables pagination through a set of `Agencymedialibrary`."""
  agencymedialibrariesByLastModifiedBy(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencymedialibraryCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]
  ): AgencymedialibrariesConnection!

  """Reads and enables pagination through a set of `Agencyreview`."""
  agencyreviewsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyreviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsConnection!

  """Reads and enables pagination through a set of `Agencyuser`."""
  agencyusersByUserId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyuserCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyusersConnection!
  atAgency: Int
  atGuide: Int
  atTourist: Int

  """Reads and enables pagination through a set of `Auctioninfo`."""
  auctioninfosByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AuctioninfoCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosConnection!

  """Reads and enables pagination through a set of `Bookingcalendar`."""
  bookingcalendarsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: BookingcalendarCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BookingcalendarsConnection!

  """Reads and enables pagination through a set of `Contact`."""
  contactsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ContactCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ContactsConnection!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByLastModifiedBy(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesConnection!
  firstName: String

  """Reads and enables pagination through a set of `Geocoding`."""
  geocodingsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GeocodingCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GeocodingsConnection!

  """Reads a single `Guide` that is related to this `Usertable`."""
  guideByAtGuide: Guide

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Guidereview`."""
  guidereviewsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidereviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsConnection!

  """Reads and enables pagination through a set of `Guide`."""
  guidesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesConnection!
  id: Int!
  isActive: Boolean
  isAdmin: Boolean
  isRomanian: Boolean

  """Reads and enables pagination through a set of `Languagelevel`."""
  languagelevelsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: LanguagelevelCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LanguagelevelsConnection!
  lastName: String

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByLastModifiedBy(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesConnection!

  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!

  """Reads and enables pagination through a set of `Presentation`."""
  presentationsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PresentationCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PresentationsConnection!

  """Reads and enables pagination through a set of `Priceinfo`."""
  priceinfosByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PriceinfoCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosConnection!

  """Reads and enables pagination through a set of `Publisher`."""
  publishersByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PublisherCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]
  ): PublishersConnection!

  """Reads and enables pagination through a set of `Review`."""
  reviewsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ReviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsConnection!

  """Reads and enables pagination through a set of `Roomcalendar`."""
  roomcalendarsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsConnection!
  timeCreated: Datetime

  """Reads a single `Tourist` that is related to this `Usertable`."""
  touristByAtTourist: Tourist

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Touristreview`."""
  touristreviewsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristreviewCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsConnection!

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByCreatedById(
    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition

    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesConnection!
  userEmail: String!
}

"""
A condition to be used against `Usertable` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input UsertableCondition {
  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `atTourist` field."""
  atTourist: Int

  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `userEmail` field."""
  userEmail: String
}

"""An input for mutations affecting `Usertable`"""
input UsertableInput {
  atAgency: Int
  atGuide: Int
  atTourist: Int
  firstName: String
  id: Int!
  isActive: Boolean
  isAdmin: Boolean
  isRomanian: Boolean
  lastName: String
  timeCreated: Datetime
  userEmail: String!
}

"""
Represents an update to a `Usertable`. Fields that are set will be updated.
"""
input UsertablePatch {
  atAgency: Int
  atGuide: Int
  atTourist: Int
  firstName: String
  id: Int
  isActive: Boolean
  isAdmin: Boolean
  isRomanian: Boolean
  lastName: String
  timeCreated: Datetime
  userEmail: String
}

"""A connection to a list of `Usertable` values."""
type UsertablesConnection {
  """
  A list of edges which contains the `Usertable` and cursor to aid in pagination.
  """
  edges: [UsertablesEdge!]!

  """A list of `Usertable` objects."""
  nodes: [Usertable!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Usertable` you could get from the connection."""
  totalCount: Int!
}

"""A `Usertable` edge in the connection."""
type UsertablesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Usertable` at the end of the edge."""
  node: Usertable!
}

"""Methods to use when ordering `Usertable`."""
enum UsertablesOrderBy {
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  AT_TOURIST_ASC
  AT_TOURIST_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  USER_EMAIL_ASC
  USER_EMAIL_DESC
}

"""
A universally unique identifier as defined by [RFC 4122](https://tools.ietf.org/html/rfc4122).
"""
scalar UUID

"""All input for the `verifyEmail` mutation."""
input VerifyEmailInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  token: String!
  userEmailId: UUID!
}

"""The output of our `verifyEmail` mutation."""
type VerifyEmailPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
  success: Boolean
}
