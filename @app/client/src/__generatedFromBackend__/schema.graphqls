"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """The variable name to export this field as."""
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """Specify the store key."""
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

type Accomodationresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  accomodationName: String
  contactId: Int!
  addressId: Int!
  locatedIn: Area
  locationCalendarId: Int!
  tripTypeName: String
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  ownedByAt: Boolean
  presentationId: Int!
  atAgency: Int
  atGuide: Int
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  contact: Contact

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  address: Contact

  """
  Reads a single `Bookingcalendar` that is related to this `Accomodationresource`.
  """
  locationCalendar: Bookingcalendar

  """
  Reads a single `Publisher` that is related to this `Accomodationresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Accomodationresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Presentation` that is related to this `Accomodationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Agency` that is related to this `Accomodationresource`.
  """
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Accomodationresource`."""
  guideByAtGuide: Guide

  """Reads and enables pagination through a set of `Roomlist`."""
  roomlistsByAtAccomodation(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomlistCondition
  ): RoomlistsConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByAtAccomodation(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection!

  """Reads and enables pagination through a set of `Agencyaccomodation`."""
  agencyaccomodationsByAccomodationId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyaccomodationCondition
  ): AgencyaccomodationsConnection!

  """Reads and enables pagination through a set of `Assocaccomodation`."""
  assocaccomodationsByAccomodationId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocaccomodationCondition
  ): AssocaccomodationsConnection!
}

"""
A condition to be used against `Accomodationresource` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input AccomodationresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `addressId` field."""
  addressId: Int

  """Checks for equality with the object’s `locationCalendarId` field."""
  locationCalendarId: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int
}

"""An input for mutations affecting `Accomodationresource`"""
input AccomodationresourceInput {
  id: Int
  accomodationName: String
  contactId: Int!
  addressId: Int!
  locatedIn: Area
  locationCalendarId: Int!
  tripTypeName: String
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  ownedByAt: Boolean
  presentationId: Int!
  atAgency: Int
  atGuide: Int
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Accomodationresource`. Fields that are set will be updated.
"""
input AccomodationresourcePatch {
  id: Int
  accomodationName: String
  contactId: Int
  addressId: Int
  locatedIn: Area
  locationCalendarId: Int
  tripTypeName: String
  publisherId: Int
  createdById: Int
  isActive: Boolean
  ownedByAt: Boolean
  presentationId: Int
  atAgency: Int
  atGuide: Int
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Accomodationresource` values."""
type AccomodationresourcesConnection {
  """A list of `Accomodationresource` objects."""
  nodes: [Accomodationresource!]!

  """
  A list of edges which contains the `Accomodationresource` and cursor to aid in pagination.
  """
  edges: [AccomodationresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Accomodationresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Accomodationresource` edge in the connection."""
type AccomodationresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Accomodationresource` at the end of the edge."""
  node: Accomodationresource!
}

"""Methods to use when ordering `Accomodationresource`."""
enum AccomodationresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  ADDRESS_ID_ASC
  ADDRESS_ID_DESC
  LOCATION_CALENDAR_ID_ASC
  LOCATION_CALENDAR_ID_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Account implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  emailHash: String
  passwordHash: String
  sessionId: String
  logins: Int

  """Reads a single `Usertable` that is related to this `Account`."""
  usertableById: Usertable
}

"""
A condition to be used against `Account` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input AccountCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

type Accounting implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  publisherId: Int!
  paymentHistory: [String]
  abonamentActive: Boolean!
  lastPayment: Date
  lastPaymentAmount: String
  abonamentExpires: Date
  onYearlyPayment: Boolean!
  onFreePeriod: Boolean!
  freePeriodExpires: Date
  isRomanian: Boolean
  isActive: Boolean
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Accounting`."""
  publisher: Publisher
}

"""
A condition to be used against `Accounting` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AccountingCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Accounting`"""
input AccountingInput {
  id: Int
  publisherId: Int!
  paymentHistory: [String]
  abonamentActive: Boolean!
  lastPayment: Date
  lastPaymentAmount: String
  abonamentExpires: Date
  onYearlyPayment: Boolean!
  onFreePeriod: Boolean!
  freePeriodExpires: Date
  isRomanian: Boolean
  isActive: Boolean
  timeCreated: Datetime
}

"""
Represents an update to a `Accounting`. Fields that are set will be updated.
"""
input AccountingPatch {
  id: Int
  publisherId: Int
  paymentHistory: [String]
  abonamentActive: Boolean
  lastPayment: Date
  lastPaymentAmount: String
  abonamentExpires: Date
  onYearlyPayment: Boolean
  onFreePeriod: Boolean
  freePeriodExpires: Date
  isRomanian: Boolean
  isActive: Boolean
  timeCreated: Datetime
}

"""A connection to a list of `Accounting` values."""
type AccountingsConnection {
  """A list of `Accounting` objects."""
  nodes: [Accounting!]!

  """
  A list of edges which contains the `Accounting` and cursor to aid in pagination.
  """
  edges: [AccountingsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Accounting` you could get from the connection."""
  totalCount: Int!
}

"""A `Accounting` edge in the connection."""
type AccountingsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Accounting` at the end of the edge."""
  node: Accounting!
}

"""Methods to use when ordering `Accounting`."""
enum AccountingsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""An input for mutations affecting `Account`"""
input AccountInput {
  id: Int
  emailHash: String
  passwordHash: String
  sessionId: String
  logins: Int
}

"""
Represents an update to a `Account`. Fields that are set will be updated.
"""
input AccountPatch {
  id: Int
  emailHash: String
  passwordHash: String
  sessionId: String
  logins: Int
}

"""A connection to a list of `Account` values."""
type AccountsConnection {
  """A list of `Account` objects."""
  nodes: [Account!]!

  """
  A list of edges which contains the `Account` and cursor to aid in pagination.
  """
  edges: [AccountsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Account` you could get from the connection."""
  totalCount: Int!
}

"""A `Account` edge in the connection."""
type AccountsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Account` at the end of the edge."""
  node: Account!
}

"""Methods to use when ordering `Account`."""
enum AccountsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""A connection to a list of `Agency` values."""
type AgenciesConnection {
  """A list of `Agency` objects."""
  nodes: [Agency!]!

  """
  A list of edges which contains the `Agency` and cursor to aid in pagination.
  """
  edges: [AgenciesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agency` you could get from the connection."""
  totalCount: Int!
}

"""A `Agency` edge in the connection."""
type AgenciesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agency` at the end of the edge."""
  node: Agency!
}

"""Methods to use when ordering `Agency`."""
enum AgenciesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  AGENCY_BID_ID_ASC
  AGENCY_BID_ID_DESC
  AGENCY_FAVORITE_ID_ASC
  AGENCY_FAVORITE_ID_DESC
  AGENCY_OFFER_ID_ASC
  AGENCY_OFFER_ID_DESC
  AGENCY_DEAL_ID_ASC
  AGENCY_DEAL_ID_DESC
  AGENCY_MEDIA_LIBRARY_ID_ASC
  AGENCY_MEDIA_LIBRARY_ID_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agency implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  name: String!
  contactId: Int
  activeInsurance: Boolean!
  insuranceUrl: String
  insuranceExpery: Date
  publisherId: Int
  createdById: Int!
  isActive: Boolean
  isPublic: Boolean
  agencyBidId: Int
  agencyFavoriteId: Int
  agencyOfferId: Int
  agencyDealId: Int
  trustedPartnerIdPool: [Int]
  extendedNetworkIdPool: [Int]
  guideReviewInIdPool: [Int]
  agencyReviewInIdPool: [Int]
  touristReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  touristReviewOutIdPool: [Int]
  agencyMediaLibraryId: Int
  isRomanian: Boolean!
  bookingCalendarId: Int
  specializedAgency: Resourcetype
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Contact` that is related to this `Agency`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Agency`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Agency`."""
  createdBy: Usertable

  """Reads a single `Agencyoffer` that is related to this `Agency`."""
  agencyOffer: Agencyoffer

  """Reads a single `Agencydeal` that is related to this `Agency`."""
  agencyDeal: Agencydeal

  """Reads a single `Agencymedialibrary` that is related to this `Agency`."""
  agencyMediaLibrary: Agencymedialibrary

  """Reads a single `Bookingcalendar` that is related to this `Agency`."""
  bookingCalendar: Bookingcalendar

  """Reads and enables pagination through a set of `Triptype`."""
  triptypesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TriptypeCondition
  ): TriptypesConnection!

  """Reads and enables pagination through a set of `Usertable`."""
  usertablesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsertableCondition
  ): UsertablesConnection!

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition
  ): TripofferresourcesConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Guide`."""
  guidesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Medialocation`."""
  medialocationsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MedialocationCondition
  ): MedialocationsConnection!

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Agencyaccomodation`."""
  agencyaccomodations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyaccomodationCondition
  ): AgencyaccomodationsConnection!

  """Reads and enables pagination through a set of `Agencyevent`."""
  agencyevents(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyeventCondition
  ): AgencyeventsConnection!

  """Reads and enables pagination through a set of `Agencyguide`."""
  agencyguides(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyguideCondition
  ): AgencyguidesConnection!

  """Reads and enables pagination through a set of `Agencyhost`."""
  agencyhosts(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyhostCondition
  ): AgencyhostsConnection!

  """Reads and enables pagination through a set of `Agencytourist`."""
  agencytourists(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytouristCondition
  ): AgencytouristsConnection!

  """Reads and enables pagination through a set of `Agencytransport`."""
  agencytransports(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytransportCondition
  ): AgencytransportsConnection!

  """Reads and enables pagination through a set of `Agencytravelgroup`."""
  agencytravelgroups(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytravelgroupCondition
  ): AgencytravelgroupsConnection!

  """Reads and enables pagination through a set of `Agencytripoffer`."""
  agencytripoffers(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytripofferCondition
  ): AgencytripoffersConnection!

  """Reads and enables pagination through a set of `Agencyuser`."""
  agencyusers(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyuserCondition
  ): AgencyusersConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """Reads and enables pagination through a set of `Agencyreview`."""
  agencyreviewsByAgencyIdTarget(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyreviewCondition
  ): AgencyreviewsConnection!

  """Reads and enables pagination through a set of `Agencybid`."""
  agencybids(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencybidCondition
  ): AgencybidsConnection!

  """Reads and enables pagination through a set of `Agencymedialibrary`."""
  agencymedialibrariesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencymedialibraryCondition
  ): AgencymedialibrariesConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypeaccomodation`.
  """
  similarbytriptypeaccomodationsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeaccomodationCondition
  ): SimilarbytriptypeaccomodationsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypedestination`.
  """
  similarbytriptypedestinationsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypedestinationCondition
  ): SimilarbytriptypedestinationsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypeevent`.
  """
  similarbytriptypeeventsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeeventCondition
  ): SimilarbytriptypeeventsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypeguide`.
  """
  similarbytriptypeguidesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeguideCondition
  ): SimilarbytriptypeguidesConnection!

  """Reads and enables pagination through a set of `Similarbytriptypehost`."""
  similarbytriptypehostsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypehostCondition
  ): SimilarbytriptypehostsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypetransport`.
  """
  similarbytriptypetransportsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypetransportCondition
  ): SimilarbytriptypetransportsConnection!

  """
  Reads and enables pagination through a set of `Similarbytriptypetravelgroup`.
  """
  similarbytriptypetravelgroupsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypetravelgroupCondition
  ): SimilarbytriptypetravelgroupsConnection!

  """Reads and enables pagination through a set of `Assocaccomodation`."""
  assocaccomodationsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocaccomodationCondition
  ): AssocaccomodationsConnection!

  """Reads and enables pagination through a set of `Assochost`."""
  assochostsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssochostCondition
  ): AssochostsConnection!

  """Reads and enables pagination through a set of `Assocguide`."""
  assocguidesByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocguideCondition
  ): AssocguidesConnection!

  """Reads and enables pagination through a set of `Assoctransport`."""
  assoctransportsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctransportCondition
  ): AssoctransportsConnection!

  """Reads and enables pagination through a set of `Assocevent`."""
  assoceventsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoceventCondition
  ): AssoceventsConnection!

  """Reads and enables pagination through a set of `Assocdestination`."""
  assocdestinationsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocdestinationCondition
  ): AssocdestinationsConnection!

  """Reads and enables pagination through a set of `Assoctravelgroup`."""
  assoctravelgroupsByAtAgency(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctravelgroupCondition
  ): AssoctravelgroupsConnection!
}

type Agencyaccomodation implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  agencyId: Int!
  accomodationId: Int!
  lastModified: Datetime

  """Upcoming Signed Url expery at amazon S3 bucket, (max value: now+7days)"""
  urlExperyAt: Datetime!

  """
  This is the resource-specific placement names in the agency interface presentation
  """
  presentationPlacements: [String]

  """
  This is the Urls of the original image uploaded to Amazon agency bucket (needs also presentationPlacements!)
  """
  agencyBucketUrls: [String]
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Agencyaccomodation`."""
  agency: Agency

  """
  Reads a single `Accomodationresource` that is related to this `Agencyaccomodation`.
  """
  accomodation: Accomodationresource
}

"""
A condition to be used against `Agencyaccomodation` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencyaccomodationCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `accomodationId` field."""
  accomodationId: Int

  """Checks for equality with the object’s `lastModified` field."""
  lastModified: Datetime

  """Checks for equality with the object’s `urlExperyAt` field."""
  urlExperyAt: Datetime
}

"""An input for mutations affecting `Agencyaccomodation`"""
input AgencyaccomodationInput {
  agencyId: Int!
  accomodationId: Int!
  lastModified: Datetime

  """Upcoming Signed Url expery at amazon S3 bucket, (max value: now+7days)"""
  urlExperyAt: Datetime!

  """
  This is the resource-specific placement names in the agency interface presentation
  """
  presentationPlacements: [String]

  """
  This is the Urls of the original image uploaded to Amazon agency bucket (needs also presentationPlacements!)
  """
  agencyBucketUrls: [String]
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyaccomodation`. Fields that are set will be updated.
"""
input AgencyaccomodationPatch {
  agencyId: Int
  accomodationId: Int
  lastModified: Datetime

  """Upcoming Signed Url expery at amazon S3 bucket, (max value: now+7days)"""
  urlExperyAt: Datetime

  """
  This is the resource-specific placement names in the agency interface presentation
  """
  presentationPlacements: [String]

  """
  This is the Urls of the original image uploaded to Amazon agency bucket (needs also presentationPlacements!)
  """
  agencyBucketUrls: [String]
  timeCreated: Datetime
}

"""A connection to a list of `Agencyaccomodation` values."""
type AgencyaccomodationsConnection {
  """A list of `Agencyaccomodation` objects."""
  nodes: [Agencyaccomodation!]!

  """
  A list of edges which contains the `Agencyaccomodation` and cursor to aid in pagination.
  """
  edges: [AgencyaccomodationsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencyaccomodation` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencyaccomodation` edge in the connection."""
type AgencyaccomodationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyaccomodation` at the end of the edge."""
  node: Agencyaccomodation!
}

"""Methods to use when ordering `Agencyaccomodation`."""
enum AgencyaccomodationsOrderBy {
  NATURAL
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  ACCOMODATION_ID_ASC
  ACCOMODATION_ID_DESC
  LAST_MODIFIED_ASC
  LAST_MODIFIED_DESC
  URL_EXPERY_AT_ASC
  URL_EXPERY_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencybid implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  agencyId: Int
  touristResourceIdPool: [Int]

  """Reads a single `Agency` that is related to this `Agencybid`."""
  agency: Agency
}

"""
A condition to be used against `Agencybid` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencybidCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int
}

"""An input for mutations affecting `Agencybid`"""
input AgencybidInput {
  id: Int
  agencyId: Int
  touristResourceIdPool: [Int]
}

"""
Represents an update to a `Agencybid`. Fields that are set will be updated.
"""
input AgencybidPatch {
  id: Int
  agencyId: Int
  touristResourceIdPool: [Int]
}

"""A connection to a list of `Agencybid` values."""
type AgencybidsConnection {
  """A list of `Agencybid` objects."""
  nodes: [Agencybid!]!

  """
  A list of edges which contains the `Agencybid` and cursor to aid in pagination.
  """
  edges: [AgencybidsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencybid` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencybid` edge in the connection."""
type AgencybidsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencybid` at the end of the edge."""
  node: Agencybid!
}

"""Methods to use when ordering `Agencybid`."""
enum AgencybidsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Agency` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input AgencyCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `agencyBidId` field."""
  agencyBidId: Int

  """Checks for equality with the object’s `agencyFavoriteId` field."""
  agencyFavoriteId: Int

  """Checks for equality with the object’s `agencyOfferId` field."""
  agencyOfferId: Int

  """Checks for equality with the object’s `agencyDealId` field."""
  agencyDealId: Int

  """Checks for equality with the object’s `agencyMediaLibraryId` field."""
  agencyMediaLibraryId: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int
}

type Agencydeal implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  tripOfferResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  touristResouceIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Agency`."""
  agenciesByAgencyDealId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition
  ): AgenciesConnection!
}

"""
A condition to be used against `Agencydeal` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencydealCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Agencydeal`"""
input AgencydealInput {
  id: Int
  tripOfferResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  touristResouceIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]
}

"""
Represents an update to a `Agencydeal`. Fields that are set will be updated.
"""
input AgencydealPatch {
  id: Int
  tripOfferResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  touristResouceIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]
}

"""A connection to a list of `Agencydeal` values."""
type AgencydealsConnection {
  """A list of `Agencydeal` objects."""
  nodes: [Agencydeal!]!

  """
  A list of edges which contains the `Agencydeal` and cursor to aid in pagination.
  """
  edges: [AgencydealsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencydeal` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencydeal` edge in the connection."""
type AgencydealsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencydeal` at the end of the edge."""
  node: Agencydeal!
}

"""Methods to use when ordering `Agencydeal`."""
enum AgencydealsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencyevent implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  agencyId: Int!
  eventId: Int!
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Agencyevent`."""
  agency: Agency

  """Reads a single `Eventresource` that is related to this `Agencyevent`."""
  event: Eventresource
}

"""
A condition to be used against `Agencyevent` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyeventCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `eventId` field."""
  eventId: Int
}

"""An input for mutations affecting `Agencyevent`"""
input AgencyeventInput {
  agencyId: Int!
  eventId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyevent`. Fields that are set will be updated.
"""
input AgencyeventPatch {
  agencyId: Int
  eventId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencyevent` values."""
type AgencyeventsConnection {
  """A list of `Agencyevent` objects."""
  nodes: [Agencyevent!]!

  """
  A list of edges which contains the `Agencyevent` and cursor to aid in pagination.
  """
  edges: [AgencyeventsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyevent` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyevent` edge in the connection."""
type AgencyeventsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyevent` at the end of the edge."""
  node: Agencyevent!
}

"""Methods to use when ordering `Agencyevent`."""
enum AgencyeventsOrderBy {
  NATURAL
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  EVENT_ID_ASC
  EVENT_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencyfavorite implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  resourceId: Int!
  resourceType: Resourcetype!
  atAgency: Int!
}

"""
A condition to be used against `Agencyfavorite` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencyfavoriteCondition {
  """Checks for equality with the object’s `resourceId` field."""
  resourceId: Int
}

"""An input for mutations affecting `Agencyfavorite`"""
input AgencyfavoriteInput {
  resourceId: Int!
  resourceType: Resourcetype!
  atAgency: Int!
}

"""
Represents an update to a `Agencyfavorite`. Fields that are set will be updated.
"""
input AgencyfavoritePatch {
  resourceId: Int
  resourceType: Resourcetype
  atAgency: Int
}

"""A connection to a list of `Agencyfavorite` values."""
type AgencyfavoritesConnection {
  """A list of `Agencyfavorite` objects."""
  nodes: [Agencyfavorite!]!

  """
  A list of edges which contains the `Agencyfavorite` and cursor to aid in pagination.
  """
  edges: [AgencyfavoritesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyfavorite` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyfavorite` edge in the connection."""
type AgencyfavoritesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyfavorite` at the end of the edge."""
  node: Agencyfavorite!
}

"""Methods to use when ordering `Agencyfavorite`."""
enum AgencyfavoritesOrderBy {
  NATURAL
  RESOURCE_ID_ASC
  RESOURCE_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencyguide implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  agencyId: Int!
  guideId: Int!
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Agencyguide`."""
  agency: Agency

  """Reads a single `Guide` that is related to this `Agencyguide`."""
  guide: Guide
}

"""
A condition to be used against `Agencyguide` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyguideCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `guideId` field."""
  guideId: Int
}

"""An input for mutations affecting `Agencyguide`"""
input AgencyguideInput {
  agencyId: Int!
  guideId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyguide`. Fields that are set will be updated.
"""
input AgencyguidePatch {
  agencyId: Int
  guideId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencyguide` values."""
type AgencyguidesConnection {
  """A list of `Agencyguide` objects."""
  nodes: [Agencyguide!]!

  """
  A list of edges which contains the `Agencyguide` and cursor to aid in pagination.
  """
  edges: [AgencyguidesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyguide` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyguide` edge in the connection."""
type AgencyguidesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyguide` at the end of the edge."""
  node: Agencyguide!
}

"""Methods to use when ordering `Agencyguide`."""
enum AgencyguidesOrderBy {
  NATURAL
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  GUIDE_ID_ASC
  GUIDE_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencyhost implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  agencyId: Int!
  hostId: Int!
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Agencyhost`."""
  agency: Agency

  """Reads a single `Hostresource` that is related to this `Agencyhost`."""
  host: Hostresource
}

"""
A condition to be used against `Agencyhost` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyhostCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `hostId` field."""
  hostId: Int
}

"""An input for mutations affecting `Agencyhost`"""
input AgencyhostInput {
  agencyId: Int!
  hostId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyhost`. Fields that are set will be updated.
"""
input AgencyhostPatch {
  agencyId: Int
  hostId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencyhost` values."""
type AgencyhostsConnection {
  """A list of `Agencyhost` objects."""
  nodes: [Agencyhost!]!

  """
  A list of edges which contains the `Agencyhost` and cursor to aid in pagination.
  """
  edges: [AgencyhostsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyhost` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyhost` edge in the connection."""
type AgencyhostsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyhost` at the end of the edge."""
  node: Agencyhost!
}

"""Methods to use when ordering `Agencyhost`."""
enum AgencyhostsOrderBy {
  NATURAL
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  HOST_ID_ASC
  HOST_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""An input for mutations affecting `Agency`"""
input AgencyInput {
  id: Int
  name: String!
  contactId: Int
  activeInsurance: Boolean!
  insuranceUrl: String
  insuranceExpery: Date
  publisherId: Int
  createdById: Int!
  isActive: Boolean
  isPublic: Boolean
  agencyBidId: Int
  agencyFavoriteId: Int
  agencyOfferId: Int
  agencyDealId: Int
  trustedPartnerIdPool: [Int]
  extendedNetworkIdPool: [Int]
  guideReviewInIdPool: [Int]
  agencyReviewInIdPool: [Int]
  touristReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  touristReviewOutIdPool: [Int]
  agencyMediaLibraryId: Int
  isRomanian: Boolean!
  bookingCalendarId: Int
  specializedAgency: Resourcetype
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Agencymedialibrary` values."""
type AgencymedialibrariesConnection {
  """A list of `Agencymedialibrary` objects."""
  nodes: [Agencymedialibrary!]!

  """
  A list of edges which contains the `Agencymedialibrary` and cursor to aid in pagination.
  """
  edges: [AgencymedialibrariesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencymedialibrary` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencymedialibrary` edge in the connection."""
type AgencymedialibrariesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencymedialibrary` at the end of the edge."""
  node: Agencymedialibrary!
}

"""Methods to use when ordering `Agencymedialibrary`."""
enum AgencymedialibrariesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  LAST_MODIFIED_BY_ASC
  LAST_MODIFIED_BY_DESC
  LAST_MODIFIED_ASC
  LAST_MODIFIED_DESC
}

type Agencymedialibrary {
  id: Int
  atAgency: Int!
  uploadLocations: [String]
  locationSignedUrls: [String]
  signedUrlsUpdate: [Datetime]
  lastModifiedBy: Int!
  timeCreated: Datetime
  lastModified: Datetime

  """Reads a single `Agency` that is related to this `Agencymedialibrary`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Usertable` that is related to this `Agencymedialibrary`.
  """
  usertableByLastModifiedBy: Usertable

  """Reads and enables pagination through a set of `Agency`."""
  agenciesByAgencyMediaLibraryId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition
  ): AgenciesConnection!
}

"""
A condition to be used against `Agencymedialibrary` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencymedialibraryCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `lastModifiedBy` field."""
  lastModifiedBy: Int

  """Checks for equality with the object’s `lastModified` field."""
  lastModified: Datetime
}

"""An input for mutations affecting `Agencymedialibrary`"""
input AgencymedialibraryInput {
  id: Int
  atAgency: Int!
  uploadLocations: [String]
  locationSignedUrls: [String]
  signedUrlsUpdate: [Datetime]
  lastModifiedBy: Int!
  timeCreated: Datetime
  lastModified: Datetime
}

"""
Represents an update to a `Agencymedialibrary`. Fields that are set will be updated.
"""
input AgencymedialibraryPatch {
  id: Int
  atAgency: Int
  uploadLocations: [String]
  locationSignedUrls: [String]
  signedUrlsUpdate: [Datetime]
  lastModifiedBy: Int
  timeCreated: Datetime
  lastModified: Datetime
}

type Agencyoffer implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  tripsOfferesourceIdPool: [Int]
  guideResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Agency`."""
  agenciesByAgencyOfferId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition
  ): AgenciesConnection!
}

"""
A condition to be used against `Agencyoffer` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyofferCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Agencyoffer`"""
input AgencyofferInput {
  id: Int
  tripsOfferesourceIdPool: [Int]
  guideResourceIdPool: [Int]
}

"""
Represents an update to a `Agencyoffer`. Fields that are set will be updated.
"""
input AgencyofferPatch {
  id: Int
  tripsOfferesourceIdPool: [Int]
  guideResourceIdPool: [Int]
}

"""A connection to a list of `Agencyoffer` values."""
type AgencyoffersConnection {
  """A list of `Agencyoffer` objects."""
  nodes: [Agencyoffer!]!

  """
  A list of edges which contains the `Agencyoffer` and cursor to aid in pagination.
  """
  edges: [AgencyoffersEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyoffer` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyoffer` edge in the connection."""
type AgencyoffersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyoffer` at the end of the edge."""
  node: Agencyoffer!
}

"""Methods to use when ordering `Agencyoffer`."""
enum AgencyoffersOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
Represents an update to a `Agency`. Fields that are set will be updated.
"""
input AgencyPatch {
  id: Int
  name: String
  contactId: Int
  activeInsurance: Boolean
  insuranceUrl: String
  insuranceExpery: Date
  publisherId: Int
  createdById: Int
  isActive: Boolean
  isPublic: Boolean
  agencyBidId: Int
  agencyFavoriteId: Int
  agencyOfferId: Int
  agencyDealId: Int
  trustedPartnerIdPool: [Int]
  extendedNetworkIdPool: [Int]
  guideReviewInIdPool: [Int]
  agencyReviewInIdPool: [Int]
  touristReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  touristReviewOutIdPool: [Int]
  agencyMediaLibraryId: Int
  isRomanian: Boolean
  bookingCalendarId: Int
  specializedAgency: Resourcetype
  lastModified: Datetime
  timeCreated: Datetime
}

type Agencyreview implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  halfStars: Int
  reviewText: String
  agencyIdTarget: Int!
  startDateTripEvent: Date
  byRomanian: Boolean
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Agencyreview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Agencyreview`."""
  createdBy: Usertable

  """Reads a single `Agency` that is related to this `Agencyreview`."""
  agencyByAgencyIdTarget: Agency
}

"""
A condition to be used against `Agencyreview` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencyreviewCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `agencyIdTarget` field."""
  agencyIdTarget: Int
}

"""An input for mutations affecting `Agencyreview`"""
input AgencyreviewInput {
  id: Int
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  halfStars: Int
  reviewText: String
  agencyIdTarget: Int!
  startDateTripEvent: Date
  byRomanian: Boolean
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyreview`. Fields that are set will be updated.
"""
input AgencyreviewPatch {
  id: Int
  publisherId: Int
  createdById: Int
  isActive: Boolean
  halfStars: Int
  reviewText: String
  agencyIdTarget: Int
  startDateTripEvent: Date
  byRomanian: Boolean
  timeCreated: Datetime
}

"""A connection to a list of `Agencyreview` values."""
type AgencyreviewsConnection {
  """A list of `Agencyreview` objects."""
  nodes: [Agencyreview!]!

  """
  A list of edges which contains the `Agencyreview` and cursor to aid in pagination.
  """
  edges: [AgencyreviewsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyreview` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyreview` edge in the connection."""
type AgencyreviewsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyreview` at the end of the edge."""
  node: Agencyreview!
}

"""Methods to use when ordering `Agencyreview`."""
enum AgencyreviewsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  AGENCY_ID_TARGET_ASC
  AGENCY_ID_TARGET_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencytourist implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  agencyId: Int!
  touristId: Int!
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Agencytourist`."""
  agency: Agency
}

"""
A condition to be used against `Agencytourist` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencytouristCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int
}

"""An input for mutations affecting `Agencytourist`"""
input AgencytouristInput {
  agencyId: Int!
  touristId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencytourist`. Fields that are set will be updated.
"""
input AgencytouristPatch {
  agencyId: Int
  touristId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencytourist` values."""
type AgencytouristsConnection {
  """A list of `Agencytourist` objects."""
  nodes: [Agencytourist!]!

  """
  A list of edges which contains the `Agencytourist` and cursor to aid in pagination.
  """
  edges: [AgencytouristsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencytourist` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencytourist` edge in the connection."""
type AgencytouristsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencytourist` at the end of the edge."""
  node: Agencytourist!
}

"""Methods to use when ordering `Agencytourist`."""
enum AgencytouristsOrderBy {
  NATURAL
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencytransport implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  agencyId: Int!
  transportId: Int!
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Agencytransport`."""
  agency: Agency

  """
  Reads a single `Transportresource` that is related to this `Agencytransport`.
  """
  transport: Transportresource
}

"""
A condition to be used against `Agencytransport` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencytransportCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `transportId` field."""
  transportId: Int
}

"""An input for mutations affecting `Agencytransport`"""
input AgencytransportInput {
  agencyId: Int!
  transportId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencytransport`. Fields that are set will be updated.
"""
input AgencytransportPatch {
  agencyId: Int
  transportId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencytransport` values."""
type AgencytransportsConnection {
  """A list of `Agencytransport` objects."""
  nodes: [Agencytransport!]!

  """
  A list of edges which contains the `Agencytransport` and cursor to aid in pagination.
  """
  edges: [AgencytransportsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencytransport` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencytransport` edge in the connection."""
type AgencytransportsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencytransport` at the end of the edge."""
  node: Agencytransport!
}

"""Methods to use when ordering `Agencytransport`."""
enum AgencytransportsOrderBy {
  NATURAL
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  TRANSPORT_ID_ASC
  TRANSPORT_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencytravelgroup implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  agencyId: Int!
  travelGroupId: Int!
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Agencytravelgroup`."""
  agency: Agency

  """
  Reads a single `Travelgroupresource` that is related to this `Agencytravelgroup`.
  """
  travelGroup: Travelgroupresource
}

"""
A condition to be used against `Agencytravelgroup` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencytravelgroupCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `travelGroupId` field."""
  travelGroupId: Int
}

"""An input for mutations affecting `Agencytravelgroup`"""
input AgencytravelgroupInput {
  agencyId: Int!
  travelGroupId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencytravelgroup`. Fields that are set will be updated.
"""
input AgencytravelgroupPatch {
  agencyId: Int
  travelGroupId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencytravelgroup` values."""
type AgencytravelgroupsConnection {
  """A list of `Agencytravelgroup` objects."""
  nodes: [Agencytravelgroup!]!

  """
  A list of edges which contains the `Agencytravelgroup` and cursor to aid in pagination.
  """
  edges: [AgencytravelgroupsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencytravelgroup` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencytravelgroup` edge in the connection."""
type AgencytravelgroupsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencytravelgroup` at the end of the edge."""
  node: Agencytravelgroup!
}

"""Methods to use when ordering `Agencytravelgroup`."""
enum AgencytravelgroupsOrderBy {
  NATURAL
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  TRAVEL_GROUP_ID_ASC
  TRAVEL_GROUP_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencytripoffer implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  agencyId: Int!
  tripOfferId: Int!
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Agencytripoffer`."""
  agency: Agency

  """
  Reads a single `Tripofferresource` that is related to this `Agencytripoffer`.
  """
  tripOffer: Tripofferresource
}

"""
A condition to be used against `Agencytripoffer` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AgencytripofferCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `tripOfferId` field."""
  tripOfferId: Int
}

"""An input for mutations affecting `Agencytripoffer`"""
input AgencytripofferInput {
  agencyId: Int!
  tripOfferId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencytripoffer`. Fields that are set will be updated.
"""
input AgencytripofferPatch {
  agencyId: Int
  tripOfferId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencytripoffer` values."""
type AgencytripoffersConnection {
  """A list of `Agencytripoffer` objects."""
  nodes: [Agencytripoffer!]!

  """
  A list of edges which contains the `Agencytripoffer` and cursor to aid in pagination.
  """
  edges: [AgencytripoffersEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Agencytripoffer` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Agencytripoffer` edge in the connection."""
type AgencytripoffersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencytripoffer` at the end of the edge."""
  node: Agencytripoffer!
}

"""Methods to use when ordering `Agencytripoffer`."""
enum AgencytripoffersOrderBy {
  NATURAL
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  TRIP_OFFER_ID_ASC
  TRIP_OFFER_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Agencyuser implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  agencyId: Int!
  userId: Int!
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Agencyuser`."""
  agency: Agency

  """Reads a single `Usertable` that is related to this `Agencyuser`."""
  user: Usertable
}

"""
A condition to be used against `Agencyuser` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AgencyuserCondition {
  """Checks for equality with the object’s `agencyId` field."""
  agencyId: Int

  """Checks for equality with the object’s `userId` field."""
  userId: Int
}

"""An input for mutations affecting `Agencyuser`"""
input AgencyuserInput {
  agencyId: Int!
  userId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Agencyuser`. Fields that are set will be updated.
"""
input AgencyuserPatch {
  agencyId: Int
  userId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Agencyuser` values."""
type AgencyusersConnection {
  """A list of `Agencyuser` objects."""
  nodes: [Agencyuser!]!

  """
  A list of edges which contains the `Agencyuser` and cursor to aid in pagination.
  """
  edges: [AgencyusersEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Agencyuser` you could get from the connection."""
  totalCount: Int!
}

"""A `Agencyuser` edge in the connection."""
type AgencyusersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Agencyuser` at the end of the edge."""
  node: Agencyuser!
}

"""Methods to use when ordering `Agencyuser`."""
enum AgencyusersOrderBy {
  NATURAL
  AGENCY_ID_ASC
  AGENCY_ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

enum Area {
  MUNTENIA
  OLTENIA
  TRANSILVANIA
  DOBROGEA
  BANAT
  MOLDOVA
  BUCOVINA
  CRISANA
  SATU_MARE
  MARAMURES
}

type Assocaccomodation implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  assocAccomodationId: [Int]
  accomodationId: Int!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Accomodationresource` that is related to this `Assocaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Assocaccomodation`."""
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Assocaccomodation` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AssocaccomodationCondition {
  """Checks for equality with the object’s `accomodationId` field."""
  accomodationId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Assocaccomodation`"""
input AssocaccomodationInput {
  assocAccomodationId: [Int]
  accomodationId: Int!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assocaccomodation`. Fields that are set will be updated.
"""
input AssocaccomodationPatch {
  assocAccomodationId: [Int]
  accomodationId: Int
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assocaccomodation` values."""
type AssocaccomodationsConnection {
  """A list of `Assocaccomodation` objects."""
  nodes: [Assocaccomodation!]!

  """
  A list of edges which contains the `Assocaccomodation` and cursor to aid in pagination.
  """
  edges: [AssocaccomodationsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Assocaccomodation` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Assocaccomodation` edge in the connection."""
type AssocaccomodationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assocaccomodation` at the end of the edge."""
  node: Assocaccomodation!
}

"""Methods to use when ordering `Assocaccomodation`."""
enum AssocaccomodationsOrderBy {
  NATURAL
  ACCOMODATION_ID_ASC
  ACCOMODATION_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assocdestination implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  assocDestinationId: [Int]
  destinationId: Int!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Destinationresource` that is related to this `Assocdestination`.
  """
  destination: Destinationresource

  """Reads a single `Agency` that is related to this `Assocdestination`."""
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Assocdestination` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AssocdestinationCondition {
  """Checks for equality with the object’s `destinationId` field."""
  destinationId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Assocdestination`"""
input AssocdestinationInput {
  assocDestinationId: [Int]
  destinationId: Int!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assocdestination`. Fields that are set will be updated.
"""
input AssocdestinationPatch {
  assocDestinationId: [Int]
  destinationId: Int
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assocdestination` values."""
type AssocdestinationsConnection {
  """A list of `Assocdestination` objects."""
  nodes: [Assocdestination!]!

  """
  A list of edges which contains the `Assocdestination` and cursor to aid in pagination.
  """
  edges: [AssocdestinationsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Assocdestination` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Assocdestination` edge in the connection."""
type AssocdestinationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assocdestination` at the end of the edge."""
  node: Assocdestination!
}

"""Methods to use when ordering `Assocdestination`."""
enum AssocdestinationsOrderBy {
  NATURAL
  DESTINATION_ID_ASC
  DESTINATION_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assocevent implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  assocEventId: [Int]
  eventId: Int!
  atAgency: Int!
  timeCreated: Datetime

  """Reads a single `Eventresource` that is related to this `Assocevent`."""
  event: Eventresource

  """Reads a single `Agency` that is related to this `Assocevent`."""
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Assocevent` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AssoceventCondition {
  """Checks for equality with the object’s `eventId` field."""
  eventId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Assocevent`"""
input AssoceventInput {
  assocEventId: [Int]
  eventId: Int!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assocevent`. Fields that are set will be updated.
"""
input AssoceventPatch {
  assocEventId: [Int]
  eventId: Int
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assocevent` values."""
type AssoceventsConnection {
  """A list of `Assocevent` objects."""
  nodes: [Assocevent!]!

  """
  A list of edges which contains the `Assocevent` and cursor to aid in pagination.
  """
  edges: [AssoceventsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Assocevent` you could get from the connection."""
  totalCount: Int!
}

"""A `Assocevent` edge in the connection."""
type AssoceventsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assocevent` at the end of the edge."""
  node: Assocevent!
}

"""Methods to use when ordering `Assocevent`."""
enum AssoceventsOrderBy {
  NATURAL
  EVENT_ID_ASC
  EVENT_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assocguide implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  assocGuideId: [Int]
  guideId: Int!
  atAgency: Int!
  timeCreated: Datetime

  """Reads a single `Guideresource` that is related to this `Assocguide`."""
  guide: Guideresource

  """Reads a single `Agency` that is related to this `Assocguide`."""
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Assocguide` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AssocguideCondition {
  """Checks for equality with the object’s `guideId` field."""
  guideId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Assocguide`"""
input AssocguideInput {
  assocGuideId: [Int]
  guideId: Int!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assocguide`. Fields that are set will be updated.
"""
input AssocguidePatch {
  assocGuideId: [Int]
  guideId: Int
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assocguide` values."""
type AssocguidesConnection {
  """A list of `Assocguide` objects."""
  nodes: [Assocguide!]!

  """
  A list of edges which contains the `Assocguide` and cursor to aid in pagination.
  """
  edges: [AssocguidesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Assocguide` you could get from the connection."""
  totalCount: Int!
}

"""A `Assocguide` edge in the connection."""
type AssocguidesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assocguide` at the end of the edge."""
  node: Assocguide!
}

"""Methods to use when ordering `Assocguide`."""
enum AssocguidesOrderBy {
  NATURAL
  GUIDE_ID_ASC
  GUIDE_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assochost implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  assocHostId: [Int]
  hostId: Int!
  atAgency: Int!
  timeCreated: Datetime

  """Reads a single `Hostresource` that is related to this `Assochost`."""
  host: Hostresource

  """Reads a single `Agency` that is related to this `Assochost`."""
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Assochost` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AssochostCondition {
  """Checks for equality with the object’s `hostId` field."""
  hostId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Assochost`"""
input AssochostInput {
  assocHostId: [Int]
  hostId: Int!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assochost`. Fields that are set will be updated.
"""
input AssochostPatch {
  assocHostId: [Int]
  hostId: Int
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assochost` values."""
type AssochostsConnection {
  """A list of `Assochost` objects."""
  nodes: [Assochost!]!

  """
  A list of edges which contains the `Assochost` and cursor to aid in pagination.
  """
  edges: [AssochostsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Assochost` you could get from the connection."""
  totalCount: Int!
}

"""A `Assochost` edge in the connection."""
type AssochostsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assochost` at the end of the edge."""
  node: Assochost!
}

"""Methods to use when ordering `Assochost`."""
enum AssochostsOrderBy {
  NATURAL
  HOST_ID_ASC
  HOST_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assoctransport implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  assocTransportId: [Int]
  transportId: Int!
  atAgency: Int!

  """
  Reads a single `Transportresource` that is related to this `Assoctransport`.
  """
  transport: Transportresource

  """Reads a single `Agency` that is related to this `Assoctransport`."""
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Assoctransport` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AssoctransportCondition {
  """Checks for equality with the object’s `transportId` field."""
  transportId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Assoctransport`"""
input AssoctransportInput {
  assocTransportId: [Int]
  transportId: Int!
  atAgency: Int!
}

"""
Represents an update to a `Assoctransport`. Fields that are set will be updated.
"""
input AssoctransportPatch {
  assocTransportId: [Int]
  transportId: Int
  atAgency: Int
}

"""A connection to a list of `Assoctransport` values."""
type AssoctransportsConnection {
  """A list of `Assoctransport` objects."""
  nodes: [Assoctransport!]!

  """
  A list of edges which contains the `Assoctransport` and cursor to aid in pagination.
  """
  edges: [AssoctransportsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Assoctransport` you could get from the connection."""
  totalCount: Int!
}

"""A `Assoctransport` edge in the connection."""
type AssoctransportsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assoctransport` at the end of the edge."""
  node: Assoctransport!
}

"""Methods to use when ordering `Assoctransport`."""
enum AssoctransportsOrderBy {
  NATURAL
  TRANSPORT_ID_ASC
  TRANSPORT_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Assoctravelgroup implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  assocTravelGroupId: [Int]
  travelGroupId: Int!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Travelgroupresource` that is related to this `Assoctravelgroup`.
  """
  travelGroup: Travelgroupresource

  """Reads a single `Agency` that is related to this `Assoctravelgroup`."""
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Assoctravelgroup` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AssoctravelgroupCondition {
  """Checks for equality with the object’s `travelGroupId` field."""
  travelGroupId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Assoctravelgroup`"""
input AssoctravelgroupInput {
  assocTravelGroupId: [Int]
  travelGroupId: Int!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Assoctravelgroup`. Fields that are set will be updated.
"""
input AssoctravelgroupPatch {
  assocTravelGroupId: [Int]
  travelGroupId: Int
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Assoctravelgroup` values."""
type AssoctravelgroupsConnection {
  """A list of `Assoctravelgroup` objects."""
  nodes: [Assoctravelgroup!]!

  """
  A list of edges which contains the `Assoctravelgroup` and cursor to aid in pagination.
  """
  edges: [AssoctravelgroupsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Assoctravelgroup` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Assoctravelgroup` edge in the connection."""
type AssoctravelgroupsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Assoctravelgroup` at the end of the edge."""
  node: Assoctravelgroup!
}

"""Methods to use when ordering `Assoctravelgroup`."""
enum AssoctravelgroupsOrderBy {
  NATURAL
  TRAVEL_GROUP_ID_ASC
  TRAVEL_GROUP_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Auctioninfo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  publishedById: Int!
  createdById: Int!
  advertisedPrice: Float!
  currentHighBid: Float
  bidId: Int
  acceptsOffers: Boolean!
  auctionExpiry: Datetime
  isAuction: Boolean!
  isActive: Boolean
  atResourceType: Resourcetype!
  belongsToId: Int!
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Auctioninfo`."""
  publishedBy: Publisher

  """Reads a single `Usertable` that is related to this `Auctioninfo`."""
  createdBy: Usertable

  """Reads a single `Bid` that is related to this `Auctioninfo`."""
  bid: Bid
}

"""
A condition to be used against `Auctioninfo` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AuctioninfoCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publishedById` field."""
  publishedById: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `bidId` field."""
  bidId: Int
}

"""An input for mutations affecting `Auctioninfo`"""
input AuctioninfoInput {
  id: Int
  publishedById: Int!
  createdById: Int!
  advertisedPrice: Float!
  currentHighBid: Float
  bidId: Int
  acceptsOffers: Boolean!
  auctionExpiry: Datetime
  isAuction: Boolean!
  isActive: Boolean
  atResourceType: Resourcetype!
  belongsToId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Auctioninfo`. Fields that are set will be updated.
"""
input AuctioninfoPatch {
  id: Int
  publishedById: Int
  createdById: Int
  advertisedPrice: Float
  currentHighBid: Float
  bidId: Int
  acceptsOffers: Boolean
  auctionExpiry: Datetime
  isAuction: Boolean
  isActive: Boolean
  atResourceType: Resourcetype
  belongsToId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Auctioninfo` values."""
type AuctioninfosConnection {
  """A list of `Auctioninfo` objects."""
  nodes: [Auctioninfo!]!

  """
  A list of edges which contains the `Auctioninfo` and cursor to aid in pagination.
  """
  edges: [AuctioninfosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Auctioninfo` you could get from the connection."""
  totalCount: Int!
}

"""A `Auctioninfo` edge in the connection."""
type AuctioninfosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Auctioninfo` at the end of the edge."""
  node: Auctioninfo!
}

"""Methods to use when ordering `Auctioninfo`."""
enum AuctioninfosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHED_BY_ID_ASC
  PUBLISHED_BY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  BID_ID_ASC
  BID_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Bid implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  publisherId: [Int]!
  createdById: [Int]!
  bidAmount: [Float]
  isActive: [Boolean]!
  timeCreated: [Datetime]!

  """Reads and enables pagination through a set of `Auctioninfo`."""
  auctioninfos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AuctioninfoCondition
  ): AuctioninfosConnection!

  """Reads and enables pagination through a set of `Priceinfo`."""
  priceinfos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PriceinfoCondition
  ): PriceinfosConnection!
}

"""
A condition to be used against `Bid` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input BidCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Bid`"""
input BidInput {
  id: Int
  publisherId: [Int]!
  createdById: [Int]!
  bidAmount: [Float]
  isActive: [Boolean]!
  timeCreated: [Datetime]
}

"""Represents an update to a `Bid`. Fields that are set will be updated."""
input BidPatch {
  id: Int
  publisherId: [Int]
  createdById: [Int]
  bidAmount: [Float]
  isActive: [Boolean]
  timeCreated: [Datetime]
}

"""A connection to a list of `Bid` values."""
type BidsConnection {
  """A list of `Bid` objects."""
  nodes: [Bid!]!

  """
  A list of edges which contains the `Bid` and cursor to aid in pagination.
  """
  edges: [BidsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Bid` you could get from the connection."""
  totalCount: Int!
}

"""A `Bid` edge in the connection."""
type BidsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Bid` at the end of the edge."""
  node: Bid!
}

"""Methods to use when ordering `Bid`."""
enum BidsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Bookingcalendar implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  belongsToId: Int
  belongsToType: Resourcetype
  createdById: Int
  isActive: Boolean
  fromTimestamp: [Datetime]!
  toTimestamp: [Datetime]!
  resourceType: [Resourcetype]
  comment: [String]
  timeCreated: Datetime

  """Reads a single `Usertable` that is related to this `Bookingcalendar`."""
  createdBy: Usertable

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByLocationCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByActiveAtPeriodsId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByActiveAtPeriodsId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByAvailableAtCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition
  ): TripofferresourcesConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByBookingCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByBookingCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByBookingCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Guide`."""
  guidesByBookingCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Agency`."""
  agenciesByBookingCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition
  ): AgenciesConnection!

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByTravellingCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByBookingCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition
  ): TravelgroupresourcesConnection!
}

"""
A condition to be used against `Bookingcalendar` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input BookingcalendarCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `belongsToId` field."""
  belongsToId: Int

  """Checks for equality with the object’s `belongsToType` field."""
  belongsToType: Resourcetype

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int
}

"""An input for mutations affecting `Bookingcalendar`"""
input BookingcalendarInput {
  id: Int
  belongsToId: Int
  belongsToType: Resourcetype
  createdById: Int
  isActive: Boolean
  fromTimestamp: [Datetime]
  toTimestamp: [Datetime]
  resourceType: [Resourcetype]
  comment: [String]
  timeCreated: Datetime
}

"""
Represents an update to a `Bookingcalendar`. Fields that are set will be updated.
"""
input BookingcalendarPatch {
  id: Int
  belongsToId: Int
  belongsToType: Resourcetype
  createdById: Int
  isActive: Boolean
  fromTimestamp: [Datetime]
  toTimestamp: [Datetime]
  resourceType: [Resourcetype]
  comment: [String]
  timeCreated: Datetime
}

"""A connection to a list of `Bookingcalendar` values."""
type BookingcalendarsConnection {
  """A list of `Bookingcalendar` objects."""
  nodes: [Bookingcalendar!]!

  """
  A list of edges which contains the `Bookingcalendar` and cursor to aid in pagination.
  """
  edges: [BookingcalendarsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Bookingcalendar` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Bookingcalendar` edge in the connection."""
type BookingcalendarsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Bookingcalendar` at the end of the edge."""
  node: Bookingcalendar!
}

"""Methods to use when ordering `Bookingcalendar`."""
enum BookingcalendarsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  BELONGS_TO_ID_ASC
  BELONGS_TO_ID_DESC
  BELONGS_TO_TYPE_ASC
  BELONGS_TO_TYPE_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""A connection to a list of `Calendarentry` values."""
type CalendarentriesConnection {
  """A list of `Calendarentry` objects."""
  nodes: [Calendarentry!]!

  """
  A list of edges which contains the `Calendarentry` and cursor to aid in pagination.
  """
  edges: [CalendarentriesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Calendarentry` you could get from the connection."""
  totalCount: Int!
}

"""A `Calendarentry` edge in the connection."""
type CalendarentriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Calendarentry` at the end of the edge."""
  node: Calendarentry!
}

"""Methods to use when ordering `Calendarentry`."""
enum CalendarentriesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Calendarentry implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  fromTimestamp: [Datetime]!
  toTimestamp: [Datetime]!
  resourceType: [Resourcetype]
  comment: [String]
  timeCreated: Datetime
}

"""
A condition to be used against `Calendarentry` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input CalendarentryCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Calendarentry`"""
input CalendarentryInput {
  id: Int
  fromTimestamp: [Datetime]
  toTimestamp: [Datetime]
  resourceType: [Resourcetype]
  comment: [String]
  timeCreated: Datetime
}

"""
Represents an update to a `Calendarentry`. Fields that are set will be updated.
"""
input CalendarentryPatch {
  id: Int
  fromTimestamp: [Datetime]
  toTimestamp: [Datetime]
  resourceType: [Resourcetype]
  comment: [String]
  timeCreated: Datetime
}

"""A connection to a list of `Commandlogentry` values."""
type CommandlogentriesConnection {
  """A list of `Commandlogentry` objects."""
  nodes: [Commandlogentry!]!

  """
  A list of edges which contains the `Commandlogentry` and cursor to aid in pagination.
  """
  edges: [CommandlogentriesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Commandlogentry` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Commandlogentry` edge in the connection."""
type CommandlogentriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Commandlogentry` at the end of the edge."""
  node: Commandlogentry!
}

"""Methods to use when ordering `Commandlogentry`."""
enum CommandlogentriesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  AT_PUBLISHER_ASC
  AT_PUBLISHER_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Commandlogentry implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  atPublisher: Int!
  belongsToType: Resourcetype
  resourceId: Int
  logcommand: Logcommand!
  timeCommand: Datetime

  """Reads a single `Publisher` that is related to this `Commandlogentry`."""
  publisherByAtPublisher: Publisher
}

"""
A condition to be used against `Commandlogentry` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input CommandlogentryCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `atPublisher` field."""
  atPublisher: Int
}

"""An input for mutations affecting `Commandlogentry`"""
input CommandlogentryInput {
  id: Int
  atPublisher: Int!
  belongsToType: Resourcetype
  resourceId: Int
  logcommand: Logcommand!
  timeCommand: Datetime
}

"""
Represents an update to a `Commandlogentry`. Fields that are set will be updated.
"""
input CommandlogentryPatch {
  id: Int
  atPublisher: Int
  belongsToType: Resourcetype
  resourceId: Int
  logcommand: Logcommand
  timeCommand: Datetime
}

type Contact implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  firstName: String
  lastName: String
  associatedCompany: String
  street: String
  city: String
  postCode: String
  country: String
  telephone: String
  email: String
  isCompany: Boolean
  createdById: Int
  belongsToType: Resourcetype
  belongsToId: Int
  timeCreated: Datetime

  """Reads a single `Usertable` that is related to this `Contact`."""
  createdBy: Usertable

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByAddressId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByLocationAddressId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByAddressInfoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByAddressInfoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection!

  """Reads and enables pagination through a set of `Tourist`."""
  tourists(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition
  ): TouristsConnection!

  """Reads and enables pagination through a set of `Guide`."""
  guides(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Agency`."""
  agencies(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition
  ): AgenciesConnection!

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition
  ): TravelgroupresourcesConnection!
}

"""
A condition to be used against `Contact` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input ContactCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `belongsToType` field."""
  belongsToType: Resourcetype
}

"""An input for mutations affecting `Contact`"""
input ContactInput {
  id: Int
  firstName: String
  lastName: String
  associatedCompany: String
  street: String
  city: String
  postCode: String
  country: String
  telephone: String
  email: String
  isCompany: Boolean
  createdById: Int
  belongsToType: Resourcetype
  belongsToId: Int
  timeCreated: Datetime
}

"""
Represents an update to a `Contact`. Fields that are set will be updated.
"""
input ContactPatch {
  id: Int
  firstName: String
  lastName: String
  associatedCompany: String
  street: String
  city: String
  postCode: String
  country: String
  telephone: String
  email: String
  isCompany: Boolean
  createdById: Int
  belongsToType: Resourcetype
  belongsToId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Contact` values."""
type ContactsConnection {
  """A list of `Contact` objects."""
  nodes: [Contact!]!

  """
  A list of edges which contains the `Contact` and cursor to aid in pagination.
  """
  edges: [ContactsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Contact` you could get from the connection."""
  totalCount: Int!
}

"""A `Contact` edge in the connection."""
type ContactsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Contact` at the end of the edge."""
  node: Contact!
}

"""Methods to use when ordering `Contact`."""
enum ContactsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  BELONGS_TO_TYPE_ASC
  BELONGS_TO_TYPE_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""All input for the create `Accomodationresource` mutation."""
input CreateAccomodationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Accomodationresource` to be created by this mutation."""
  accomodationresource: AccomodationresourceInput!
}

"""The output of our create `Accomodationresource` mutation."""
type CreateAccomodationresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Accomodationresource` that was created by this mutation."""
  accomodationresource: Accomodationresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  contact: Contact

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  address: Contact

  """
  Reads a single `Bookingcalendar` that is related to this `Accomodationresource`.
  """
  locationCalendar: Bookingcalendar

  """
  Reads a single `Publisher` that is related to this `Accomodationresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Accomodationresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Presentation` that is related to this `Accomodationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Agency` that is related to this `Accomodationresource`.
  """
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Accomodationresource`."""
  guideByAtGuide: Guide

  """An edge for our `Accomodationresource`. May be used by Relay 1."""
  accomodationresourceEdge(
    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesEdge
}

"""All input for the create `Accounting` mutation."""
input CreateAccountingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Accounting` to be created by this mutation."""
  accounting: AccountingInput!
}

"""The output of our create `Accounting` mutation."""
type CreateAccountingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Accounting` that was created by this mutation."""
  accounting: Accounting

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Accounting`."""
  publisher: Publisher

  """An edge for our `Accounting`. May be used by Relay 1."""
  accountingEdge(
    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountingsEdge
}

"""All input for the create `Account` mutation."""
input CreateAccountInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Account` to be created by this mutation."""
  account: AccountInput!
}

"""The output of our create `Account` mutation."""
type CreateAccountPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Account` that was created by this mutation."""
  account: Account

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Account`. May be used by Relay 1."""
  accountEdge(
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountsEdge
}

"""All input for the create `Agencyaccomodation` mutation."""
input CreateAgencyaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencyaccomodation` to be created by this mutation."""
  agencyaccomodation: AgencyaccomodationInput!
}

"""The output of our create `Agencyaccomodation` mutation."""
type CreateAgencyaccomodationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyaccomodation` that was created by this mutation."""
  agencyaccomodation: Agencyaccomodation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyaccomodation`."""
  agency: Agency

  """
  Reads a single `Accomodationresource` that is related to this `Agencyaccomodation`.
  """
  accomodation: Accomodationresource

  """An edge for our `Agencyaccomodation`. May be used by Relay 1."""
  agencyaccomodationEdge(
    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyaccomodationsEdge
}

"""All input for the create `Agencybid` mutation."""
input CreateAgencybidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencybid` to be created by this mutation."""
  agencybid: AgencybidInput!
}

"""The output of our create `Agencybid` mutation."""
type CreateAgencybidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencybid` that was created by this mutation."""
  agencybid: Agencybid

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencybid`."""
  agency: Agency

  """An edge for our `Agencybid`. May be used by Relay 1."""
  agencybidEdge(
    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencybidsEdge
}

"""All input for the create `Agencydeal` mutation."""
input CreateAgencydealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencydeal` to be created by this mutation."""
  agencydeal: AgencydealInput!
}

"""The output of our create `Agencydeal` mutation."""
type CreateAgencydealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencydeal` that was created by this mutation."""
  agencydeal: Agencydeal

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Agencydeal`. May be used by Relay 1."""
  agencydealEdge(
    """The method to use when ordering `Agencydeal`."""
    orderBy: [AgencydealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencydealsEdge
}

"""All input for the create `Agencyevent` mutation."""
input CreateAgencyeventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencyevent` to be created by this mutation."""
  agencyevent: AgencyeventInput!
}

"""The output of our create `Agencyevent` mutation."""
type CreateAgencyeventPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyevent` that was created by this mutation."""
  agencyevent: Agencyevent

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyevent`."""
  agency: Agency

  """Reads a single `Eventresource` that is related to this `Agencyevent`."""
  event: Eventresource

  """An edge for our `Agencyevent`. May be used by Relay 1."""
  agencyeventEdge(
    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyeventsEdge
}

"""All input for the create `Agencyfavorite` mutation."""
input CreateAgencyfavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencyfavorite` to be created by this mutation."""
  agencyfavorite: AgencyfavoriteInput!
}

"""The output of our create `Agencyfavorite` mutation."""
type CreateAgencyfavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyfavorite` that was created by this mutation."""
  agencyfavorite: Agencyfavorite

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Agencyfavorite`. May be used by Relay 1."""
  agencyfavoriteEdge(
    """The method to use when ordering `Agencyfavorite`."""
    orderBy: [AgencyfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyfavoritesEdge
}

"""All input for the create `Agencyguide` mutation."""
input CreateAgencyguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencyguide` to be created by this mutation."""
  agencyguide: AgencyguideInput!
}

"""The output of our create `Agencyguide` mutation."""
type CreateAgencyguidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyguide` that was created by this mutation."""
  agencyguide: Agencyguide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyguide`."""
  agency: Agency

  """Reads a single `Guide` that is related to this `Agencyguide`."""
  guide: Guide

  """An edge for our `Agencyguide`. May be used by Relay 1."""
  agencyguideEdge(
    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyguidesEdge
}

"""All input for the create `Agencyhost` mutation."""
input CreateAgencyhostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencyhost` to be created by this mutation."""
  agencyhost: AgencyhostInput!
}

"""The output of our create `Agencyhost` mutation."""
type CreateAgencyhostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyhost` that was created by this mutation."""
  agencyhost: Agencyhost

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyhost`."""
  agency: Agency

  """Reads a single `Hostresource` that is related to this `Agencyhost`."""
  host: Hostresource

  """An edge for our `Agencyhost`. May be used by Relay 1."""
  agencyhostEdge(
    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyhostsEdge
}

"""All input for the create `Agency` mutation."""
input CreateAgencyInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agency` to be created by this mutation."""
  agency: AgencyInput!
}

"""All input for the create `Agencymedialibrary` mutation."""
input CreateAgencymedialibraryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencymedialibrary` to be created by this mutation."""
  agencymedialibrary: AgencymedialibraryInput!
}

"""The output of our create `Agencymedialibrary` mutation."""
type CreateAgencymedialibraryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencymedialibrary` that was created by this mutation."""
  agencymedialibrary: Agencymedialibrary

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencymedialibrary`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Usertable` that is related to this `Agencymedialibrary`.
  """
  usertableByLastModifiedBy: Usertable

  """An edge for our `Agencymedialibrary`. May be used by Relay 1."""
  agencymedialibraryEdge(
    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]
  ): AgencymedialibrariesEdge
}

"""All input for the create `Agencyoffer` mutation."""
input CreateAgencyofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencyoffer` to be created by this mutation."""
  agencyoffer: AgencyofferInput!
}

"""The output of our create `Agencyoffer` mutation."""
type CreateAgencyofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyoffer` that was created by this mutation."""
  agencyoffer: Agencyoffer

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Agencyoffer`. May be used by Relay 1."""
  agencyofferEdge(
    """The method to use when ordering `Agencyoffer`."""
    orderBy: [AgencyoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyoffersEdge
}

"""The output of our create `Agency` mutation."""
type CreateAgencyPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agency` that was created by this mutation."""
  agency: Agency

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Agency`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Agency`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Agency`."""
  createdBy: Usertable

  """Reads a single `Agencyoffer` that is related to this `Agency`."""
  agencyOffer: Agencyoffer

  """Reads a single `Agencydeal` that is related to this `Agency`."""
  agencyDeal: Agencydeal

  """Reads a single `Agencymedialibrary` that is related to this `Agency`."""
  agencyMediaLibrary: Agencymedialibrary

  """Reads a single `Bookingcalendar` that is related to this `Agency`."""
  bookingCalendar: Bookingcalendar

  """An edge for our `Agency`. May be used by Relay 1."""
  agencyEdge(
    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesEdge
}

"""All input for the create `Agencyreview` mutation."""
input CreateAgencyreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencyreview` to be created by this mutation."""
  agencyreview: AgencyreviewInput!
}

"""The output of our create `Agencyreview` mutation."""
type CreateAgencyreviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyreview` that was created by this mutation."""
  agencyreview: Agencyreview

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Agencyreview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Agencyreview`."""
  createdBy: Usertable

  """Reads a single `Agency` that is related to this `Agencyreview`."""
  agencyByAgencyIdTarget: Agency

  """An edge for our `Agencyreview`. May be used by Relay 1."""
  agencyreviewEdge(
    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsEdge
}

"""All input for the create `Agencytourist` mutation."""
input CreateAgencytouristInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencytourist` to be created by this mutation."""
  agencytourist: AgencytouristInput!
}

"""The output of our create `Agencytourist` mutation."""
type CreateAgencytouristPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytourist` that was created by this mutation."""
  agencytourist: Agencytourist

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytourist`."""
  agency: Agency

  """An edge for our `Agencytourist`. May be used by Relay 1."""
  agencytouristEdge(
    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytouristsEdge
}

"""All input for the create `Agencytransport` mutation."""
input CreateAgencytransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencytransport` to be created by this mutation."""
  agencytransport: AgencytransportInput!
}

"""The output of our create `Agencytransport` mutation."""
type CreateAgencytransportPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytransport` that was created by this mutation."""
  agencytransport: Agencytransport

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytransport`."""
  agency: Agency

  """
  Reads a single `Transportresource` that is related to this `Agencytransport`.
  """
  transport: Transportresource

  """An edge for our `Agencytransport`. May be used by Relay 1."""
  agencytransportEdge(
    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytransportsEdge
}

"""All input for the create `Agencytravelgroup` mutation."""
input CreateAgencytravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencytravelgroup` to be created by this mutation."""
  agencytravelgroup: AgencytravelgroupInput!
}

"""The output of our create `Agencytravelgroup` mutation."""
type CreateAgencytravelgroupPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytravelgroup` that was created by this mutation."""
  agencytravelgroup: Agencytravelgroup

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytravelgroup`."""
  agency: Agency

  """
  Reads a single `Travelgroupresource` that is related to this `Agencytravelgroup`.
  """
  travelGroup: Travelgroupresource

  """An edge for our `Agencytravelgroup`. May be used by Relay 1."""
  agencytravelgroupEdge(
    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytravelgroupsEdge
}

"""All input for the create `Agencytripoffer` mutation."""
input CreateAgencytripofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencytripoffer` to be created by this mutation."""
  agencytripoffer: AgencytripofferInput!
}

"""The output of our create `Agencytripoffer` mutation."""
type CreateAgencytripofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytripoffer` that was created by this mutation."""
  agencytripoffer: Agencytripoffer

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytripoffer`."""
  agency: Agency

  """
  Reads a single `Tripofferresource` that is related to this `Agencytripoffer`.
  """
  tripOffer: Tripofferresource

  """An edge for our `Agencytripoffer`. May be used by Relay 1."""
  agencytripofferEdge(
    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytripoffersEdge
}

"""All input for the create `Agencyuser` mutation."""
input CreateAgencyuserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Agencyuser` to be created by this mutation."""
  agencyuser: AgencyuserInput!
}

"""The output of our create `Agencyuser` mutation."""
type CreateAgencyuserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyuser` that was created by this mutation."""
  agencyuser: Agencyuser

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyuser`."""
  agency: Agency

  """Reads a single `Usertable` that is related to this `Agencyuser`."""
  user: Usertable

  """An edge for our `Agencyuser`. May be used by Relay 1."""
  agencyuserEdge(
    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyusersEdge
}

"""All input for the create `Assocaccomodation` mutation."""
input CreateAssocaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Assocaccomodation` to be created by this mutation."""
  assocaccomodation: AssocaccomodationInput!
}

"""The output of our create `Assocaccomodation` mutation."""
type CreateAssocaccomodationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocaccomodation` that was created by this mutation."""
  assocaccomodation: Assocaccomodation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Accomodationresource` that is related to this `Assocaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Assocaccomodation`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocaccomodation`. May be used by Relay 1."""
  assocaccomodationEdge(
    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocaccomodationsEdge
}

"""All input for the create `Assocdestination` mutation."""
input CreateAssocdestinationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Assocdestination` to be created by this mutation."""
  assocdestination: AssocdestinationInput!
}

"""The output of our create `Assocdestination` mutation."""
type CreateAssocdestinationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocdestination` that was created by this mutation."""
  assocdestination: Assocdestination

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Destinationresource` that is related to this `Assocdestination`.
  """
  destination: Destinationresource

  """Reads a single `Agency` that is related to this `Assocdestination`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocdestination`. May be used by Relay 1."""
  assocdestinationEdge(
    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocdestinationsEdge
}

"""All input for the create `Assocevent` mutation."""
input CreateAssoceventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Assocevent` to be created by this mutation."""
  assocevent: AssoceventInput!
}

"""The output of our create `Assocevent` mutation."""
type CreateAssoceventPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocevent` that was created by this mutation."""
  assocevent: Assocevent

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Eventresource` that is related to this `Assocevent`."""
  event: Eventresource

  """Reads a single `Agency` that is related to this `Assocevent`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocevent`. May be used by Relay 1."""
  assoceventEdge(
    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoceventsEdge
}

"""All input for the create `Assocguide` mutation."""
input CreateAssocguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Assocguide` to be created by this mutation."""
  assocguide: AssocguideInput!
}

"""The output of our create `Assocguide` mutation."""
type CreateAssocguidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocguide` that was created by this mutation."""
  assocguide: Assocguide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Guideresource` that is related to this `Assocguide`."""
  guide: Guideresource

  """Reads a single `Agency` that is related to this `Assocguide`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocguide`. May be used by Relay 1."""
  assocguideEdge(
    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocguidesEdge
}

"""All input for the create `Assochost` mutation."""
input CreateAssochostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Assochost` to be created by this mutation."""
  assochost: AssochostInput!
}

"""The output of our create `Assochost` mutation."""
type CreateAssochostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assochost` that was created by this mutation."""
  assochost: Assochost

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Hostresource` that is related to this `Assochost`."""
  host: Hostresource

  """Reads a single `Agency` that is related to this `Assochost`."""
  agencyByAtAgency: Agency

  """An edge for our `Assochost`. May be used by Relay 1."""
  assochostEdge(
    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssochostsEdge
}

"""All input for the create `Assoctransport` mutation."""
input CreateAssoctransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Assoctransport` to be created by this mutation."""
  assoctransport: AssoctransportInput!
}

"""The output of our create `Assoctransport` mutation."""
type CreateAssoctransportPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assoctransport` that was created by this mutation."""
  assoctransport: Assoctransport

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Transportresource` that is related to this `Assoctransport`.
  """
  transport: Transportresource

  """Reads a single `Agency` that is related to this `Assoctransport`."""
  agencyByAtAgency: Agency

  """An edge for our `Assoctransport`. May be used by Relay 1."""
  assoctransportEdge(
    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctransportsEdge
}

"""All input for the create `Assoctravelgroup` mutation."""
input CreateAssoctravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Assoctravelgroup` to be created by this mutation."""
  assoctravelgroup: AssoctravelgroupInput!
}

"""The output of our create `Assoctravelgroup` mutation."""
type CreateAssoctravelgroupPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assoctravelgroup` that was created by this mutation."""
  assoctravelgroup: Assoctravelgroup

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Travelgroupresource` that is related to this `Assoctravelgroup`.
  """
  travelGroup: Travelgroupresource

  """Reads a single `Agency` that is related to this `Assoctravelgroup`."""
  agencyByAtAgency: Agency

  """An edge for our `Assoctravelgroup`. May be used by Relay 1."""
  assoctravelgroupEdge(
    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctravelgroupsEdge
}

"""All input for the create `Auctioninfo` mutation."""
input CreateAuctioninfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Auctioninfo` to be created by this mutation."""
  auctioninfo: AuctioninfoInput!
}

"""The output of our create `Auctioninfo` mutation."""
type CreateAuctioninfoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Auctioninfo` that was created by this mutation."""
  auctioninfo: Auctioninfo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Auctioninfo`."""
  publishedBy: Publisher

  """Reads a single `Usertable` that is related to this `Auctioninfo`."""
  createdBy: Usertable

  """Reads a single `Bid` that is related to this `Auctioninfo`."""
  bid: Bid

  """An edge for our `Auctioninfo`. May be used by Relay 1."""
  auctioninfoEdge(
    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosEdge
}

"""All input for the create `Bid` mutation."""
input CreateBidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Bid` to be created by this mutation."""
  bid: BidInput!
}

"""The output of our create `Bid` mutation."""
type CreateBidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Bid` that was created by this mutation."""
  bid: Bid

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Bid`. May be used by Relay 1."""
  bidEdge(
    """The method to use when ordering `Bid`."""
    orderBy: [BidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BidsEdge
}

"""All input for the create `Bookingcalendar` mutation."""
input CreateBookingcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Bookingcalendar` to be created by this mutation."""
  bookingcalendar: BookingcalendarInput!
}

"""The output of our create `Bookingcalendar` mutation."""
type CreateBookingcalendarPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Bookingcalendar` that was created by this mutation."""
  bookingcalendar: Bookingcalendar

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Bookingcalendar`."""
  createdBy: Usertable

  """An edge for our `Bookingcalendar`. May be used by Relay 1."""
  bookingcalendarEdge(
    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BookingcalendarsEdge
}

"""All input for the create `Calendarentry` mutation."""
input CreateCalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Calendarentry` to be created by this mutation."""
  calendarentry: CalendarentryInput!
}

"""The output of our create `Calendarentry` mutation."""
type CreateCalendarentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Calendarentry` that was created by this mutation."""
  calendarentry: Calendarentry

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Calendarentry`. May be used by Relay 1."""
  calendarentryEdge(
    """The method to use when ordering `Calendarentry`."""
    orderBy: [CalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarentriesEdge
}

"""All input for the create `Commandlogentry` mutation."""
input CreateCommandlogentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Commandlogentry` to be created by this mutation."""
  commandlogentry: CommandlogentryInput!
}

"""The output of our create `Commandlogentry` mutation."""
type CreateCommandlogentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Commandlogentry` that was created by this mutation."""
  commandlogentry: Commandlogentry

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Commandlogentry`."""
  publisherByAtPublisher: Publisher

  """An edge for our `Commandlogentry`. May be used by Relay 1."""
  commandlogentryEdge(
    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CommandlogentriesEdge
}

"""All input for the create `Contact` mutation."""
input CreateContactInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Contact` to be created by this mutation."""
  contact: ContactInput!
}

"""The output of our create `Contact` mutation."""
type CreateContactPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Contact` that was created by this mutation."""
  contact: Contact

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Contact`."""
  createdBy: Usertable

  """An edge for our `Contact`. May be used by Relay 1."""
  contactEdge(
    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ContactsEdge
}

"""All input for the create `Date_` mutation."""
input CreateDateInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Date_` to be created by this mutation."""
  date_: DateInput!
}

"""The output of our create `Date_` mutation."""
type CreateDatePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Date_` that was created by this mutation."""
  date_: Date_

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Date_`. May be used by Relay 1."""
  dateEdge(
    """The method to use when ordering `Date_`."""
    orderBy: [DateSOrderBy!] = [NATURAL]
  ): DateSEdge
}

"""All input for the create `Destinationresource` mutation."""
input CreateDestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Destinationresource` to be created by this mutation."""
  destinationresource: DestinationresourceInput!
}

"""The output of our create `Destinationresource` mutation."""
type CreateDestinationresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Destinationresource` that was created by this mutation."""
  destinationresource: Destinationresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Publisher` that is related to this `Destinationresource`.
  """
  publishedBy: Publisher

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Priceinfo` that is related to this `Destinationresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Bookingcalendar` that is related to this `Destinationresource`.
  """
  activeAtPeriods: Bookingcalendar

  """
  Reads a single `Presentation` that is related to this `Destinationresource`.
  """
  presentation: Presentation

  """Reads a single `Agency` that is related to this `Destinationresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Geocoding` that is related to this `Destinationresource`.
  """
  geoCoding: Geocoding

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  usertableByLastModifiedBy: Usertable

  """An edge for our `Destinationresource`. May be used by Relay 1."""
  destinationresourceEdge(
    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesEdge
}

"""All input for the create `Eventresource` mutation."""
input CreateEventresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Eventresource` to be created by this mutation."""
  eventresource: EventresourceInput!
}

"""The output of our create `Eventresource` mutation."""
type CreateEventresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Eventresource` that was created by this mutation."""
  eventresource: Eventresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Eventresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Eventresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Eventresource`."""
  createdBy: Usertable

  """Reads a single `Contact` that is related to this `Eventresource`."""
  locationAddress: Contact

  """
  Reads a single `Bookingcalendar` that is related to this `Eventresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Eventresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Eventresource`."""
  guideByAtGuide: Guide

  """Reads a single `Presentation` that is related to this `Eventresource`."""
  presentation: Presentation

  """An edge for our `Eventresource`. May be used by Relay 1."""
  eventresourceEdge(
    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesEdge
}

"""All input for the create `Geocoding` mutation."""
input CreateGeocodingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Geocoding` to be created by this mutation."""
  geocoding: GeocodingInput!
}

"""The output of our create `Geocoding` mutation."""
type CreateGeocodingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Geocoding` that was created by this mutation."""
  geocoding: Geocoding

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Geocoding`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Geocoding`."""
  publishedBy: Publisher

  """An edge for our `Geocoding`. May be used by Relay 1."""
  geocodingEdge(
    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GeocodingsEdge
}

"""All input for the create `Guidebid` mutation."""
input CreateGuidebidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guidebid` to be created by this mutation."""
  guidebid: GuidebidInput!
}

"""The output of our create `Guidebid` mutation."""
type CreateGuidebidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidebid` that was created by this mutation."""
  guidebid: Guidebid

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guidebid`. May be used by Relay 1."""
  guidebidEdge(
    """The method to use when ordering `Guidebid`."""
    orderBy: [GuidebidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidebidsEdge
}

"""All input for the create `Guidedeal` mutation."""
input CreateGuidedealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guidedeal` to be created by this mutation."""
  guidedeal: GuidedealInput!
}

"""The output of our create `Guidedeal` mutation."""
type CreateGuidedealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidedeal` that was created by this mutation."""
  guidedeal: Guidedeal

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guidedeal`. May be used by Relay 1."""
  guidedealEdge(
    """The method to use when ordering `Guidedeal`."""
    orderBy: [GuidedealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidedealsEdge
}

"""All input for the create `Guidefavorite` mutation."""
input CreateGuidefavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guidefavorite` to be created by this mutation."""
  guidefavorite: GuidefavoriteInput!
}

"""The output of our create `Guidefavorite` mutation."""
type CreateGuidefavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidefavorite` that was created by this mutation."""
  guidefavorite: Guidefavorite

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guidefavorite`. May be used by Relay 1."""
  guidefavoriteEdge(
    """The method to use when ordering `Guidefavorite`."""
    orderBy: [GuidefavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidefavoritesEdge
}

"""All input for the create `Guide` mutation."""
input CreateGuideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guide` to be created by this mutation."""
  guide: GuideInput!
}

"""All input for the create `Guideoffer` mutation."""
input CreateGuideofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guideoffer` to be created by this mutation."""
  guideoffer: GuideofferInput!
}

"""The output of our create `Guideoffer` mutation."""
type CreateGuideofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guideoffer` that was created by this mutation."""
  guideoffer: Guideoffer

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guideoffer`. May be used by Relay 1."""
  guideofferEdge(
    """The method to use when ordering `Guideoffer`."""
    orderBy: [GuideoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideoffersEdge
}

"""The output of our create `Guide` mutation."""
type CreateGuidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guide` that was created by this mutation."""
  guide: Guide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Guide`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Guide`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guide`."""
  createdBy: Usertable

  """Reads a single `Agency` that is related to this `Guide`."""
  agencyByAtAgency: Agency

  """Reads a single `Languagelevel` that is related to this `Guide`."""
  languageLevel: Languagelevel

  """Reads a single `Guideoffer` that is related to this `Guide`."""
  guideOffer: Guideoffer

  """Reads a single `Guidebid` that is related to this `Guide`."""
  guideBid: Guidebid

  """Reads a single `Guidefavorite` that is related to this `Guide`."""
  guideFavorite: Guidefavorite

  """Reads a single `Guidedeal` that is related to this `Guide`."""
  guideDeal: Guidedeal

  """Reads a single `Bookingcalendar` that is related to this `Guide`."""
  bookingCalendar: Bookingcalendar

  """An edge for our `Guide`. May be used by Relay 1."""
  guideEdge(
    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesEdge
}

"""All input for the create `Guideresource` mutation."""
input CreateGuideresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guideresource` to be created by this mutation."""
  guideresource: GuideresourceInput!
}

"""The output of our create `Guideresource` mutation."""
type CreateGuideresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guideresource` that was created by this mutation."""
  guideresource: Guideresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Guideresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guideresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guideresource`."""
  guideByAtGuide: Guide

  """Reads a single `Timerange` that is related to this `Guideresource`."""
  timeRange: Timerange

  """Reads a single `Priceinfo` that is related to this `Guideresource`."""
  priceInfo: Priceinfo

  """Reads a single `Agency` that is related to this `Guideresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Guideresource`.
  """
  bookingCalendar: Bookingcalendar

  """An edge for our `Guideresource`. May be used by Relay 1."""
  guideresourceEdge(
    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesEdge
}

"""All input for the create `Guidereview` mutation."""
input CreateGuidereviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Guidereview` to be created by this mutation."""
  guidereview: GuidereviewInput!
}

"""The output of our create `Guidereview` mutation."""
type CreateGuidereviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidereview` that was created by this mutation."""
  guidereview: Guidereview

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Guidereview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guidereview`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guidereview`."""
  guideByGuideIdTarget: Guide

  """An edge for our `Guidereview`. May be used by Relay 1."""
  guidereviewEdge(
    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsEdge
}

"""All input for the create `Hostresource` mutation."""
input CreateHostresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Hostresource` to be created by this mutation."""
  hostresource: HostresourceInput!
}

"""The output of our create `Hostresource` mutation."""
type CreateHostresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Hostresource` that was created by this mutation."""
  hostresource: Hostresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Hostresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Hostresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Hostresource`."""
  createdBy: Usertable

  """
  Reads a single `Accomodationresource` that is related to this `Hostresource`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Hostresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Hostresource`."""
  guideByAtGuide: Guide

  """Reads a single `Contact` that is related to this `Hostresource`."""
  addressInfo: Contact

  """Reads a single `Presentation` that is related to this `Hostresource`."""
  presentation: Presentation

  """
  Reads a single `Bookingcalendar` that is related to this `Hostresource`.
  """
  bookingCalendar: Bookingcalendar

  """An edge for our `Hostresource`. May be used by Relay 1."""
  hostresourceEdge(
    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesEdge
}

"""All input for the create `Languagelevel` mutation."""
input CreateLanguagelevelInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Languagelevel` to be created by this mutation."""
  languagelevel: LanguagelevelInput!
}

"""The output of our create `Languagelevel` mutation."""
type CreateLanguagelevelPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Languagelevel` that was created by this mutation."""
  languagelevel: Languagelevel

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Languagelevel`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Languagelevel`."""
  publisher: Publisher

  """An edge for our `Languagelevel`. May be used by Relay 1."""
  languagelevelEdge(
    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LanguagelevelsEdge
}

"""All input for the create `Mediadestinationresource` mutation."""
input CreateMediadestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Mediadestinationresource` to be created by this mutation."""
  mediadestinationresource: MediadestinationresourceInput!
}

"""The output of our create `Mediadestinationresource` mutation."""
type CreateMediadestinationresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Mediadestinationresource` that was created by this mutation."""
  mediadestinationresource: Mediadestinationresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Mediadestinationresource`.
  """
  agencyByAtAgency: Agency

  """
  Reads a single `Destinationresource` that is related to this `Mediadestinationresource`.
  """
  destinationresourceByAtDestination: Destinationresource

  """
  Reads a single `Usertable` that is related to this `Mediadestinationresource`.
  """
  usertableByLastModifiedBy: Usertable

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMainImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByGuideImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMapImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByThumbnailImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery1: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery2: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery3: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery4: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery5: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery6: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery7: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery8: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery9: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery10: Medialocation

  """An edge for our `Mediadestinationresource`. May be used by Relay 1."""
  mediadestinationresourceEdge(
    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesEdge
}

"""All input for the create `Medialocation` mutation."""
input CreateMedialocationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Medialocation` to be created by this mutation."""
  medialocation: MedialocationInput!
}

"""The output of our create `Medialocation` mutation."""
type CreateMedialocationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Medialocation` that was created by this mutation."""
  medialocation: Medialocation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Medialocation`."""
  agencyByAtAgency: Agency

  """An edge for our `Medialocation`. May be used by Relay 1."""
  medialocationEdge(
    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MedialocationsEdge
}

"""All input for the create `Presentation` mutation."""
input CreatePresentationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Presentation` to be created by this mutation."""
  presentation: PresentationInput!
}

"""The output of our create `Presentation` mutation."""
type CreatePresentationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Presentation` that was created by this mutation."""
  presentation: Presentation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Presentation`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Presentation`."""
  createdBy: Usertable

  """An edge for our `Presentation`. May be used by Relay 1."""
  presentationEdge(
    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PresentationsEdge
}

"""All input for the create `Priceinfo` mutation."""
input CreatePriceinfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Priceinfo` to be created by this mutation."""
  priceinfo: PriceinfoInput!
}

"""The output of our create `Priceinfo` mutation."""
type CreatePriceinfoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Priceinfo` that was created by this mutation."""
  priceinfo: Priceinfo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Priceinfo`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Priceinfo`."""
  createdBy: Usertable

  """Reads a single `Bid` that is related to this `Priceinfo`."""
  bid: Bid

  """An edge for our `Priceinfo`. May be used by Relay 1."""
  priceinfoEdge(
    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosEdge
}

"""All input for the create `Publisher` mutation."""
input CreatePublisherInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Publisher` to be created by this mutation."""
  publisher: PublisherInput!
}

"""The output of our create `Publisher` mutation."""
type CreatePublisherPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Publisher` that was created by this mutation."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Publisher`."""
  createdBy: Usertable

  """An edge for our `Publisher`. May be used by Relay 1."""
  publisherEdge(
    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]
  ): PublishersEdge
}

"""All input for the create `Review` mutation."""
input CreateReviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Review` to be created by this mutation."""
  review: ReviewInput!
}

"""The output of our create `Review` mutation."""
type CreateReviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Review` that was created by this mutation."""
  review: Review

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Review`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Review`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Review`."""
  publisherByPublisherTarget: Publisher

  """An edge for our `Review`. May be used by Relay 1."""
  reviewEdge(
    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsEdge
}

"""All input for the create `Roomcalendarentry` mutation."""
input CreateRoomcalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Roomcalendarentry` to be created by this mutation."""
  roomcalendarentry: RoomcalendarentryInput!
}

"""The output of our create `Roomcalendarentry` mutation."""
type CreateRoomcalendarentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Roomcalendarentry` that was created by this mutation."""
  roomcalendarentry: Roomcalendarentry

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Roomcalendar` that is related to this `Roomcalendarentry`.
  """
  roomcalendarByAtRoomCalendar: Roomcalendar

  """An edge for our `Roomcalendarentry`. May be used by Relay 1."""
  roomcalendarentryEdge(
    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarentriesEdge
}

"""All input for the create `Roomcalendar` mutation."""
input CreateRoomcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Roomcalendar` to be created by this mutation."""
  roomcalendar: RoomcalendarInput!
}

"""The output of our create `Roomcalendar` mutation."""
type CreateRoomcalendarPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Roomcalendar` that was created by this mutation."""
  roomcalendar: Roomcalendar

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Roomcalendar`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Roomcalendar`."""
  createdBy: Usertable

  """
  Reads a single `Roomcalendarentry` that is related to this `Roomcalendar`.
  """
  calendarentry: Roomcalendarentry

  """An edge for our `Roomcalendar`. May be used by Relay 1."""
  roomcalendarEdge(
    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsEdge
}

"""All input for the create `Roomlist` mutation."""
input CreateRoomlistInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Roomlist` to be created by this mutation."""
  roomlist: RoomlistInput!
}

"""The output of our create `Roomlist` mutation."""
type CreateRoomlistPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Roomlist` that was created by this mutation."""
  roomlist: Roomlist

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Accomodationresource` that is related to this `Roomlist`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Roomcalendar` that is related to this `Roomlist`."""
  roomCalendar: Roomcalendar

  """An edge for our `Roomlist`. May be used by Relay 1."""
  roomlistEdge(
    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomlistsEdge
}

"""All input for the create `Similarbytriptypeaccomodation` mutation."""
input CreateSimilarbytriptypeaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypeaccomodation` to be created by this mutation."""
  similarbytriptypeaccomodation: SimilarbytriptypeaccomodationInput!
}

"""The output of our create `Similarbytriptypeaccomodation` mutation."""
type CreateSimilarbytriptypeaccomodationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypeaccomodation` that was created by this mutation."""
  similarbytriptypeaccomodation: Similarbytriptypeaccomodation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeaccomodation`.
  """
  agencyByAtAgency: Agency

  """
  An edge for our `Similarbytriptypeaccomodation`. May be used by Relay 1.
  """
  similarbytriptypeaccomodationEdge(
    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeaccomodationsEdge
}

"""All input for the create `Similarbytriptypedestination` mutation."""
input CreateSimilarbytriptypedestinationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypedestination` to be created by this mutation."""
  similarbytriptypedestination: SimilarbytriptypedestinationInput!
}

"""The output of our create `Similarbytriptypedestination` mutation."""
type CreateSimilarbytriptypedestinationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypedestination` that was created by this mutation."""
  similarbytriptypedestination: Similarbytriptypedestination

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypedestination`.
  """
  agencyByAtAgency: Agency

  """
  An edge for our `Similarbytriptypedestination`. May be used by Relay 1.
  """
  similarbytriptypedestinationEdge(
    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypedestinationsEdge
}

"""All input for the create `Similarbytriptypeevent` mutation."""
input CreateSimilarbytriptypeeventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypeevent` to be created by this mutation."""
  similarbytriptypeevent: SimilarbytriptypeeventInput!
}

"""The output of our create `Similarbytriptypeevent` mutation."""
type CreateSimilarbytriptypeeventPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypeevent` that was created by this mutation."""
  similarbytriptypeevent: Similarbytriptypeevent

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeevent`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypeevent`. May be used by Relay 1."""
  similarbytriptypeeventEdge(
    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeeventsEdge
}

"""All input for the create `Similarbytriptypeguide` mutation."""
input CreateSimilarbytriptypeguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypeguide` to be created by this mutation."""
  similarbytriptypeguide: SimilarbytriptypeguideInput!
}

"""The output of our create `Similarbytriptypeguide` mutation."""
type CreateSimilarbytriptypeguidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypeguide` that was created by this mutation."""
  similarbytriptypeguide: Similarbytriptypeguide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeguide`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypeguide`. May be used by Relay 1."""
  similarbytriptypeguideEdge(
    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeguidesEdge
}

"""All input for the create `Similarbytriptypehost` mutation."""
input CreateSimilarbytriptypehostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypehost` to be created by this mutation."""
  similarbytriptypehost: SimilarbytriptypehostInput!
}

"""The output of our create `Similarbytriptypehost` mutation."""
type CreateSimilarbytriptypehostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypehost` that was created by this mutation."""
  similarbytriptypehost: Similarbytriptypehost

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypehost`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypehost`. May be used by Relay 1."""
  similarbytriptypehostEdge(
    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypehostsEdge
}

"""All input for the create `Similarbytriptypetransport` mutation."""
input CreateSimilarbytriptypetransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypetransport` to be created by this mutation."""
  similarbytriptypetransport: SimilarbytriptypetransportInput!
}

"""The output of our create `Similarbytriptypetransport` mutation."""
type CreateSimilarbytriptypetransportPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypetransport` that was created by this mutation."""
  similarbytriptypetransport: Similarbytriptypetransport

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypetransport`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypetransport`. May be used by Relay 1."""
  similarbytriptypetransportEdge(
    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetransportsEdge
}

"""All input for the create `Similarbytriptypetravelgroup` mutation."""
input CreateSimilarbytriptypetravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Similarbytriptypetravelgroup` to be created by this mutation."""
  similarbytriptypetravelgroup: SimilarbytriptypetravelgroupInput!
}

"""The output of our create `Similarbytriptypetravelgroup` mutation."""
type CreateSimilarbytriptypetravelgroupPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypetravelgroup` that was created by this mutation."""
  similarbytriptypetravelgroup: Similarbytriptypetravelgroup

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypetravelgroup`.
  """
  agencyByAtAgency: Agency

  """
  An edge for our `Similarbytriptypetravelgroup`. May be used by Relay 1.
  """
  similarbytriptypetravelgroupEdge(
    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetravelgroupsEdge
}

"""All input for the create `Timerange` mutation."""
input CreateTimerangeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Timerange` to be created by this mutation."""
  timerange: TimerangeInput!
}

"""The output of our create `Timerange` mutation."""
type CreateTimerangePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Timerange` that was created by this mutation."""
  timerange: Timerange

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Timerange`. May be used by Relay 1."""
  timerangeEdge(
    """The method to use when ordering `Timerange`."""
    orderBy: [TimerangesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TimerangesEdge
}

"""All input for the create `Touristbid` mutation."""
input CreateTouristbidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristbid` to be created by this mutation."""
  touristbid: TouristbidInput!
}

"""The output of our create `Touristbid` mutation."""
type CreateTouristbidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristbid` that was created by this mutation."""
  touristbid: Touristbid

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristbid`. May be used by Relay 1."""
  touristbidEdge(
    """The method to use when ordering `Touristbid`."""
    orderBy: [TouristbidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristbidsEdge
}

"""All input for the create `Touristdeal` mutation."""
input CreateTouristdealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristdeal` to be created by this mutation."""
  touristdeal: TouristdealInput!
}

"""The output of our create `Touristdeal` mutation."""
type CreateTouristdealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristdeal` that was created by this mutation."""
  touristdeal: Touristdeal

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristdeal`. May be used by Relay 1."""
  touristdealEdge(
    """The method to use when ordering `Touristdeal`."""
    orderBy: [TouristdealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristdealsEdge
}

"""All input for the create `Touristfavorite` mutation."""
input CreateTouristfavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristfavorite` to be created by this mutation."""
  touristfavorite: TouristfavoriteInput!
}

"""The output of our create `Touristfavorite` mutation."""
type CreateTouristfavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristfavorite` that was created by this mutation."""
  touristfavorite: Touristfavorite

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristfavorite`. May be used by Relay 1."""
  touristfavoriteEdge(
    """The method to use when ordering `Touristfavorite`."""
    orderBy: [TouristfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristfavoritesEdge
}

"""All input for the create `Tourist` mutation."""
input CreateTouristInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Tourist` to be created by this mutation."""
  tourist: TouristInput!
}

"""All input for the create `Touristoffer` mutation."""
input CreateTouristofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristoffer` to be created by this mutation."""
  touristoffer: TouristofferInput!
}

"""The output of our create `Touristoffer` mutation."""
type CreateTouristofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristoffer` that was created by this mutation."""
  touristoffer: Touristoffer

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristoffer`. May be used by Relay 1."""
  touristofferEdge(
    """The method to use when ordering `Touristoffer`."""
    orderBy: [TouristoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristoffersEdge
}

"""The output of our create `Tourist` mutation."""
type CreateTouristPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tourist` that was created by this mutation."""
  tourist: Tourist

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Tourist`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Tourist`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Tourist`."""
  createdBy: Usertable

  """Reads a single `Touristoffer` that is related to this `Tourist`."""
  touristOffer: Touristoffer

  """Reads a single `Touristfavorite` that is related to this `Tourist`."""
  touristFavorite: Touristfavorite

  """Reads a single `Touristbid` that is related to this `Tourist`."""
  touristBid: Touristbid

  """Reads a single `Touristdeal` that is related to this `Tourist`."""
  touristDeal: Touristdeal

  """An edge for our `Tourist`. May be used by Relay 1."""
  touristEdge(
    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsEdge
}

"""All input for the create `Touristresource` mutation."""
input CreateTouristresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristresource` to be created by this mutation."""
  touristresource: TouristresourceInput!
}

"""The output of our create `Touristresource` mutation."""
type CreateTouristresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristresource` that was created by this mutation."""
  touristresource: Touristresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Touristresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Touristresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Touristresource`."""
  createdBy: Usertable

  """
  Reads a single `Travelgroupresource` that is related to this `Touristresource`.
  """
  travelgroupresourceByAtTravelGroup: Travelgroupresource

  """Reads a single `Agency` that is related to this `Touristresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Touristresource`."""
  guideByAtGuide: Guide

  """Reads a single `Priceinfo` that is related to this `Touristresource`."""
  priceInfo: Priceinfo

  """
  Reads a single `Bookingcalendar` that is related to this `Touristresource`.
  """
  travellingCalendar: Bookingcalendar

  """An edge for our `Touristresource`. May be used by Relay 1."""
  touristresourceEdge(
    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesEdge
}

"""All input for the create `Touristreview` mutation."""
input CreateTouristreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Touristreview` to be created by this mutation."""
  touristreview: TouristreviewInput!
}

"""The output of our create `Touristreview` mutation."""
type CreateTouristreviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristreview` that was created by this mutation."""
  touristreview: Touristreview

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Touristreview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Touristreview`."""
  createdBy: Usertable

  """Reads a single `Tourist` that is related to this `Touristreview`."""
  touristByTouristIdTarget: Tourist

  """An edge for our `Touristreview`. May be used by Relay 1."""
  touristreviewEdge(
    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsEdge
}

"""All input for the create `Transportresource` mutation."""
input CreateTransportresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Transportresource` to be created by this mutation."""
  transportresource: TransportresourceInput!
}

"""The output of our create `Transportresource` mutation."""
type CreateTransportresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Transportresource` that was created by this mutation."""
  transportresource: Transportresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Transportresource`."""
  contact: Contact

  """
  Reads a single `Publisher` that is related to this `Transportresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Transportresource`.
  """
  createdBy: Usertable

  """Reads a single `Contact` that is related to this `Transportresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Transportresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Transportresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Presentation` that is related to this `Transportresource`.
  """
  presentation: Presentation

  """
  Reads a single `Bookingcalendar` that is related to this `Transportresource`.
  """
  bookingCalendar: Bookingcalendar

  """An edge for our `Transportresource`. May be used by Relay 1."""
  transportresourceEdge(
    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesEdge
}

"""All input for the create `Travelgroupresource` mutation."""
input CreateTravelgroupresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Travelgroupresource` to be created by this mutation."""
  travelgroupresource: TravelgroupresourceInput!
}

"""The output of our create `Travelgroupresource` mutation."""
type CreateTravelgroupresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Travelgroupresource` that was created by this mutation."""
  travelgroupresource: Travelgroupresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Contact` that is related to this `Travelgroupresource`.
  """
  contact: Contact

  """
  Reads a single `Publisher` that is related to this `Travelgroupresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Travelgroupresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Bookingcalendar` that is related to this `Travelgroupresource`.
  """
  bookingCalendar: Bookingcalendar

  """Reads a single `Agency` that is related to this `Travelgroupresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Travelgroupresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Tripofferresource` that is related to this `Travelgroupresource`.
  """
  tripofferresourceByAtTripOfferResource: Tripofferresource

  """
  Reads a single `Touristresource` that is related to this `Travelgroupresource`.
  """
  touristresourceByAtTouristResource: Touristresource

  """An edge for our `Travelgroupresource`. May be used by Relay 1."""
  travelgroupresourceEdge(
    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesEdge
}

"""All input for the create `Tripofferresource` mutation."""
input CreateTripofferresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Tripofferresource` to be created by this mutation."""
  tripofferresource: TripofferresourceInput!
}

"""The output of our create `Tripofferresource` mutation."""
type CreateTripofferresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tripofferresource` that was created by this mutation."""
  tripofferresource: Tripofferresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Publisher` that is related to this `Tripofferresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Tripofferresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Bookingcalendar` that is related to this `Tripofferresource`.
  """
  availableAtCalendar: Bookingcalendar

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideResponsible: Guide

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideSecondary: Guide

  """Reads a single `Agency` that is related to this `Tripofferresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Priceinfo` that is related to this `Tripofferresource`.
  """
  priceInfo: Priceinfo

  """An edge for our `Tripofferresource`. May be used by Relay 1."""
  tripofferresourceEdge(
    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesEdge
}

"""All input for the create `Triptype` mutation."""
input CreateTriptypeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Triptype` to be created by this mutation."""
  triptype: TriptypeInput!
}

"""The output of our create `Triptype` mutation."""
type CreateTriptypePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Triptype` that was created by this mutation."""
  triptype: Triptype

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Triptype`."""
  agencyByAtAgency: Agency

  """An edge for our `Triptype`. May be used by Relay 1."""
  triptypeEdge(
    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TriptypesEdge
}

"""All input for the create `Usertable` mutation."""
input CreateUsertableInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Usertable` to be created by this mutation."""
  usertable: UsertableInput!
}

"""The output of our create `Usertable` mutation."""
type CreateUsertablePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Usertable` that was created by this mutation."""
  usertable: Usertable

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Account` that is related to this `Usertable`."""
  accountById: Account

  """Reads a single `Agency` that is related to this `Usertable`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Usertable`."""
  guideByAtGuide: Guide

  """Reads a single `Tourist` that is related to this `Usertable`."""
  touristByAtTourist: Tourist

  """An edge for our `Usertable`. May be used by Relay 1."""
  usertableEdge(
    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesEdge
}

"""A location in a connection that can be used for resuming pagination."""
scalar Cursor

"""The day, does not include a time."""
scalar Date

type Date_ {
  useTimeStamp: Boolean!
  timeStamp: Datetime
  year: String
  month: String
  day: String
  allDayEvent: Boolean!
  hour: String
  minute: String
  timeCreated: Datetime
}

"""An input for mutations affecting `Date_`"""
input DateInput {
  useTimeStamp: Boolean
  timeStamp: Datetime
  year: String
  month: String
  day: String
  allDayEvent: Boolean
  hour: String
  minute: String
  timeCreated: Datetime
}

"""A connection to a list of `Date_` values."""
type DateSConnection {
  """A list of `Date_` objects."""
  nodes: [Date_!]!

  """
  A list of edges which contains the `Date_` and cursor to aid in pagination.
  """
  edges: [DateSEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Date_` you could get from the connection."""
  totalCount: Int!
}

"""A `Date_` edge in the connection."""
type DateSEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Date_` at the end of the edge."""
  node: Date_!
}

"""Methods to use when ordering `Date_`."""
enum DateSOrderBy {
  NATURAL
}

"""
A point in time as described by the [ISO
8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.
"""
scalar Datetime

"""All input for the `deleteAccomodationresourceByNodeId` mutation."""
input DeleteAccomodationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Accomodationresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAccomodationresource` mutation."""
input DeleteAccomodationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Accomodationresource` mutation."""
type DeleteAccomodationresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Accomodationresource` that was deleted by this mutation."""
  accomodationresource: Accomodationresource
  deletedAccomodationresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  contact: Contact

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  address: Contact

  """
  Reads a single `Bookingcalendar` that is related to this `Accomodationresource`.
  """
  locationCalendar: Bookingcalendar

  """
  Reads a single `Publisher` that is related to this `Accomodationresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Accomodationresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Presentation` that is related to this `Accomodationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Agency` that is related to this `Accomodationresource`.
  """
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Accomodationresource`."""
  guideByAtGuide: Guide

  """An edge for our `Accomodationresource`. May be used by Relay 1."""
  accomodationresourceEdge(
    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesEdge
}

"""All input for the `deleteAccountByNodeId` mutation."""
input DeleteAccountByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Account` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAccountingByNodeId` mutation."""
input DeleteAccountingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Accounting` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAccounting` mutation."""
input DeleteAccountingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Accounting` mutation."""
type DeleteAccountingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Accounting` that was deleted by this mutation."""
  accounting: Accounting
  deletedAccountingNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Accounting`."""
  publisher: Publisher

  """An edge for our `Accounting`. May be used by Relay 1."""
  accountingEdge(
    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountingsEdge
}

"""All input for the `deleteAccount` mutation."""
input DeleteAccountInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Account` mutation."""
type DeleteAccountPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Account` that was deleted by this mutation."""
  account: Account
  deletedAccountNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Account`. May be used by Relay 1."""
  accountEdge(
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountsEdge
}

"""All input for the `deleteAgencyaccomodationByNodeId` mutation."""
input DeleteAgencyaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyaccomodation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyaccomodation` mutation."""
input DeleteAgencyaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  agencyId: Int!
  accomodationId: Int!
}

"""The output of our delete `Agencyaccomodation` mutation."""
type DeleteAgencyaccomodationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyaccomodation` that was deleted by this mutation."""
  agencyaccomodation: Agencyaccomodation
  deletedAgencyaccomodationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyaccomodation`."""
  agency: Agency

  """
  Reads a single `Accomodationresource` that is related to this `Agencyaccomodation`.
  """
  accomodation: Accomodationresource

  """An edge for our `Agencyaccomodation`. May be used by Relay 1."""
  agencyaccomodationEdge(
    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyaccomodationsEdge
}

"""All input for the `deleteAgencybidByNodeId` mutation."""
input DeleteAgencybidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencybid` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencybid` mutation."""
input DeleteAgencybidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Agencybid` mutation."""
type DeleteAgencybidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencybid` that was deleted by this mutation."""
  agencybid: Agencybid
  deletedAgencybidNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencybid`."""
  agency: Agency

  """An edge for our `Agencybid`. May be used by Relay 1."""
  agencybidEdge(
    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencybidsEdge
}

"""All input for the `deleteAgencyByNodeId` mutation."""
input DeleteAgencyByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agency` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencydealByNodeId` mutation."""
input DeleteAgencydealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencydeal` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencydeal` mutation."""
input DeleteAgencydealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Agencydeal` mutation."""
type DeleteAgencydealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencydeal` that was deleted by this mutation."""
  agencydeal: Agencydeal
  deletedAgencydealNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Agencydeal`. May be used by Relay 1."""
  agencydealEdge(
    """The method to use when ordering `Agencydeal`."""
    orderBy: [AgencydealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencydealsEdge
}

"""All input for the `deleteAgencyeventByNodeId` mutation."""
input DeleteAgencyeventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyevent` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyevent` mutation."""
input DeleteAgencyeventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  agencyId: Int!
  eventId: Int!
}

"""The output of our delete `Agencyevent` mutation."""
type DeleteAgencyeventPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyevent` that was deleted by this mutation."""
  agencyevent: Agencyevent
  deletedAgencyeventNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyevent`."""
  agency: Agency

  """Reads a single `Eventresource` that is related to this `Agencyevent`."""
  event: Eventresource

  """An edge for our `Agencyevent`. May be used by Relay 1."""
  agencyeventEdge(
    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyeventsEdge
}

"""All input for the `deleteAgencyfavoriteByNodeId` mutation."""
input DeleteAgencyfavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyfavorite` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyfavorite` mutation."""
input DeleteAgencyfavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  resourceId: Int!
  resourceType: Resourcetype!
  atAgency: Int!
}

"""The output of our delete `Agencyfavorite` mutation."""
type DeleteAgencyfavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyfavorite` that was deleted by this mutation."""
  agencyfavorite: Agencyfavorite
  deletedAgencyfavoriteNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Agencyfavorite`. May be used by Relay 1."""
  agencyfavoriteEdge(
    """The method to use when ordering `Agencyfavorite`."""
    orderBy: [AgencyfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyfavoritesEdge
}

"""All input for the `deleteAgencyguideByNodeId` mutation."""
input DeleteAgencyguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyguide` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyguide` mutation."""
input DeleteAgencyguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  agencyId: Int!
  guideId: Int!
}

"""The output of our delete `Agencyguide` mutation."""
type DeleteAgencyguidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyguide` that was deleted by this mutation."""
  agencyguide: Agencyguide
  deletedAgencyguideNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyguide`."""
  agency: Agency

  """Reads a single `Guide` that is related to this `Agencyguide`."""
  guide: Guide

  """An edge for our `Agencyguide`. May be used by Relay 1."""
  agencyguideEdge(
    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyguidesEdge
}

"""All input for the `deleteAgencyhostByNodeId` mutation."""
input DeleteAgencyhostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyhost` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyhost` mutation."""
input DeleteAgencyhostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  agencyId: Int!
  hostId: Int!
}

"""The output of our delete `Agencyhost` mutation."""
type DeleteAgencyhostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyhost` that was deleted by this mutation."""
  agencyhost: Agencyhost
  deletedAgencyhostNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyhost`."""
  agency: Agency

  """Reads a single `Hostresource` that is related to this `Agencyhost`."""
  host: Hostresource

  """An edge for our `Agencyhost`. May be used by Relay 1."""
  agencyhostEdge(
    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyhostsEdge
}

"""All input for the `deleteAgency` mutation."""
input DeleteAgencyInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteAgencymedialibraryById` mutation."""
input DeleteAgencymedialibraryByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Agencymedialibrary` mutation."""
type DeleteAgencymedialibraryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencymedialibrary` that was deleted by this mutation."""
  agencymedialibrary: Agencymedialibrary
  deletedAgencymedialibraryNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencymedialibrary`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Usertable` that is related to this `Agencymedialibrary`.
  """
  usertableByLastModifiedBy: Usertable

  """An edge for our `Agencymedialibrary`. May be used by Relay 1."""
  agencymedialibraryEdge(
    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]
  ): AgencymedialibrariesEdge
}

"""All input for the `deleteAgencyofferByNodeId` mutation."""
input DeleteAgencyofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyoffer` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyoffer` mutation."""
input DeleteAgencyofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Agencyoffer` mutation."""
type DeleteAgencyofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyoffer` that was deleted by this mutation."""
  agencyoffer: Agencyoffer
  deletedAgencyofferNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Agencyoffer`. May be used by Relay 1."""
  agencyofferEdge(
    """The method to use when ordering `Agencyoffer`."""
    orderBy: [AgencyoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyoffersEdge
}

"""The output of our delete `Agency` mutation."""
type DeleteAgencyPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agency` that was deleted by this mutation."""
  agency: Agency
  deletedAgencyNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Agency`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Agency`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Agency`."""
  createdBy: Usertable

  """Reads a single `Agencyoffer` that is related to this `Agency`."""
  agencyOffer: Agencyoffer

  """Reads a single `Agencydeal` that is related to this `Agency`."""
  agencyDeal: Agencydeal

  """Reads a single `Agencymedialibrary` that is related to this `Agency`."""
  agencyMediaLibrary: Agencymedialibrary

  """Reads a single `Bookingcalendar` that is related to this `Agency`."""
  bookingCalendar: Bookingcalendar

  """An edge for our `Agency`. May be used by Relay 1."""
  agencyEdge(
    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesEdge
}

"""All input for the `deleteAgencyreviewByNodeId` mutation."""
input DeleteAgencyreviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyreview` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyreview` mutation."""
input DeleteAgencyreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Agencyreview` mutation."""
type DeleteAgencyreviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyreview` that was deleted by this mutation."""
  agencyreview: Agencyreview
  deletedAgencyreviewNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Agencyreview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Agencyreview`."""
  createdBy: Usertable

  """Reads a single `Agency` that is related to this `Agencyreview`."""
  agencyByAgencyIdTarget: Agency

  """An edge for our `Agencyreview`. May be used by Relay 1."""
  agencyreviewEdge(
    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsEdge
}

"""All input for the `deleteAgencytouristByNodeId` mutation."""
input DeleteAgencytouristByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytourist` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencytourist` mutation."""
input DeleteAgencytouristInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  agencyId: Int!
  touristId: Int!
}

"""The output of our delete `Agencytourist` mutation."""
type DeleteAgencytouristPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytourist` that was deleted by this mutation."""
  agencytourist: Agencytourist
  deletedAgencytouristNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytourist`."""
  agency: Agency

  """An edge for our `Agencytourist`. May be used by Relay 1."""
  agencytouristEdge(
    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytouristsEdge
}

"""All input for the `deleteAgencytransportByNodeId` mutation."""
input DeleteAgencytransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytransport` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencytransport` mutation."""
input DeleteAgencytransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  agencyId: Int!
  transportId: Int!
}

"""The output of our delete `Agencytransport` mutation."""
type DeleteAgencytransportPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytransport` that was deleted by this mutation."""
  agencytransport: Agencytransport
  deletedAgencytransportNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytransport`."""
  agency: Agency

  """
  Reads a single `Transportresource` that is related to this `Agencytransport`.
  """
  transport: Transportresource

  """An edge for our `Agencytransport`. May be used by Relay 1."""
  agencytransportEdge(
    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytransportsEdge
}

"""All input for the `deleteAgencytravelgroupByNodeId` mutation."""
input DeleteAgencytravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytravelgroup` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencytravelgroup` mutation."""
input DeleteAgencytravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  agencyId: Int!
  travelGroupId: Int!
}

"""The output of our delete `Agencytravelgroup` mutation."""
type DeleteAgencytravelgroupPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytravelgroup` that was deleted by this mutation."""
  agencytravelgroup: Agencytravelgroup
  deletedAgencytravelgroupNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytravelgroup`."""
  agency: Agency

  """
  Reads a single `Travelgroupresource` that is related to this `Agencytravelgroup`.
  """
  travelGroup: Travelgroupresource

  """An edge for our `Agencytravelgroup`. May be used by Relay 1."""
  agencytravelgroupEdge(
    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytravelgroupsEdge
}

"""All input for the `deleteAgencytripofferByNodeId` mutation."""
input DeleteAgencytripofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytripoffer` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencytripoffer` mutation."""
input DeleteAgencytripofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  agencyId: Int!
  tripOfferId: Int!
}

"""The output of our delete `Agencytripoffer` mutation."""
type DeleteAgencytripofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytripoffer` that was deleted by this mutation."""
  agencytripoffer: Agencytripoffer
  deletedAgencytripofferNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytripoffer`."""
  agency: Agency

  """
  Reads a single `Tripofferresource` that is related to this `Agencytripoffer`.
  """
  tripOffer: Tripofferresource

  """An edge for our `Agencytripoffer`. May be used by Relay 1."""
  agencytripofferEdge(
    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytripoffersEdge
}

"""All input for the `deleteAgencyuserByNodeId` mutation."""
input DeleteAgencyuserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyuser` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAgencyuser` mutation."""
input DeleteAgencyuserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  agencyId: Int!
  userId: Int!
}

"""The output of our delete `Agencyuser` mutation."""
type DeleteAgencyuserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyuser` that was deleted by this mutation."""
  agencyuser: Agencyuser
  deletedAgencyuserNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyuser`."""
  agency: Agency

  """Reads a single `Usertable` that is related to this `Agencyuser`."""
  user: Usertable

  """An edge for our `Agencyuser`. May be used by Relay 1."""
  agencyuserEdge(
    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyusersEdge
}

"""All input for the `deleteAssocaccomodationByNodeId` mutation."""
input DeleteAssocaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocaccomodation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssocaccomodation` mutation."""
input DeleteAssocaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  accomodationId: Int!
}

"""The output of our delete `Assocaccomodation` mutation."""
type DeleteAssocaccomodationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocaccomodation` that was deleted by this mutation."""
  assocaccomodation: Assocaccomodation
  deletedAssocaccomodationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Accomodationresource` that is related to this `Assocaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Assocaccomodation`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocaccomodation`. May be used by Relay 1."""
  assocaccomodationEdge(
    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocaccomodationsEdge
}

"""All input for the `deleteAssocdestinationByNodeId` mutation."""
input DeleteAssocdestinationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocdestination` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssocdestination` mutation."""
input DeleteAssocdestinationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  destinationId: Int!
}

"""The output of our delete `Assocdestination` mutation."""
type DeleteAssocdestinationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocdestination` that was deleted by this mutation."""
  assocdestination: Assocdestination
  deletedAssocdestinationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Destinationresource` that is related to this `Assocdestination`.
  """
  destination: Destinationresource

  """Reads a single `Agency` that is related to this `Assocdestination`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocdestination`. May be used by Relay 1."""
  assocdestinationEdge(
    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocdestinationsEdge
}

"""All input for the `deleteAssoceventByNodeId` mutation."""
input DeleteAssoceventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocevent` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssocevent` mutation."""
input DeleteAssoceventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  eventId: Int!
}

"""The output of our delete `Assocevent` mutation."""
type DeleteAssoceventPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocevent` that was deleted by this mutation."""
  assocevent: Assocevent
  deletedAssoceventNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Eventresource` that is related to this `Assocevent`."""
  event: Eventresource

  """Reads a single `Agency` that is related to this `Assocevent`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocevent`. May be used by Relay 1."""
  assoceventEdge(
    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoceventsEdge
}

"""All input for the `deleteAssocguideByNodeId` mutation."""
input DeleteAssocguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocguide` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssocguide` mutation."""
input DeleteAssocguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  guideId: Int!
}

"""The output of our delete `Assocguide` mutation."""
type DeleteAssocguidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocguide` that was deleted by this mutation."""
  assocguide: Assocguide
  deletedAssocguideNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Guideresource` that is related to this `Assocguide`."""
  guide: Guideresource

  """Reads a single `Agency` that is related to this `Assocguide`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocguide`. May be used by Relay 1."""
  assocguideEdge(
    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocguidesEdge
}

"""All input for the `deleteAssochostByNodeId` mutation."""
input DeleteAssochostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assochost` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssochost` mutation."""
input DeleteAssochostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  hostId: Int!
}

"""The output of our delete `Assochost` mutation."""
type DeleteAssochostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assochost` that was deleted by this mutation."""
  assochost: Assochost
  deletedAssochostNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Hostresource` that is related to this `Assochost`."""
  host: Hostresource

  """Reads a single `Agency` that is related to this `Assochost`."""
  agencyByAtAgency: Agency

  """An edge for our `Assochost`. May be used by Relay 1."""
  assochostEdge(
    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssochostsEdge
}

"""All input for the `deleteAssoctransportByNodeId` mutation."""
input DeleteAssoctransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assoctransport` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssoctransport` mutation."""
input DeleteAssoctransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  transportId: Int!
}

"""The output of our delete `Assoctransport` mutation."""
type DeleteAssoctransportPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assoctransport` that was deleted by this mutation."""
  assoctransport: Assoctransport
  deletedAssoctransportNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Transportresource` that is related to this `Assoctransport`.
  """
  transport: Transportresource

  """Reads a single `Agency` that is related to this `Assoctransport`."""
  agencyByAtAgency: Agency

  """An edge for our `Assoctransport`. May be used by Relay 1."""
  assoctransportEdge(
    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctransportsEdge
}

"""All input for the `deleteAssoctravelgroupByNodeId` mutation."""
input DeleteAssoctravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assoctravelgroup` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAssoctravelgroup` mutation."""
input DeleteAssoctravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  travelGroupId: Int!
}

"""The output of our delete `Assoctravelgroup` mutation."""
type DeleteAssoctravelgroupPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assoctravelgroup` that was deleted by this mutation."""
  assoctravelgroup: Assoctravelgroup
  deletedAssoctravelgroupNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Travelgroupresource` that is related to this `Assoctravelgroup`.
  """
  travelGroup: Travelgroupresource

  """Reads a single `Agency` that is related to this `Assoctravelgroup`."""
  agencyByAtAgency: Agency

  """An edge for our `Assoctravelgroup`. May be used by Relay 1."""
  assoctravelgroupEdge(
    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctravelgroupsEdge
}

"""All input for the `deleteAuctioninfoByNodeId` mutation."""
input DeleteAuctioninfoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Auctioninfo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAuctioninfo` mutation."""
input DeleteAuctioninfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Auctioninfo` mutation."""
type DeleteAuctioninfoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Auctioninfo` that was deleted by this mutation."""
  auctioninfo: Auctioninfo
  deletedAuctioninfoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Auctioninfo`."""
  publishedBy: Publisher

  """Reads a single `Usertable` that is related to this `Auctioninfo`."""
  createdBy: Usertable

  """Reads a single `Bid` that is related to this `Auctioninfo`."""
  bid: Bid

  """An edge for our `Auctioninfo`. May be used by Relay 1."""
  auctioninfoEdge(
    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosEdge
}

"""All input for the `deleteBidByNodeId` mutation."""
input DeleteBidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Bid` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteBid` mutation."""
input DeleteBidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Bid` mutation."""
type DeleteBidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Bid` that was deleted by this mutation."""
  bid: Bid
  deletedBidNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Bid`. May be used by Relay 1."""
  bidEdge(
    """The method to use when ordering `Bid`."""
    orderBy: [BidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BidsEdge
}

"""All input for the `deleteBookingcalendarByNodeId` mutation."""
input DeleteBookingcalendarByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Bookingcalendar` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteBookingcalendar` mutation."""
input DeleteBookingcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Bookingcalendar` mutation."""
type DeleteBookingcalendarPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Bookingcalendar` that was deleted by this mutation."""
  bookingcalendar: Bookingcalendar
  deletedBookingcalendarNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Bookingcalendar`."""
  createdBy: Usertable

  """An edge for our `Bookingcalendar`. May be used by Relay 1."""
  bookingcalendarEdge(
    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BookingcalendarsEdge
}

"""All input for the `deleteCalendarentryByNodeId` mutation."""
input DeleteCalendarentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Calendarentry` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalendarentry` mutation."""
input DeleteCalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Calendarentry` mutation."""
type DeleteCalendarentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Calendarentry` that was deleted by this mutation."""
  calendarentry: Calendarentry
  deletedCalendarentryNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Calendarentry`. May be used by Relay 1."""
  calendarentryEdge(
    """The method to use when ordering `Calendarentry`."""
    orderBy: [CalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarentriesEdge
}

"""All input for the `deleteCommandlogentryByNodeId` mutation."""
input DeleteCommandlogentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Commandlogentry` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCommandlogentry` mutation."""
input DeleteCommandlogentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Commandlogentry` mutation."""
type DeleteCommandlogentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Commandlogentry` that was deleted by this mutation."""
  commandlogentry: Commandlogentry
  deletedCommandlogentryNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Commandlogentry`."""
  publisherByAtPublisher: Publisher

  """An edge for our `Commandlogentry`. May be used by Relay 1."""
  commandlogentryEdge(
    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CommandlogentriesEdge
}

"""All input for the `deleteContactByNodeId` mutation."""
input DeleteContactByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Contact` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteContact` mutation."""
input DeleteContactInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Contact` mutation."""
type DeleteContactPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Contact` that was deleted by this mutation."""
  contact: Contact
  deletedContactNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Contact`."""
  createdBy: Usertable

  """An edge for our `Contact`. May be used by Relay 1."""
  contactEdge(
    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ContactsEdge
}

"""All input for the `deleteDestinationresourceByNodeId` mutation."""
input DeleteDestinationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Destinationresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteDestinationresource` mutation."""
input DeleteDestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Destinationresource` mutation."""
type DeleteDestinationresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Destinationresource` that was deleted by this mutation."""
  destinationresource: Destinationresource
  deletedDestinationresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Publisher` that is related to this `Destinationresource`.
  """
  publishedBy: Publisher

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Priceinfo` that is related to this `Destinationresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Bookingcalendar` that is related to this `Destinationresource`.
  """
  activeAtPeriods: Bookingcalendar

  """
  Reads a single `Presentation` that is related to this `Destinationresource`.
  """
  presentation: Presentation

  """Reads a single `Agency` that is related to this `Destinationresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Geocoding` that is related to this `Destinationresource`.
  """
  geoCoding: Geocoding

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  usertableByLastModifiedBy: Usertable

  """An edge for our `Destinationresource`. May be used by Relay 1."""
  destinationresourceEdge(
    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesEdge
}

"""All input for the `deleteEventresourceByNodeId` mutation."""
input DeleteEventresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Eventresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteEventresource` mutation."""
input DeleteEventresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Eventresource` mutation."""
type DeleteEventresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Eventresource` that was deleted by this mutation."""
  eventresource: Eventresource
  deletedEventresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Eventresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Eventresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Eventresource`."""
  createdBy: Usertable

  """Reads a single `Contact` that is related to this `Eventresource`."""
  locationAddress: Contact

  """
  Reads a single `Bookingcalendar` that is related to this `Eventresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Eventresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Eventresource`."""
  guideByAtGuide: Guide

  """Reads a single `Presentation` that is related to this `Eventresource`."""
  presentation: Presentation

  """An edge for our `Eventresource`. May be used by Relay 1."""
  eventresourceEdge(
    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesEdge
}

"""All input for the `deleteGeocodingByNodeId` mutation."""
input DeleteGeocodingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Geocoding` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGeocoding` mutation."""
input DeleteGeocodingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Geocoding` mutation."""
type DeleteGeocodingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Geocoding` that was deleted by this mutation."""
  geocoding: Geocoding
  deletedGeocodingNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Geocoding`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Geocoding`."""
  publishedBy: Publisher

  """An edge for our `Geocoding`. May be used by Relay 1."""
  geocodingEdge(
    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GeocodingsEdge
}

"""All input for the `deleteGuidebidByNodeId` mutation."""
input DeleteGuidebidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidebid` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidebid` mutation."""
input DeleteGuidebidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guidebid` mutation."""
type DeleteGuidebidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidebid` that was deleted by this mutation."""
  guidebid: Guidebid
  deletedGuidebidNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guidebid`. May be used by Relay 1."""
  guidebidEdge(
    """The method to use when ordering `Guidebid`."""
    orderBy: [GuidebidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidebidsEdge
}

"""All input for the `deleteGuideByNodeId` mutation."""
input DeleteGuideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guide` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidedealByNodeId` mutation."""
input DeleteGuidedealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidedeal` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidedeal` mutation."""
input DeleteGuidedealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guidedeal` mutation."""
type DeleteGuidedealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidedeal` that was deleted by this mutation."""
  guidedeal: Guidedeal
  deletedGuidedealNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guidedeal`. May be used by Relay 1."""
  guidedealEdge(
    """The method to use when ordering `Guidedeal`."""
    orderBy: [GuidedealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidedealsEdge
}

"""All input for the `deleteGuidefavoriteByNodeId` mutation."""
input DeleteGuidefavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidefavorite` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidefavorite` mutation."""
input DeleteGuidefavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guidefavorite` mutation."""
type DeleteGuidefavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidefavorite` that was deleted by this mutation."""
  guidefavorite: Guidefavorite
  deletedGuidefavoriteNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guidefavorite`. May be used by Relay 1."""
  guidefavoriteEdge(
    """The method to use when ordering `Guidefavorite`."""
    orderBy: [GuidefavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidefavoritesEdge
}

"""All input for the `deleteGuide` mutation."""
input DeleteGuideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteGuideofferByNodeId` mutation."""
input DeleteGuideofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guideoffer` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuideoffer` mutation."""
input DeleteGuideofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guideoffer` mutation."""
type DeleteGuideofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guideoffer` that was deleted by this mutation."""
  guideoffer: Guideoffer
  deletedGuideofferNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guideoffer`. May be used by Relay 1."""
  guideofferEdge(
    """The method to use when ordering `Guideoffer`."""
    orderBy: [GuideoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideoffersEdge
}

"""The output of our delete `Guide` mutation."""
type DeleteGuidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guide` that was deleted by this mutation."""
  guide: Guide
  deletedGuideNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Guide`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Guide`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guide`."""
  createdBy: Usertable

  """Reads a single `Agency` that is related to this `Guide`."""
  agencyByAtAgency: Agency

  """Reads a single `Languagelevel` that is related to this `Guide`."""
  languageLevel: Languagelevel

  """Reads a single `Guideoffer` that is related to this `Guide`."""
  guideOffer: Guideoffer

  """Reads a single `Guidebid` that is related to this `Guide`."""
  guideBid: Guidebid

  """Reads a single `Guidefavorite` that is related to this `Guide`."""
  guideFavorite: Guidefavorite

  """Reads a single `Guidedeal` that is related to this `Guide`."""
  guideDeal: Guidedeal

  """Reads a single `Bookingcalendar` that is related to this `Guide`."""
  bookingCalendar: Bookingcalendar

  """An edge for our `Guide`. May be used by Relay 1."""
  guideEdge(
    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesEdge
}

"""All input for the `deleteGuideresourceByNodeId` mutation."""
input DeleteGuideresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guideresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuideresource` mutation."""
input DeleteGuideresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guideresource` mutation."""
type DeleteGuideresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guideresource` that was deleted by this mutation."""
  guideresource: Guideresource
  deletedGuideresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Guideresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guideresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guideresource`."""
  guideByAtGuide: Guide

  """Reads a single `Timerange` that is related to this `Guideresource`."""
  timeRange: Timerange

  """Reads a single `Priceinfo` that is related to this `Guideresource`."""
  priceInfo: Priceinfo

  """Reads a single `Agency` that is related to this `Guideresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Guideresource`.
  """
  bookingCalendar: Bookingcalendar

  """An edge for our `Guideresource`. May be used by Relay 1."""
  guideresourceEdge(
    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesEdge
}

"""All input for the `deleteGuidereviewByNodeId` mutation."""
input DeleteGuidereviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidereview` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGuidereview` mutation."""
input DeleteGuidereviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Guidereview` mutation."""
type DeleteGuidereviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidereview` that was deleted by this mutation."""
  guidereview: Guidereview
  deletedGuidereviewNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Guidereview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guidereview`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guidereview`."""
  guideByGuideIdTarget: Guide

  """An edge for our `Guidereview`. May be used by Relay 1."""
  guidereviewEdge(
    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsEdge
}

"""All input for the `deleteHostresourceByNodeId` mutation."""
input DeleteHostresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Hostresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteHostresource` mutation."""
input DeleteHostresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Hostresource` mutation."""
type DeleteHostresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Hostresource` that was deleted by this mutation."""
  hostresource: Hostresource
  deletedHostresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Hostresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Hostresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Hostresource`."""
  createdBy: Usertable

  """
  Reads a single `Accomodationresource` that is related to this `Hostresource`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Hostresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Hostresource`."""
  guideByAtGuide: Guide

  """Reads a single `Contact` that is related to this `Hostresource`."""
  addressInfo: Contact

  """Reads a single `Presentation` that is related to this `Hostresource`."""
  presentation: Presentation

  """
  Reads a single `Bookingcalendar` that is related to this `Hostresource`.
  """
  bookingCalendar: Bookingcalendar

  """An edge for our `Hostresource`. May be used by Relay 1."""
  hostresourceEdge(
    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesEdge
}

"""All input for the `deleteLanguagelevelByNodeId` mutation."""
input DeleteLanguagelevelByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Languagelevel` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteLanguagelevel` mutation."""
input DeleteLanguagelevelInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Languagelevel` mutation."""
type DeleteLanguagelevelPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Languagelevel` that was deleted by this mutation."""
  languagelevel: Languagelevel
  deletedLanguagelevelNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Languagelevel`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Languagelevel`."""
  publisher: Publisher

  """An edge for our `Languagelevel`. May be used by Relay 1."""
  languagelevelEdge(
    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LanguagelevelsEdge
}

"""
All input for the `deleteMediadestinationresourceByGuideSignedUrl` mutation.
"""
input DeleteMediadestinationresourceByGuideSignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  guideSignedUrl: String!
}

"""All input for the `deleteMediadestinationresourceById` mutation."""
input DeleteMediadestinationresourceByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery10SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery10SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery10SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery1SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery1SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery1SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery2SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery2SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery2SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery3SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery3SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery3SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery4SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery4SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery4SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery5SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery5SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery5SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery6SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery6SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery6SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery7SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery7SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery7SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery8SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery8SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery8SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByImageGallery9SignedUrl` mutation.
"""
input DeleteMediadestinationresourceByImageGallery9SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  imageGallery9SignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByMainImageSignedUrl` mutation.
"""
input DeleteMediadestinationresourceByMainImageSignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  mainImageSignedUrl: String!
}

"""
All input for the `deleteMediadestinationresourceByMapImageSignedUrl` mutation.
"""
input DeleteMediadestinationresourceByMapImageSignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  mapImageSignedUrl: String!
}

"""All input for the `deleteMediadestinationresourceByNodeId` mutation."""
input DeleteMediadestinationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Mediadestinationresource` to be deleted.
  """
  nodeId: ID!
}

"""
All input for the `deleteMediadestinationresourceByThumbnailImageSignedUrl` mutation.
"""
input DeleteMediadestinationresourceByThumbnailImageSignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  thumbnailImageSignedUrl: String!
}

"""All input for the `deleteMediadestinationresource` mutation."""
input DeleteMediadestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  atDestination: Int!
}

"""The output of our delete `Mediadestinationresource` mutation."""
type DeleteMediadestinationresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Mediadestinationresource` that was deleted by this mutation."""
  mediadestinationresource: Mediadestinationresource
  deletedMediadestinationresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Mediadestinationresource`.
  """
  agencyByAtAgency: Agency

  """
  Reads a single `Destinationresource` that is related to this `Mediadestinationresource`.
  """
  destinationresourceByAtDestination: Destinationresource

  """
  Reads a single `Usertable` that is related to this `Mediadestinationresource`.
  """
  usertableByLastModifiedBy: Usertable

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMainImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByGuideImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMapImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByThumbnailImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery1: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery2: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery3: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery4: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery5: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery6: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery7: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery8: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery9: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery10: Medialocation

  """An edge for our `Mediadestinationresource`. May be used by Relay 1."""
  mediadestinationresourceEdge(
    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesEdge
}

"""All input for the `deleteMedialocationById` mutation."""
input DeleteMedialocationByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteMedialocationByNodeId` mutation."""
input DeleteMedialocationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Medialocation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMedialocationByUploadLocation2K` mutation."""
input DeleteMedialocationByUploadLocation2KInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  uploadLocation2K: String!
}

"""
All input for the `deleteMedialocationByUploadLocationDesktop` mutation.
"""
input DeleteMedialocationByUploadLocationDesktopInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  uploadLocationDesktop: String!
}

"""
All input for the `deleteMedialocationByUploadLocationMobile` mutation.
"""
input DeleteMedialocationByUploadLocationMobileInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  uploadLocationMobile: String!
}

"""
All input for the `deleteMedialocationByUploadLocationOriginal` mutation.
"""
input DeleteMedialocationByUploadLocationOriginalInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  uploadLocationOriginal: String!
}

"""
All input for the `deleteMedialocationByUploadLocationTablet` mutation.
"""
input DeleteMedialocationByUploadLocationTabletInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  uploadLocationTablet: String!
}

"""
All input for the `deleteMedialocationByUploadLocationThumbnail` mutation.
"""
input DeleteMedialocationByUploadLocationThumbnailInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  uploadLocationThumbnail: String!
}

"""All input for the `deleteMedialocation` mutation."""
input DeleteMedialocationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  atResource: Int!
  mediaLocationPlacement: Medialocationplacement!
}

"""The output of our delete `Medialocation` mutation."""
type DeleteMedialocationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Medialocation` that was deleted by this mutation."""
  medialocation: Medialocation
  deletedMedialocationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Medialocation`."""
  agencyByAtAgency: Agency

  """An edge for our `Medialocation`. May be used by Relay 1."""
  medialocationEdge(
    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MedialocationsEdge
}

"""All input for the `deletePresentationByNodeId` mutation."""
input DeletePresentationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Presentation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deletePresentation` mutation."""
input DeletePresentationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Presentation` mutation."""
type DeletePresentationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Presentation` that was deleted by this mutation."""
  presentation: Presentation
  deletedPresentationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Presentation`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Presentation`."""
  createdBy: Usertable

  """An edge for our `Presentation`. May be used by Relay 1."""
  presentationEdge(
    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PresentationsEdge
}

"""All input for the `deletePriceinfoByNodeId` mutation."""
input DeletePriceinfoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Priceinfo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deletePriceinfo` mutation."""
input DeletePriceinfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Priceinfo` mutation."""
type DeletePriceinfoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Priceinfo` that was deleted by this mutation."""
  priceinfo: Priceinfo
  deletedPriceinfoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Priceinfo`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Priceinfo`."""
  createdBy: Usertable

  """Reads a single `Bid` that is related to this `Priceinfo`."""
  bid: Bid

  """An edge for our `Priceinfo`. May be used by Relay 1."""
  priceinfoEdge(
    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosEdge
}

"""All input for the `deletePublisherByNodeId` mutation."""
input DeletePublisherByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Publisher` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deletePublisher` mutation."""
input DeletePublisherInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Publisher` mutation."""
type DeletePublisherPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Publisher` that was deleted by this mutation."""
  publisher: Publisher
  deletedPublisherNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Publisher`."""
  createdBy: Usertable

  """An edge for our `Publisher`. May be used by Relay 1."""
  publisherEdge(
    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]
  ): PublishersEdge
}

"""All input for the `deleteReviewByNodeId` mutation."""
input DeleteReviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Review` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteReview` mutation."""
input DeleteReviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Review` mutation."""
type DeleteReviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Review` that was deleted by this mutation."""
  review: Review
  deletedReviewNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Review`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Review`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Review`."""
  publisherByPublisherTarget: Publisher

  """An edge for our `Review`. May be used by Relay 1."""
  reviewEdge(
    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsEdge
}

"""All input for the `deleteRoomcalendarByNodeId` mutation."""
input DeleteRoomcalendarByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomcalendar` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteRoomcalendarentryByNodeId` mutation."""
input DeleteRoomcalendarentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomcalendarentry` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteRoomcalendarentry` mutation."""
input DeleteRoomcalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Roomcalendarentry` mutation."""
type DeleteRoomcalendarentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Roomcalendarentry` that was deleted by this mutation."""
  roomcalendarentry: Roomcalendarentry
  deletedRoomcalendarentryNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Roomcalendar` that is related to this `Roomcalendarentry`.
  """
  roomcalendarByAtRoomCalendar: Roomcalendar

  """An edge for our `Roomcalendarentry`. May be used by Relay 1."""
  roomcalendarentryEdge(
    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarentriesEdge
}

"""All input for the `deleteRoomcalendar` mutation."""
input DeleteRoomcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Roomcalendar` mutation."""
type DeleteRoomcalendarPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Roomcalendar` that was deleted by this mutation."""
  roomcalendar: Roomcalendar
  deletedRoomcalendarNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Roomcalendar`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Roomcalendar`."""
  createdBy: Usertable

  """
  Reads a single `Roomcalendarentry` that is related to this `Roomcalendar`.
  """
  calendarentry: Roomcalendarentry

  """An edge for our `Roomcalendar`. May be used by Relay 1."""
  roomcalendarEdge(
    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsEdge
}

"""All input for the `deleteRoomlistByNodeId` mutation."""
input DeleteRoomlistByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomlist` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteRoomlist` mutation."""
input DeleteRoomlistInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Roomlist` mutation."""
type DeleteRoomlistPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Roomlist` that was deleted by this mutation."""
  roomlist: Roomlist
  deletedRoomlistNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Accomodationresource` that is related to this `Roomlist`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Roomcalendar` that is related to this `Roomlist`."""
  roomCalendar: Roomcalendar

  """An edge for our `Roomlist`. May be used by Relay 1."""
  roomlistEdge(
    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomlistsEdge
}

"""
All input for the `deleteSimilarbytriptypeaccomodationByNodeId` mutation.
"""
input DeleteSimilarbytriptypeaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeaccomodation` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypeaccomodation` mutation."""
input DeleteSimilarbytriptypeaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypeaccomodation` mutation."""
type DeleteSimilarbytriptypeaccomodationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypeaccomodation` that was deleted by this mutation."""
  similarbytriptypeaccomodation: Similarbytriptypeaccomodation
  deletedSimilarbytriptypeaccomodationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeaccomodation`.
  """
  agencyByAtAgency: Agency

  """
  An edge for our `Similarbytriptypeaccomodation`. May be used by Relay 1.
  """
  similarbytriptypeaccomodationEdge(
    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeaccomodationsEdge
}

"""
All input for the `deleteSimilarbytriptypedestinationByNodeId` mutation.
"""
input DeleteSimilarbytriptypedestinationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypedestination` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypedestination` mutation."""
input DeleteSimilarbytriptypedestinationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypedestination` mutation."""
type DeleteSimilarbytriptypedestinationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypedestination` that was deleted by this mutation."""
  similarbytriptypedestination: Similarbytriptypedestination
  deletedSimilarbytriptypedestinationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypedestination`.
  """
  agencyByAtAgency: Agency

  """
  An edge for our `Similarbytriptypedestination`. May be used by Relay 1.
  """
  similarbytriptypedestinationEdge(
    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypedestinationsEdge
}

"""All input for the `deleteSimilarbytriptypeeventByNodeId` mutation."""
input DeleteSimilarbytriptypeeventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeevent` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypeevent` mutation."""
input DeleteSimilarbytriptypeeventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypeevent` mutation."""
type DeleteSimilarbytriptypeeventPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypeevent` that was deleted by this mutation."""
  similarbytriptypeevent: Similarbytriptypeevent
  deletedSimilarbytriptypeeventNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeevent`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypeevent`. May be used by Relay 1."""
  similarbytriptypeeventEdge(
    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeeventsEdge
}

"""All input for the `deleteSimilarbytriptypeguideByNodeId` mutation."""
input DeleteSimilarbytriptypeguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeguide` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypeguide` mutation."""
input DeleteSimilarbytriptypeguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypeguide` mutation."""
type DeleteSimilarbytriptypeguidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypeguide` that was deleted by this mutation."""
  similarbytriptypeguide: Similarbytriptypeguide
  deletedSimilarbytriptypeguideNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeguide`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypeguide`. May be used by Relay 1."""
  similarbytriptypeguideEdge(
    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeguidesEdge
}

"""All input for the `deleteSimilarbytriptypehostByNodeId` mutation."""
input DeleteSimilarbytriptypehostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypehost` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypehost` mutation."""
input DeleteSimilarbytriptypehostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypehost` mutation."""
type DeleteSimilarbytriptypehostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypehost` that was deleted by this mutation."""
  similarbytriptypehost: Similarbytriptypehost
  deletedSimilarbytriptypehostNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypehost`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypehost`. May be used by Relay 1."""
  similarbytriptypehostEdge(
    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypehostsEdge
}

"""All input for the `deleteSimilarbytriptypetransportByNodeId` mutation."""
input DeleteSimilarbytriptypetransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypetransport` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypetransport` mutation."""
input DeleteSimilarbytriptypetransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypetransport` mutation."""
type DeleteSimilarbytriptypetransportPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypetransport` that was deleted by this mutation."""
  similarbytriptypetransport: Similarbytriptypetransport
  deletedSimilarbytriptypetransportNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypetransport`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypetransport`. May be used by Relay 1."""
  similarbytriptypetransportEdge(
    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetransportsEdge
}

"""
All input for the `deleteSimilarbytriptypetravelgroupByNodeId` mutation.
"""
input DeleteSimilarbytriptypetravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypetravelgroup` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSimilarbytriptypetravelgroup` mutation."""
input DeleteSimilarbytriptypetravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our delete `Similarbytriptypetravelgroup` mutation."""
type DeleteSimilarbytriptypetravelgroupPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypetravelgroup` that was deleted by this mutation."""
  similarbytriptypetravelgroup: Similarbytriptypetravelgroup
  deletedSimilarbytriptypetravelgroupNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypetravelgroup`.
  """
  agencyByAtAgency: Agency

  """
  An edge for our `Similarbytriptypetravelgroup`. May be used by Relay 1.
  """
  similarbytriptypetravelgroupEdge(
    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetravelgroupsEdge
}

"""All input for the `deleteTimerangeByNodeId` mutation."""
input DeleteTimerangeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Timerange` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTimerange` mutation."""
input DeleteTimerangeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Timerange` mutation."""
type DeleteTimerangePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Timerange` that was deleted by this mutation."""
  timerange: Timerange
  deletedTimerangeNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Timerange`. May be used by Relay 1."""
  timerangeEdge(
    """The method to use when ordering `Timerange`."""
    orderBy: [TimerangesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TimerangesEdge
}

"""All input for the `deleteTouristbidByNodeId` mutation."""
input DeleteTouristbidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristbid` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristbid` mutation."""
input DeleteTouristbidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristbid` mutation."""
type DeleteTouristbidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristbid` that was deleted by this mutation."""
  touristbid: Touristbid
  deletedTouristbidNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristbid`. May be used by Relay 1."""
  touristbidEdge(
    """The method to use when ordering `Touristbid`."""
    orderBy: [TouristbidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristbidsEdge
}

"""All input for the `deleteTouristByNodeId` mutation."""
input DeleteTouristByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tourist` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristdealByNodeId` mutation."""
input DeleteTouristdealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristdeal` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristdeal` mutation."""
input DeleteTouristdealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristdeal` mutation."""
type DeleteTouristdealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristdeal` that was deleted by this mutation."""
  touristdeal: Touristdeal
  deletedTouristdealNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristdeal`. May be used by Relay 1."""
  touristdealEdge(
    """The method to use when ordering `Touristdeal`."""
    orderBy: [TouristdealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristdealsEdge
}

"""All input for the `deleteTouristfavoriteByNodeId` mutation."""
input DeleteTouristfavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristfavorite` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristfavorite` mutation."""
input DeleteTouristfavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristfavorite` mutation."""
type DeleteTouristfavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristfavorite` that was deleted by this mutation."""
  touristfavorite: Touristfavorite
  deletedTouristfavoriteNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristfavorite`. May be used by Relay 1."""
  touristfavoriteEdge(
    """The method to use when ordering `Touristfavorite`."""
    orderBy: [TouristfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristfavoritesEdge
}

"""All input for the `deleteTourist` mutation."""
input DeleteTouristInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteTouristofferByNodeId` mutation."""
input DeleteTouristofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristoffer` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristoffer` mutation."""
input DeleteTouristofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristoffer` mutation."""
type DeleteTouristofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristoffer` that was deleted by this mutation."""
  touristoffer: Touristoffer
  deletedTouristofferNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristoffer`. May be used by Relay 1."""
  touristofferEdge(
    """The method to use when ordering `Touristoffer`."""
    orderBy: [TouristoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristoffersEdge
}

"""The output of our delete `Tourist` mutation."""
type DeleteTouristPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tourist` that was deleted by this mutation."""
  tourist: Tourist
  deletedTouristNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Tourist`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Tourist`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Tourist`."""
  createdBy: Usertable

  """Reads a single `Touristoffer` that is related to this `Tourist`."""
  touristOffer: Touristoffer

  """Reads a single `Touristfavorite` that is related to this `Tourist`."""
  touristFavorite: Touristfavorite

  """Reads a single `Touristbid` that is related to this `Tourist`."""
  touristBid: Touristbid

  """Reads a single `Touristdeal` that is related to this `Tourist`."""
  touristDeal: Touristdeal

  """An edge for our `Tourist`. May be used by Relay 1."""
  touristEdge(
    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsEdge
}

"""All input for the `deleteTouristresourceByNodeId` mutation."""
input DeleteTouristresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristresource` mutation."""
input DeleteTouristresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristresource` mutation."""
type DeleteTouristresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristresource` that was deleted by this mutation."""
  touristresource: Touristresource
  deletedTouristresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Touristresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Touristresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Touristresource`."""
  createdBy: Usertable

  """
  Reads a single `Travelgroupresource` that is related to this `Touristresource`.
  """
  travelgroupresourceByAtTravelGroup: Travelgroupresource

  """Reads a single `Agency` that is related to this `Touristresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Touristresource`."""
  guideByAtGuide: Guide

  """Reads a single `Priceinfo` that is related to this `Touristresource`."""
  priceInfo: Priceinfo

  """
  Reads a single `Bookingcalendar` that is related to this `Touristresource`.
  """
  travellingCalendar: Bookingcalendar

  """An edge for our `Touristresource`. May be used by Relay 1."""
  touristresourceEdge(
    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesEdge
}

"""All input for the `deleteTouristreviewByNodeId` mutation."""
input DeleteTouristreviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristreview` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTouristreview` mutation."""
input DeleteTouristreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Touristreview` mutation."""
type DeleteTouristreviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristreview` that was deleted by this mutation."""
  touristreview: Touristreview
  deletedTouristreviewNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Touristreview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Touristreview`."""
  createdBy: Usertable

  """Reads a single `Tourist` that is related to this `Touristreview`."""
  touristByTouristIdTarget: Tourist

  """An edge for our `Touristreview`. May be used by Relay 1."""
  touristreviewEdge(
    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsEdge
}

"""All input for the `deleteTransportresourceByNodeId` mutation."""
input DeleteTransportresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Transportresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTransportresource` mutation."""
input DeleteTransportresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Transportresource` mutation."""
type DeleteTransportresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Transportresource` that was deleted by this mutation."""
  transportresource: Transportresource
  deletedTransportresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Transportresource`."""
  contact: Contact

  """
  Reads a single `Publisher` that is related to this `Transportresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Transportresource`.
  """
  createdBy: Usertable

  """Reads a single `Contact` that is related to this `Transportresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Transportresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Transportresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Presentation` that is related to this `Transportresource`.
  """
  presentation: Presentation

  """
  Reads a single `Bookingcalendar` that is related to this `Transportresource`.
  """
  bookingCalendar: Bookingcalendar

  """An edge for our `Transportresource`. May be used by Relay 1."""
  transportresourceEdge(
    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesEdge
}

"""All input for the `deleteTravelgroupresourceByNodeId` mutation."""
input DeleteTravelgroupresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Travelgroupresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTravelgroupresource` mutation."""
input DeleteTravelgroupresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Travelgroupresource` mutation."""
type DeleteTravelgroupresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Travelgroupresource` that was deleted by this mutation."""
  travelgroupresource: Travelgroupresource
  deletedTravelgroupresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Contact` that is related to this `Travelgroupresource`.
  """
  contact: Contact

  """
  Reads a single `Publisher` that is related to this `Travelgroupresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Travelgroupresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Bookingcalendar` that is related to this `Travelgroupresource`.
  """
  bookingCalendar: Bookingcalendar

  """Reads a single `Agency` that is related to this `Travelgroupresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Travelgroupresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Tripofferresource` that is related to this `Travelgroupresource`.
  """
  tripofferresourceByAtTripOfferResource: Tripofferresource

  """
  Reads a single `Touristresource` that is related to this `Travelgroupresource`.
  """
  touristresourceByAtTouristResource: Touristresource

  """An edge for our `Travelgroupresource`. May be used by Relay 1."""
  travelgroupresourceEdge(
    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesEdge
}

"""All input for the `deleteTripofferresourceByNodeId` mutation."""
input DeleteTripofferresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tripofferresource` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTripofferresource` mutation."""
input DeleteTripofferresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `Tripofferresource` mutation."""
type DeleteTripofferresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tripofferresource` that was deleted by this mutation."""
  tripofferresource: Tripofferresource
  deletedTripofferresourceNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Publisher` that is related to this `Tripofferresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Tripofferresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Bookingcalendar` that is related to this `Tripofferresource`.
  """
  availableAtCalendar: Bookingcalendar

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideResponsible: Guide

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideSecondary: Guide

  """Reads a single `Agency` that is related to this `Tripofferresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Priceinfo` that is related to this `Tripofferresource`.
  """
  priceInfo: Priceinfo

  """An edge for our `Tripofferresource`. May be used by Relay 1."""
  tripofferresourceEdge(
    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesEdge
}

"""All input for the `deleteTriptypeById` mutation."""
input DeleteTriptypeByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteTriptypeByNodeId` mutation."""
input DeleteTriptypeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Triptype` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTriptype` mutation."""
input DeleteTriptypeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our delete `Triptype` mutation."""
type DeleteTriptypePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Triptype` that was deleted by this mutation."""
  triptype: Triptype
  deletedTriptypeNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Triptype`."""
  agencyByAtAgency: Agency

  """An edge for our `Triptype`. May be used by Relay 1."""
  triptypeEdge(
    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TriptypesEdge
}

"""All input for the `deleteUsertableById` mutation."""
input DeleteUsertableByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteUsertableByNodeId` mutation."""
input DeleteUsertableByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Usertable` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUsertable` mutation."""
input DeleteUsertableInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  userEmail: String!
}

"""The output of our delete `Usertable` mutation."""
type DeleteUsertablePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Usertable` that was deleted by this mutation."""
  usertable: Usertable
  deletedUsertableNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Account` that is related to this `Usertable`."""
  accountById: Account

  """Reads a single `Agency` that is related to this `Usertable`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Usertable`."""
  guideByAtGuide: Guide

  """Reads a single `Tourist` that is related to this `Usertable`."""
  touristByAtTourist: Tourist

  """An edge for our `Usertable`. May be used by Relay 1."""
  usertableEdge(
    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesEdge
}

type Destinationresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  destinationName: String
  publishedById: Int!
  createdById: Int!
  area: Area
  judet: Judet
  tripTypeName: String
  isActive: Boolean
  priceInfoId: Int
  activeAtPeriodsId: Int
  presentationId: Int
  atAgency: Int!
  geoCodingId: Int
  isPublic: Boolean!
  lastModified: Datetime
  lastModifiedBy: Int
  timeCreated: Datetime

  """
  Reads a single `Publisher` that is related to this `Destinationresource`.
  """
  publishedBy: Publisher

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Priceinfo` that is related to this `Destinationresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Bookingcalendar` that is related to this `Destinationresource`.
  """
  activeAtPeriods: Bookingcalendar

  """
  Reads a single `Presentation` that is related to this `Destinationresource`.
  """
  presentation: Presentation

  """Reads a single `Agency` that is related to this `Destinationresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Geocoding` that is related to this `Destinationresource`.
  """
  geoCoding: Geocoding

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  usertableByLastModifiedBy: Usertable

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByAtDestination(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """Reads and enables pagination through a set of `Assocdestination`."""
  assocdestinationsByDestinationId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocdestinationCondition
  ): AssocdestinationsConnection!
}

"""
A condition to be used against `Destinationresource` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input DestinationresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publishedById` field."""
  publishedById: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `priceInfoId` field."""
  priceInfoId: Int

  """Checks for equality with the object’s `activeAtPeriodsId` field."""
  activeAtPeriodsId: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `geoCodingId` field."""
  geoCodingId: Int

  """Checks for equality with the object’s `lastModifiedBy` field."""
  lastModifiedBy: Int
}

"""An input for mutations affecting `Destinationresource`"""
input DestinationresourceInput {
  id: Int
  destinationName: String
  publishedById: Int!
  createdById: Int!
  area: Area
  judet: Judet
  tripTypeName: String
  isActive: Boolean
  priceInfoId: Int
  activeAtPeriodsId: Int
  presentationId: Int
  atAgency: Int!
  geoCodingId: Int
  isPublic: Boolean
  lastModified: Datetime
  lastModifiedBy: Int
  timeCreated: Datetime
}

"""
Represents an update to a `Destinationresource`. Fields that are set will be updated.
"""
input DestinationresourcePatch {
  id: Int
  destinationName: String
  publishedById: Int
  createdById: Int
  area: Area
  judet: Judet
  tripTypeName: String
  isActive: Boolean
  priceInfoId: Int
  activeAtPeriodsId: Int
  presentationId: Int
  atAgency: Int
  geoCodingId: Int
  isPublic: Boolean
  lastModified: Datetime
  lastModifiedBy: Int
  timeCreated: Datetime
}

"""A connection to a list of `Destinationresource` values."""
type DestinationresourcesConnection {
  """A list of `Destinationresource` objects."""
  nodes: [Destinationresource!]!

  """
  A list of edges which contains the `Destinationresource` and cursor to aid in pagination.
  """
  edges: [DestinationresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Destinationresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Destinationresource` edge in the connection."""
type DestinationresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Destinationresource` at the end of the edge."""
  node: Destinationresource!
}

"""Methods to use when ordering `Destinationresource`."""
enum DestinationresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHED_BY_ID_ASC
  PUBLISHED_BY_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  PRICE_INFO_ID_ASC
  PRICE_INFO_ID_DESC
  ACTIVE_AT_PERIODS_ID_ASC
  ACTIVE_AT_PERIODS_ID_DESC
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  GEO_CODING_ID_ASC
  GEO_CODING_ID_DESC
  LAST_MODIFIED_BY_ASC
  LAST_MODIFIED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Eventresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  eventName: String
  agencyName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  locatedIn: Area
  locationAddressId: Int!
  tripTypeName: String
  activeAtPeriodsId: Int!
  ownedByAt: Boolean!
  atAgency: Int
  atGuide: Int
  presentationId: Int!
  isActive: Boolean
  isPublic: Boolean!
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Contact` that is related to this `Eventresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Eventresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Eventresource`."""
  createdBy: Usertable

  """Reads a single `Contact` that is related to this `Eventresource`."""
  locationAddress: Contact

  """
  Reads a single `Bookingcalendar` that is related to this `Eventresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Eventresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Eventresource`."""
  guideByAtGuide: Guide

  """Reads a single `Presentation` that is related to this `Eventresource`."""
  presentation: Presentation

  """Reads and enables pagination through a set of `Agencyevent`."""
  agencyeventsByEventId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyeventCondition
  ): AgencyeventsConnection!

  """Reads and enables pagination through a set of `Assocevent`."""
  assoceventsByEventId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoceventCondition
  ): AssoceventsConnection!
}

"""
A condition to be used against `Eventresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input EventresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `locationAddressId` field."""
  locationAddressId: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `activeAtPeriodsId` field."""
  activeAtPeriodsId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int
}

"""An input for mutations affecting `Eventresource`"""
input EventresourceInput {
  id: Int
  eventName: String
  agencyName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  locatedIn: Area
  locationAddressId: Int!
  tripTypeName: String
  activeAtPeriodsId: Int!
  ownedByAt: Boolean
  atAgency: Int
  atGuide: Int
  presentationId: Int!
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Eventresource`. Fields that are set will be updated.
"""
input EventresourcePatch {
  id: Int
  eventName: String
  agencyName: String
  contactId: Int
  publisherId: Int
  createdById: Int
  locatedIn: Area
  locationAddressId: Int
  tripTypeName: String
  activeAtPeriodsId: Int
  ownedByAt: Boolean
  atAgency: Int
  atGuide: Int
  presentationId: Int
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Eventresource` values."""
type EventresourcesConnection {
  """A list of `Eventresource` objects."""
  nodes: [Eventresource!]!

  """
  A list of edges which contains the `Eventresource` and cursor to aid in pagination.
  """
  edges: [EventresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Eventresource` you could get from the connection."""
  totalCount: Int!
}

"""A `Eventresource` edge in the connection."""
type EventresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Eventresource` at the end of the edge."""
  node: Eventresource!
}

"""Methods to use when ordering `Eventresource`."""
enum EventresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  LOCATION_ADDRESS_ID_ASC
  LOCATION_ADDRESS_ID_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  ACTIVE_AT_PERIODS_ID_ASC
  ACTIVE_AT_PERIODS_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Geocoding implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  locationLat: Int
  locationLng: Int
  locationType: String
  placesId: String
  formattedAdress: String
  type: String
  viewportNorthEastLat: Int
  viewportNorthEastLng: Int
  viewportSouthWestLat: Int
  viewportSouthWestLng: Int
  createdById: Int!
  publishedById: Int!
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Usertable` that is related to this `Geocoding`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Geocoding`."""
  publishedBy: Publisher

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByGeoCodingId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition
  ): DestinationresourcesConnection!
}

"""
A condition to be used against `Geocoding` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GeocodingCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `publishedById` field."""
  publishedById: Int
}

"""An input for mutations affecting `Geocoding`"""
input GeocodingInput {
  id: Int
  locationLat: Int
  locationLng: Int
  locationType: String
  placesId: String
  formattedAdress: String
  type: String
  viewportNorthEastLat: Int
  viewportNorthEastLng: Int
  viewportSouthWestLat: Int
  viewportSouthWestLng: Int
  createdById: Int!
  publishedById: Int!
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Geocoding`. Fields that are set will be updated.
"""
input GeocodingPatch {
  id: Int
  locationLat: Int
  locationLng: Int
  locationType: String
  placesId: String
  formattedAdress: String
  type: String
  viewportNorthEastLat: Int
  viewportNorthEastLng: Int
  viewportSouthWestLat: Int
  viewportSouthWestLng: Int
  createdById: Int
  publishedById: Int
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Geocoding` values."""
type GeocodingsConnection {
  """A list of `Geocoding` objects."""
  nodes: [Geocoding!]!

  """
  A list of edges which contains the `Geocoding` and cursor to aid in pagination.
  """
  edges: [GeocodingsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Geocoding` you could get from the connection."""
  totalCount: Int!
}

"""A `Geocoding` edge in the connection."""
type GeocodingsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Geocoding` at the end of the edge."""
  node: Geocoding!
}

"""Methods to use when ordering `Geocoding`."""
enum GeocodingsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  PUBLISHED_BY_ID_ASC
  PUBLISHED_BY_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Guide implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  name: String
  contactId: Int!
  hasGuideLicence: Boolean!
  guideLicenceUrl: String
  publisherId: Int!
  createdById: Int!
  guideFirstName: String
  guideLastName: String
  hasOwnCompany: Boolean!
  atAgency: Int
  languageLevelId: Int!
  areas: [Area]!
  tripTypeName: String
  guideOfferId: Int!
  guideBidId: Int!
  guideFavoriteId: Int!
  guideDealId: Int!
  agencyReviewInIdPool: [Int]
  touristReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  touristReviewOutIdPool: [Int]
  bookingCalendarId: Int!
  hostIdPool: [Int]
  eventIdPool: [Int]
  accomodationIdPool: [Int]
  transportIdPool: [Int]
  lastModified: Datetime
  timeCreated: Datetime
  isActive: Boolean
  isPublic: Boolean!

  """Reads a single `Contact` that is related to this `Guide`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Guide`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guide`."""
  createdBy: Usertable

  """Reads a single `Agency` that is related to this `Guide`."""
  agencyByAtAgency: Agency

  """Reads a single `Languagelevel` that is related to this `Guide`."""
  languageLevel: Languagelevel

  """Reads a single `Guideoffer` that is related to this `Guide`."""
  guideOffer: Guideoffer

  """Reads a single `Guidebid` that is related to this `Guide`."""
  guideBid: Guidebid

  """Reads a single `Guidefavorite` that is related to this `Guide`."""
  guideFavorite: Guidefavorite

  """Reads a single `Guidedeal` that is related to this `Guide`."""
  guideDeal: Guidedeal

  """Reads a single `Bookingcalendar` that is related to this `Guide`."""
  bookingCalendar: Bookingcalendar

  """Reads and enables pagination through a set of `Usertable`."""
  usertablesByAtGuide(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsertableCondition
  ): UsertablesConnection!

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByAtGuide(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByAtGuide(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByGuideResponsibleId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition
  ): TripofferresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByGuideSecondaryId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition
  ): TripofferresourcesConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByAtGuide(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByAtGuide(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByAtGuide(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByAtGuide(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByAtGuide(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Agencyguide`."""
  agencyguides(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyguideCondition
  ): AgencyguidesConnection!

  """Reads and enables pagination through a set of `Guidereview`."""
  guidereviewsByGuideIdTarget(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidereviewCondition
  ): GuidereviewsConnection!
}

type Guidebid implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  tripOfferIdPool: [Int]

  """Reads and enables pagination through a set of `Guide`."""
  guidesByGuideBidId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!
}

"""
A condition to be used against `Guidebid` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GuidebidCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Guidebid`"""
input GuidebidInput {
  id: Int
  tripOfferIdPool: [Int]
}

"""
Represents an update to a `Guidebid`. Fields that are set will be updated.
"""
input GuidebidPatch {
  id: Int
  tripOfferIdPool: [Int]
}

"""A connection to a list of `Guidebid` values."""
type GuidebidsConnection {
  """A list of `Guidebid` objects."""
  nodes: [Guidebid!]!

  """
  A list of edges which contains the `Guidebid` and cursor to aid in pagination.
  """
  edges: [GuidebidsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guidebid` you could get from the connection."""
  totalCount: Int!
}

"""A `Guidebid` edge in the connection."""
type GuidebidsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guidebid` at the end of the edge."""
  node: Guidebid!
}

"""Methods to use when ordering `Guidebid`."""
enum GuidebidsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Guide` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input GuideCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `languageLevelId` field."""
  languageLevelId: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `guideOfferId` field."""
  guideOfferId: Int

  """Checks for equality with the object’s `guideBidId` field."""
  guideBidId: Int

  """Checks for equality with the object’s `guideFavoriteId` field."""
  guideFavoriteId: Int

  """Checks for equality with the object’s `guideDealId` field."""
  guideDealId: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int
}

type Guidedeal implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  tripsOfferResourceIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  touristResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Guide`."""
  guidesByGuideDealId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!
}

"""
A condition to be used against `Guidedeal` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GuidedealCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Guidedeal`"""
input GuidedealInput {
  id: Int
  tripsOfferResourceIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  touristResourceIdPool: [Int]
}

"""
Represents an update to a `Guidedeal`. Fields that are set will be updated.
"""
input GuidedealPatch {
  id: Int
  tripsOfferResourceIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  touristResourceIdPool: [Int]
}

"""A connection to a list of `Guidedeal` values."""
type GuidedealsConnection {
  """A list of `Guidedeal` objects."""
  nodes: [Guidedeal!]!

  """
  A list of edges which contains the `Guidedeal` and cursor to aid in pagination.
  """
  edges: [GuidedealsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guidedeal` you could get from the connection."""
  totalCount: Int!
}

"""A `Guidedeal` edge in the connection."""
type GuidedealsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guidedeal` at the end of the edge."""
  node: Guidedeal!
}

"""Methods to use when ordering `Guidedeal`."""
enum GuidedealsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Guidefavorite implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  travelGroupResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Guide`."""
  guidesByGuideFavoriteId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!
}

"""
A condition to be used against `Guidefavorite` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input GuidefavoriteCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Guidefavorite`"""
input GuidefavoriteInput {
  id: Int
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  travelGroupResourceIdPool: [Int]
}

"""
Represents an update to a `Guidefavorite`. Fields that are set will be updated.
"""
input GuidefavoritePatch {
  id: Int
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  travelGroupResourceIdPool: [Int]
}

"""A connection to a list of `Guidefavorite` values."""
type GuidefavoritesConnection {
  """A list of `Guidefavorite` objects."""
  nodes: [Guidefavorite!]!

  """
  A list of edges which contains the `Guidefavorite` and cursor to aid in pagination.
  """
  edges: [GuidefavoritesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guidefavorite` you could get from the connection."""
  totalCount: Int!
}

"""A `Guidefavorite` edge in the connection."""
type GuidefavoritesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guidefavorite` at the end of the edge."""
  node: Guidefavorite!
}

"""Methods to use when ordering `Guidefavorite`."""
enum GuidefavoritesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""An input for mutations affecting `Guide`"""
input GuideInput {
  id: Int
  name: String
  contactId: Int!
  hasGuideLicence: Boolean!
  guideLicenceUrl: String
  publisherId: Int!
  createdById: Int!
  guideFirstName: String
  guideLastName: String
  hasOwnCompany: Boolean!
  atAgency: Int
  languageLevelId: Int!
  areas: [Area]!
  tripTypeName: String
  guideOfferId: Int!
  guideBidId: Int!
  guideFavoriteId: Int!
  guideDealId: Int!
  agencyReviewInIdPool: [Int]
  touristReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  touristReviewOutIdPool: [Int]
  bookingCalendarId: Int!
  hostIdPool: [Int]
  eventIdPool: [Int]
  accomodationIdPool: [Int]
  transportIdPool: [Int]
  lastModified: Datetime
  timeCreated: Datetime
  isActive: Boolean
  isPublic: Boolean
}

type Guideoffer implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  guideResourceIdPool: [Int]
  transportResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Guide`."""
  guidesByGuideOfferId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!
}

"""
A condition to be used against `Guideoffer` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GuideofferCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Guideoffer`"""
input GuideofferInput {
  id: Int
  guideResourceIdPool: [Int]
  transportResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
}

"""
Represents an update to a `Guideoffer`. Fields that are set will be updated.
"""
input GuideofferPatch {
  id: Int
  guideResourceIdPool: [Int]
  transportResourceIdPool: [Int]
  hostResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
}

"""A connection to a list of `Guideoffer` values."""
type GuideoffersConnection {
  """A list of `Guideoffer` objects."""
  nodes: [Guideoffer!]!

  """
  A list of edges which contains the `Guideoffer` and cursor to aid in pagination.
  """
  edges: [GuideoffersEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guideoffer` you could get from the connection."""
  totalCount: Int!
}

"""A `Guideoffer` edge in the connection."""
type GuideoffersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guideoffer` at the end of the edge."""
  node: Guideoffer!
}

"""Methods to use when ordering `Guideoffer`."""
enum GuideoffersOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
Represents an update to a `Guide`. Fields that are set will be updated.
"""
input GuidePatch {
  id: Int
  name: String
  contactId: Int
  hasGuideLicence: Boolean
  guideLicenceUrl: String
  publisherId: Int
  createdById: Int
  guideFirstName: String
  guideLastName: String
  hasOwnCompany: Boolean
  atAgency: Int
  languageLevelId: Int
  areas: [Area]
  tripTypeName: String
  guideOfferId: Int
  guideBidId: Int
  guideFavoriteId: Int
  guideDealId: Int
  agencyReviewInIdPool: [Int]
  touristReviewInIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  touristReviewOutIdPool: [Int]
  bookingCalendarId: Int
  hostIdPool: [Int]
  eventIdPool: [Int]
  accomodationIdPool: [Int]
  transportIdPool: [Int]
  lastModified: Datetime
  timeCreated: Datetime
  isActive: Boolean
  isPublic: Boolean
}

type Guideresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  guideResourceName: String
  publisherId: Int!
  createdById: Int!
  atGuide: Int
  timeRangeId: Int
  priceInfoId: Int!
  atAgency: Int
  multipleTimeRange: Boolean!
  bookingCalendarId: Int
  isRomanian: Boolean
  isActive: Boolean
  isPublic: Boolean!
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Guideresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guideresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guideresource`."""
  guideByAtGuide: Guide

  """Reads a single `Timerange` that is related to this `Guideresource`."""
  timeRange: Timerange

  """Reads a single `Priceinfo` that is related to this `Guideresource`."""
  priceInfo: Priceinfo

  """Reads a single `Agency` that is related to this `Guideresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Guideresource`.
  """
  bookingCalendar: Bookingcalendar

  """Reads and enables pagination through a set of `Assocguide`."""
  assocguidesByGuideId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocguideCondition
  ): AssocguidesConnection!
}

"""
A condition to be used against `Guideresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input GuideresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `timeRangeId` field."""
  timeRangeId: Int

  """Checks for equality with the object’s `priceInfoId` field."""
  priceInfoId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int
}

"""An input for mutations affecting `Guideresource`"""
input GuideresourceInput {
  id: Int
  guideResourceName: String
  publisherId: Int!
  createdById: Int!
  atGuide: Int
  timeRangeId: Int
  priceInfoId: Int!
  atAgency: Int
  multipleTimeRange: Boolean!
  bookingCalendarId: Int
  isRomanian: Boolean
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Guideresource`. Fields that are set will be updated.
"""
input GuideresourcePatch {
  id: Int
  guideResourceName: String
  publisherId: Int
  createdById: Int
  atGuide: Int
  timeRangeId: Int
  priceInfoId: Int
  atAgency: Int
  multipleTimeRange: Boolean
  bookingCalendarId: Int
  isRomanian: Boolean
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Guideresource` values."""
type GuideresourcesConnection {
  """A list of `Guideresource` objects."""
  nodes: [Guideresource!]!

  """
  A list of edges which contains the `Guideresource` and cursor to aid in pagination.
  """
  edges: [GuideresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guideresource` you could get from the connection."""
  totalCount: Int!
}

"""A `Guideresource` edge in the connection."""
type GuideresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guideresource` at the end of the edge."""
  node: Guideresource!
}

"""Methods to use when ordering `Guideresource`."""
enum GuideresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  TIME_RANGE_ID_ASC
  TIME_RANGE_ID_DESC
  PRICE_INFO_ID_ASC
  PRICE_INFO_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Guidereview implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  halfStars: Int
  reviewText: String
  guideIdTarget: Int!
  startDateTripEvent: Date
  byRomanian: Boolean
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Guidereview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guidereview`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guidereview`."""
  guideByGuideIdTarget: Guide
}

"""
A condition to be used against `Guidereview` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input GuidereviewCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `guideIdTarget` field."""
  guideIdTarget: Int
}

"""An input for mutations affecting `Guidereview`"""
input GuidereviewInput {
  id: Int
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  halfStars: Int
  reviewText: String
  guideIdTarget: Int!
  startDateTripEvent: Date
  byRomanian: Boolean
  timeCreated: Datetime
}

"""
Represents an update to a `Guidereview`. Fields that are set will be updated.
"""
input GuidereviewPatch {
  id: Int
  publisherId: Int
  createdById: Int
  isActive: Boolean
  halfStars: Int
  reviewText: String
  guideIdTarget: Int
  startDateTripEvent: Date
  byRomanian: Boolean
  timeCreated: Datetime
}

"""A connection to a list of `Guidereview` values."""
type GuidereviewsConnection {
  """A list of `Guidereview` objects."""
  nodes: [Guidereview!]!

  """
  A list of edges which contains the `Guidereview` and cursor to aid in pagination.
  """
  edges: [GuidereviewsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guidereview` you could get from the connection."""
  totalCount: Int!
}

"""A `Guidereview` edge in the connection."""
type GuidereviewsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guidereview` at the end of the edge."""
  node: Guidereview!
}

"""Methods to use when ordering `Guidereview`."""
enum GuidereviewsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  GUIDE_ID_TARGET_ASC
  GUIDE_ID_TARGET_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""A connection to a list of `Guide` values."""
type GuidesConnection {
  """A list of `Guide` objects."""
  nodes: [Guide!]!

  """
  A list of edges which contains the `Guide` and cursor to aid in pagination.
  """
  edges: [GuidesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Guide` you could get from the connection."""
  totalCount: Int!
}

"""A `Guide` edge in the connection."""
type GuidesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Guide` at the end of the edge."""
  node: Guide!
}

"""Methods to use when ordering `Guide`."""
enum GuidesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  LANGUAGE_LEVEL_ID_ASC
  LANGUAGE_LEVEL_ID_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  GUIDE_OFFER_ID_ASC
  GUIDE_OFFER_ID_DESC
  GUIDE_BID_ID_ASC
  GUIDE_BID_ID_DESC
  GUIDE_FAVORITE_ID_ASC
  GUIDE_FAVORITE_ID_DESC
  GUIDE_DEAL_ID_ASC
  GUIDE_DEAL_ID_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Hostresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  hostResourceName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  withAccomodation: Boolean!
  atAccomodation: Int
  atAgency: Int
  atGuide: Int
  tripTypeName: String
  locatedIn: Area
  addressInfoId: Int!
  ownedByAt: Boolean!
  presentationId: Int!
  bookingCalendarId: Int!
  isRomanian: Boolean
  isActive: Boolean
  isPublic: Boolean!
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Contact` that is related to this `Hostresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Hostresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Hostresource`."""
  createdBy: Usertable

  """
  Reads a single `Accomodationresource` that is related to this `Hostresource`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Hostresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Hostresource`."""
  guideByAtGuide: Guide

  """Reads a single `Contact` that is related to this `Hostresource`."""
  addressInfo: Contact

  """Reads a single `Presentation` that is related to this `Hostresource`."""
  presentation: Presentation

  """
  Reads a single `Bookingcalendar` that is related to this `Hostresource`.
  """
  bookingCalendar: Bookingcalendar

  """Reads and enables pagination through a set of `Agencyhost`."""
  agencyhostsByHostId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyhostCondition
  ): AgencyhostsConnection!

  """Reads and enables pagination through a set of `Assochost`."""
  assochostsByHostId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssochostCondition
  ): AssochostsConnection!
}

"""
A condition to be used against `Hostresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input HostresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `atAccomodation` field."""
  atAccomodation: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `addressInfoId` field."""
  addressInfoId: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int
}

"""An input for mutations affecting `Hostresource`"""
input HostresourceInput {
  id: Int
  hostResourceName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  withAccomodation: Boolean!
  atAccomodation: Int
  atAgency: Int
  atGuide: Int
  tripTypeName: String
  locatedIn: Area
  addressInfoId: Int!
  ownedByAt: Boolean
  presentationId: Int!
  bookingCalendarId: Int!
  isRomanian: Boolean
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Hostresource`. Fields that are set will be updated.
"""
input HostresourcePatch {
  id: Int
  hostResourceName: String
  contactId: Int
  publisherId: Int
  createdById: Int
  withAccomodation: Boolean
  atAccomodation: Int
  atAgency: Int
  atGuide: Int
  tripTypeName: String
  locatedIn: Area
  addressInfoId: Int
  ownedByAt: Boolean
  presentationId: Int
  bookingCalendarId: Int
  isRomanian: Boolean
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Hostresource` values."""
type HostresourcesConnection {
  """A list of `Hostresource` objects."""
  nodes: [Hostresource!]!

  """
  A list of edges which contains the `Hostresource` and cursor to aid in pagination.
  """
  edges: [HostresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Hostresource` you could get from the connection."""
  totalCount: Int!
}

"""A `Hostresource` edge in the connection."""
type HostresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Hostresource` at the end of the edge."""
  node: Hostresource!
}

"""Methods to use when ordering `Hostresource`."""
enum HostresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  AT_ACCOMODATION_ASC
  AT_ACCOMODATION_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  ADDRESS_INFO_ID_ASC
  ADDRESS_INFO_ID_DESC
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

enum Judet {
  ALBA
  ARAD
  ARGES
  BACAU
  BIHOR
  BISTRITA_NASAUD
  BOTOSANI
  BRASOV
  BRAILA
  BUZAU
  CARAS_SEVERIN
  CALARASI
  CLUJ
  CONSTANTA
  COVASNA
  DAMBOVITA
  DOLJ
  GALATI
  GIURGIU
  GORJ
  HARGHITA
  HUNEDOARA
  IALOMITA
  IASI
  ILFOV
  MARAMURES
  MEHEDINTI
  MURES
  NEAMT
  OLT
  PRAHOVA
  SATU_MARE
  SALAJ
  SIBIU
  SUCEAVA
  TELEORMAN
  TIMIS
  TULCEA
  VASLUI
  VALCEA
  VRANCEA
}

type Languagelevel implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  langauges: Languages!
  langaugesSkill: Languageskill!
  isActive: Boolean
  createdById: Int!
  publisherId: Int!
  timeCreated: Datetime

  """Reads a single `Usertable` that is related to this `Languagelevel`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Languagelevel`."""
  publisher: Publisher

  """Reads and enables pagination through a set of `Guide`."""
  guidesByLanguageLevelId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!
}

"""
A condition to be used against `Languagelevel` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input LanguagelevelCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int
}

"""An input for mutations affecting `Languagelevel`"""
input LanguagelevelInput {
  id: Int
  langauges: Languages!
  langaugesSkill: Languageskill!
  isActive: Boolean
  createdById: Int!
  publisherId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Languagelevel`. Fields that are set will be updated.
"""
input LanguagelevelPatch {
  id: Int
  langauges: Languages
  langaugesSkill: Languageskill
  isActive: Boolean
  createdById: Int
  publisherId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Languagelevel` values."""
type LanguagelevelsConnection {
  """A list of `Languagelevel` objects."""
  nodes: [Languagelevel!]!

  """
  A list of edges which contains the `Languagelevel` and cursor to aid in pagination.
  """
  edges: [LanguagelevelsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Languagelevel` you could get from the connection."""
  totalCount: Int!
}

"""A `Languagelevel` edge in the connection."""
type LanguagelevelsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Languagelevel` at the end of the edge."""
  node: Languagelevel!
}

"""Methods to use when ordering `Languagelevel`."""
enum LanguagelevelsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

enum Languages {
  GERMAN
  ENGLISH
  ROMANIAN
  DANISH
  ISRAELI
  FRENCH
  ITALIAN
  SPANISH
  RUSSIAN
  HUNGARIAN
  TURKISH
  POLISH
  GREEK
  BULGARIAN
  SERBIAN
  SWEDISH
  NORWEGIAN
  CHINESE
  JAPANESE
  ARABIC
}

enum Languageskill {
  NATIVE
  EXCELLENT
  GOOD
  MEDIUM
  BASIC
}

enum Logcommand {
  CONTACT_INFO
  DESTINATION_RESOURCE
  TRAVEL_GROUP
  TOURIST_RESOURCE
  TRIP_OFFER_RESOURCE
  LOGIN
  LOGOUT
  TOURIST
  GUIDE
  GUIDE_RESOURCE
  AGENCY
  USER
  PUBLISHER
  BID
  PRICE_INFO
  HOST_RESOURCE
  EVENT_RESOURCE
  PRESENTATION
  ACCOMODATION_RESOURCE
  ACCOMODATION_CALENDAR
  TRANSPORT_RESOURCE
  REVIEW
  BOOKING_CALENDAR
  UNKNOWN
}

type Mediadestinationresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int
  atAgency: Int!
  atDestination: Int!
  lastModified: Datetime
  lastModifiedBy: Int
  mainImage: Int
  mainImageSignedUrl: String
  guideImage: Int
  guideSignedUrl: String
  mapImage: Int
  mapImageSignedUrl: String
  thumbnailImage: Int
  thumbnailImageSignedUrl: String
  imageGallery1: Int
  imageGallery1SignedUrl: String
  imageGallery2: Int
  imageGallery2SignedUrl: String
  imageGallery3: Int
  imageGallery3SignedUrl: String
  imageGallery4: Int
  imageGallery4SignedUrl: String
  imageGallery5: Int
  imageGallery5SignedUrl: String
  imageGallery6: Int
  imageGallery6SignedUrl: String
  imageGallery7: Int
  imageGallery7SignedUrl: String
  imageGallery8: Int
  imageGallery8SignedUrl: String
  imageGallery9: Int
  imageGallery9SignedUrl: String
  imageGallery10: Int
  imageGallery10SignedUrl: String
  signedUrlsUpdate: Datetime!
  timeCreated: Datetime

  """
  Reads a single `Agency` that is related to this `Mediadestinationresource`.
  """
  agencyByAtAgency: Agency

  """
  Reads a single `Destinationresource` that is related to this `Mediadestinationresource`.
  """
  destinationresourceByAtDestination: Destinationresource

  """
  Reads a single `Usertable` that is related to this `Mediadestinationresource`.
  """
  usertableByLastModifiedBy: Usertable

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMainImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByGuideImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMapImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByThumbnailImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery1: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery2: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery3: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery4: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery5: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery6: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery7: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery8: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery9: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery10: Medialocation
}

"""
A condition to be used against `Mediadestinationresource` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input MediadestinationresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atDestination` field."""
  atDestination: Int

  """Checks for equality with the object’s `lastModified` field."""
  lastModified: Datetime

  """Checks for equality with the object’s `lastModifiedBy` field."""
  lastModifiedBy: Int

  """Checks for equality with the object’s `mainImage` field."""
  mainImage: Int

  """Checks for equality with the object’s `mainImageSignedUrl` field."""
  mainImageSignedUrl: String

  """Checks for equality with the object’s `guideImage` field."""
  guideImage: Int

  """Checks for equality with the object’s `guideSignedUrl` field."""
  guideSignedUrl: String

  """Checks for equality with the object’s `mapImage` field."""
  mapImage: Int

  """Checks for equality with the object’s `mapImageSignedUrl` field."""
  mapImageSignedUrl: String

  """Checks for equality with the object’s `thumbnailImage` field."""
  thumbnailImage: Int

  """Checks for equality with the object’s `thumbnailImageSignedUrl` field."""
  thumbnailImageSignedUrl: String

  """Checks for equality with the object’s `imageGallery1` field."""
  imageGallery1: Int

  """Checks for equality with the object’s `imageGallery1SignedUrl` field."""
  imageGallery1SignedUrl: String

  """Checks for equality with the object’s `imageGallery2` field."""
  imageGallery2: Int

  """Checks for equality with the object’s `imageGallery2SignedUrl` field."""
  imageGallery2SignedUrl: String

  """Checks for equality with the object’s `imageGallery3` field."""
  imageGallery3: Int

  """Checks for equality with the object’s `imageGallery3SignedUrl` field."""
  imageGallery3SignedUrl: String

  """Checks for equality with the object’s `imageGallery4` field."""
  imageGallery4: Int

  """Checks for equality with the object’s `imageGallery4SignedUrl` field."""
  imageGallery4SignedUrl: String

  """Checks for equality with the object’s `imageGallery5` field."""
  imageGallery5: Int

  """Checks for equality with the object’s `imageGallery5SignedUrl` field."""
  imageGallery5SignedUrl: String

  """Checks for equality with the object’s `imageGallery6` field."""
  imageGallery6: Int

  """Checks for equality with the object’s `imageGallery6SignedUrl` field."""
  imageGallery6SignedUrl: String

  """Checks for equality with the object’s `imageGallery7` field."""
  imageGallery7: Int

  """Checks for equality with the object’s `imageGallery7SignedUrl` field."""
  imageGallery7SignedUrl: String

  """Checks for equality with the object’s `imageGallery8` field."""
  imageGallery8: Int

  """Checks for equality with the object’s `imageGallery8SignedUrl` field."""
  imageGallery8SignedUrl: String

  """Checks for equality with the object’s `imageGallery9` field."""
  imageGallery9: Int

  """Checks for equality with the object’s `imageGallery9SignedUrl` field."""
  imageGallery9SignedUrl: String

  """Checks for equality with the object’s `imageGallery10` field."""
  imageGallery10: Int

  """Checks for equality with the object’s `imageGallery10SignedUrl` field."""
  imageGallery10SignedUrl: String

  """Checks for equality with the object’s `signedUrlsUpdate` field."""
  signedUrlsUpdate: Datetime
}

"""An input for mutations affecting `Mediadestinationresource`"""
input MediadestinationresourceInput {
  id: Int
  atAgency: Int!
  atDestination: Int!
  lastModified: Datetime
  lastModifiedBy: Int
  mainImage: Int
  mainImageSignedUrl: String
  guideImage: Int
  guideSignedUrl: String
  mapImage: Int
  mapImageSignedUrl: String
  thumbnailImage: Int
  thumbnailImageSignedUrl: String
  imageGallery1: Int
  imageGallery1SignedUrl: String
  imageGallery2: Int
  imageGallery2SignedUrl: String
  imageGallery3: Int
  imageGallery3SignedUrl: String
  imageGallery4: Int
  imageGallery4SignedUrl: String
  imageGallery5: Int
  imageGallery5SignedUrl: String
  imageGallery6: Int
  imageGallery6SignedUrl: String
  imageGallery7: Int
  imageGallery7SignedUrl: String
  imageGallery8: Int
  imageGallery8SignedUrl: String
  imageGallery9: Int
  imageGallery9SignedUrl: String
  imageGallery10: Int
  imageGallery10SignedUrl: String
  signedUrlsUpdate: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Mediadestinationresource`. Fields that are set will be updated.
"""
input MediadestinationresourcePatch {
  id: Int
  atAgency: Int
  atDestination: Int
  lastModified: Datetime
  lastModifiedBy: Int
  mainImage: Int
  mainImageSignedUrl: String
  guideImage: Int
  guideSignedUrl: String
  mapImage: Int
  mapImageSignedUrl: String
  thumbnailImage: Int
  thumbnailImageSignedUrl: String
  imageGallery1: Int
  imageGallery1SignedUrl: String
  imageGallery2: Int
  imageGallery2SignedUrl: String
  imageGallery3: Int
  imageGallery3SignedUrl: String
  imageGallery4: Int
  imageGallery4SignedUrl: String
  imageGallery5: Int
  imageGallery5SignedUrl: String
  imageGallery6: Int
  imageGallery6SignedUrl: String
  imageGallery7: Int
  imageGallery7SignedUrl: String
  imageGallery8: Int
  imageGallery8SignedUrl: String
  imageGallery9: Int
  imageGallery9SignedUrl: String
  imageGallery10: Int
  imageGallery10SignedUrl: String
  signedUrlsUpdate: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Mediadestinationresource` values."""
type MediadestinationresourcesConnection {
  """A list of `Mediadestinationresource` objects."""
  nodes: [Mediadestinationresource!]!

  """
  A list of edges which contains the `Mediadestinationresource` and cursor to aid in pagination.
  """
  edges: [MediadestinationresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Mediadestinationresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Mediadestinationresource` edge in the connection."""
type MediadestinationresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Mediadestinationresource` at the end of the edge."""
  node: Mediadestinationresource!
}

"""Methods to use when ordering `Mediadestinationresource`."""
enum MediadestinationresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_DESTINATION_ASC
  AT_DESTINATION_DESC
  LAST_MODIFIED_ASC
  LAST_MODIFIED_DESC
  LAST_MODIFIED_BY_ASC
  LAST_MODIFIED_BY_DESC
  MAIN_IMAGE_ASC
  MAIN_IMAGE_DESC
  MAIN_IMAGE_SIGNED_URL_ASC
  MAIN_IMAGE_SIGNED_URL_DESC
  GUIDE_IMAGE_ASC
  GUIDE_IMAGE_DESC
  GUIDE_SIGNED_URL_ASC
  GUIDE_SIGNED_URL_DESC
  MAP_IMAGE_ASC
  MAP_IMAGE_DESC
  MAP_IMAGE_SIGNED_URL_ASC
  MAP_IMAGE_SIGNED_URL_DESC
  THUMBNAIL_IMAGE_ASC
  THUMBNAIL_IMAGE_DESC
  THUMBNAIL_IMAGE_SIGNED_URL_ASC
  THUMBNAIL_IMAGE_SIGNED_URL_DESC
  IMAGE_GALLERY1_ASC
  IMAGE_GALLERY1_DESC
  IMAGE_GALLERY1_SIGNED_URL_ASC
  IMAGE_GALLERY1_SIGNED_URL_DESC
  IMAGE_GALLERY2_ASC
  IMAGE_GALLERY2_DESC
  IMAGE_GALLERY2_SIGNED_URL_ASC
  IMAGE_GALLERY2_SIGNED_URL_DESC
  IMAGE_GALLERY3_ASC
  IMAGE_GALLERY3_DESC
  IMAGE_GALLERY3_SIGNED_URL_ASC
  IMAGE_GALLERY3_SIGNED_URL_DESC
  IMAGE_GALLERY4_ASC
  IMAGE_GALLERY4_DESC
  IMAGE_GALLERY4_SIGNED_URL_ASC
  IMAGE_GALLERY4_SIGNED_URL_DESC
  IMAGE_GALLERY5_ASC
  IMAGE_GALLERY5_DESC
  IMAGE_GALLERY5_SIGNED_URL_ASC
  IMAGE_GALLERY5_SIGNED_URL_DESC
  IMAGE_GALLERY6_ASC
  IMAGE_GALLERY6_DESC
  IMAGE_GALLERY6_SIGNED_URL_ASC
  IMAGE_GALLERY6_SIGNED_URL_DESC
  IMAGE_GALLERY7_ASC
  IMAGE_GALLERY7_DESC
  IMAGE_GALLERY7_SIGNED_URL_ASC
  IMAGE_GALLERY7_SIGNED_URL_DESC
  IMAGE_GALLERY8_ASC
  IMAGE_GALLERY8_DESC
  IMAGE_GALLERY8_SIGNED_URL_ASC
  IMAGE_GALLERY8_SIGNED_URL_DESC
  IMAGE_GALLERY9_ASC
  IMAGE_GALLERY9_DESC
  IMAGE_GALLERY9_SIGNED_URL_ASC
  IMAGE_GALLERY9_SIGNED_URL_DESC
  IMAGE_GALLERY10_ASC
  IMAGE_GALLERY10_DESC
  IMAGE_GALLERY10_SIGNED_URL_ASC
  IMAGE_GALLERY10_SIGNED_URL_DESC
  SIGNED_URLS_UPDATE_ASC
  SIGNED_URLS_UPDATE_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Medialocation implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int
  mediaLocationPlacement: Medialocationplacement!
  atAgency: Int!
  atResource: Int!
  uploadLocationOriginal: String
  uploadLocationThumbnail: String
  uploadLocationMobile: String
  uploadLocationTablet: String
  uploadLocationDesktop: String
  uploadLocation2K: String
  signedUrlThumbnail: String
  signedUrlMobile: String
  signedUrlTablet: String
  signedUrlDesktop: String
  signedUrl2K: String
  signedUrlsUpdate: Datetime!
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Medialocation`."""
  agencyByAtAgency: Agency

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByMainImage(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByGuideImage(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByMapImage(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByThumbnailImage(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery1(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery2(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery3(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery4(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery5(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery6(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery7(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery8(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery9(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByImageGallery10(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!
}

"""
A condition to be used against `Medialocation` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input MedialocationCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atResource` field."""
  atResource: Int

  """Checks for equality with the object’s `uploadLocationOriginal` field."""
  uploadLocationOriginal: String

  """Checks for equality with the object’s `uploadLocationThumbnail` field."""
  uploadLocationThumbnail: String

  """Checks for equality with the object’s `uploadLocationMobile` field."""
  uploadLocationMobile: String

  """Checks for equality with the object’s `uploadLocationTablet` field."""
  uploadLocationTablet: String

  """Checks for equality with the object’s `uploadLocationDesktop` field."""
  uploadLocationDesktop: String

  """Checks for equality with the object’s `uploadLocation2K` field."""
  uploadLocation2K: String
}

"""An input for mutations affecting `Medialocation`"""
input MedialocationInput {
  id: Int
  mediaLocationPlacement: Medialocationplacement!
  atAgency: Int!
  atResource: Int!
  uploadLocationOriginal: String
  uploadLocationThumbnail: String
  uploadLocationMobile: String
  uploadLocationTablet: String
  uploadLocationDesktop: String
  uploadLocation2K: String
  signedUrlThumbnail: String
  signedUrlMobile: String
  signedUrlTablet: String
  signedUrlDesktop: String
  signedUrl2K: String
  signedUrlsUpdate: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Medialocation`. Fields that are set will be updated.
"""
input MedialocationPatch {
  id: Int
  mediaLocationPlacement: Medialocationplacement
  atAgency: Int
  atResource: Int
  uploadLocationOriginal: String
  uploadLocationThumbnail: String
  uploadLocationMobile: String
  uploadLocationTablet: String
  uploadLocationDesktop: String
  uploadLocation2K: String
  signedUrlThumbnail: String
  signedUrlMobile: String
  signedUrlTablet: String
  signedUrlDesktop: String
  signedUrl2K: String
  signedUrlsUpdate: Datetime
  timeCreated: Datetime
}

enum Medialocationplacement {
  MAIN_IMAGE
  GUIDE_IMAGE
  MAP_IMAGE
  THUMBNAIL_IMAGE
  IMAGE_GALLERY1
  IMAGE_GALLERY2
  IMAGE_GALLERY3
  IMAGE_GALLERY4
  IMAGE_GALLERY5
  IMAGE_GALLERY6
  IMAGE_GALLERY7
  IMAGE_GALLERY8
  IMAGE_GALLERY9
  IMAGE_GALLERY10
}

"""A connection to a list of `Medialocation` values."""
type MedialocationsConnection {
  """A list of `Medialocation` objects."""
  nodes: [Medialocation!]!

  """
  A list of edges which contains the `Medialocation` and cursor to aid in pagination.
  """
  edges: [MedialocationsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Medialocation` you could get from the connection."""
  totalCount: Int!
}

"""A `Medialocation` edge in the connection."""
type MedialocationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Medialocation` at the end of the edge."""
  node: Medialocation!
}

"""Methods to use when ordering `Medialocation`."""
enum MedialocationsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_RESOURCE_ASC
  AT_RESOURCE_DESC
  UPLOAD_LOCATION_ORIGINAL_ASC
  UPLOAD_LOCATION_ORIGINAL_DESC
  UPLOAD_LOCATION_THUMBNAIL_ASC
  UPLOAD_LOCATION_THUMBNAIL_DESC
  UPLOAD_LOCATION_MOBILE_ASC
  UPLOAD_LOCATION_MOBILE_DESC
  UPLOAD_LOCATION_TABLET_ASC
  UPLOAD_LOCATION_TABLET_DESC
  UPLOAD_LOCATION_DESKTOP_ASC
  UPLOAD_LOCATION_DESKTOP_DESC
  UPLOAD_LOCATION2_K_ASC
  UPLOAD_LOCATION2_K_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
The root mutation type which contains root level fields which mutate data.
"""
type Mutation {
  """Creates a single `Accomodationresource`."""
  createAccomodationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAccomodationresourceInput!
  ): CreateAccomodationresourcePayload

  """Creates a single `Account`."""
  createAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAccountInput!
  ): CreateAccountPayload

  """Creates a single `Accounting`."""
  createAccounting(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAccountingInput!
  ): CreateAccountingPayload

  """Creates a single `Agency`."""
  createAgency(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyInput!
  ): CreateAgencyPayload

  """Creates a single `Agencyaccomodation`."""
  createAgencyaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyaccomodationInput!
  ): CreateAgencyaccomodationPayload

  """Creates a single `Agencybid`."""
  createAgencybid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencybidInput!
  ): CreateAgencybidPayload

  """Creates a single `Agencydeal`."""
  createAgencydeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencydealInput!
  ): CreateAgencydealPayload

  """Creates a single `Agencyevent`."""
  createAgencyevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyeventInput!
  ): CreateAgencyeventPayload

  """Creates a single `Agencyfavorite`."""
  createAgencyfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyfavoriteInput!
  ): CreateAgencyfavoritePayload

  """Creates a single `Agencyguide`."""
  createAgencyguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyguideInput!
  ): CreateAgencyguidePayload

  """Creates a single `Agencyhost`."""
  createAgencyhost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyhostInput!
  ): CreateAgencyhostPayload

  """Creates a single `Agencymedialibrary`."""
  createAgencymedialibrary(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencymedialibraryInput!
  ): CreateAgencymedialibraryPayload

  """Creates a single `Agencyoffer`."""
  createAgencyoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyofferInput!
  ): CreateAgencyofferPayload

  """Creates a single `Agencyreview`."""
  createAgencyreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyreviewInput!
  ): CreateAgencyreviewPayload

  """Creates a single `Agencytourist`."""
  createAgencytourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencytouristInput!
  ): CreateAgencytouristPayload

  """Creates a single `Agencytransport`."""
  createAgencytransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencytransportInput!
  ): CreateAgencytransportPayload

  """Creates a single `Agencytravelgroup`."""
  createAgencytravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencytravelgroupInput!
  ): CreateAgencytravelgroupPayload

  """Creates a single `Agencytripoffer`."""
  createAgencytripoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencytripofferInput!
  ): CreateAgencytripofferPayload

  """Creates a single `Agencyuser`."""
  createAgencyuser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAgencyuserInput!
  ): CreateAgencyuserPayload

  """Creates a single `Assocaccomodation`."""
  createAssocaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssocaccomodationInput!
  ): CreateAssocaccomodationPayload

  """Creates a single `Assocdestination`."""
  createAssocdestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssocdestinationInput!
  ): CreateAssocdestinationPayload

  """Creates a single `Assocevent`."""
  createAssocevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssoceventInput!
  ): CreateAssoceventPayload

  """Creates a single `Assocguide`."""
  createAssocguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssocguideInput!
  ): CreateAssocguidePayload

  """Creates a single `Assochost`."""
  createAssochost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssochostInput!
  ): CreateAssochostPayload

  """Creates a single `Assoctransport`."""
  createAssoctransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssoctransportInput!
  ): CreateAssoctransportPayload

  """Creates a single `Assoctravelgroup`."""
  createAssoctravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAssoctravelgroupInput!
  ): CreateAssoctravelgroupPayload

  """Creates a single `Auctioninfo`."""
  createAuctioninfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAuctioninfoInput!
  ): CreateAuctioninfoPayload

  """Creates a single `Bid`."""
  createBid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateBidInput!
  ): CreateBidPayload

  """Creates a single `Bookingcalendar`."""
  createBookingcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateBookingcalendarInput!
  ): CreateBookingcalendarPayload

  """Creates a single `Calendarentry`."""
  createCalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalendarentryInput!
  ): CreateCalendarentryPayload

  """Creates a single `Commandlogentry`."""
  createCommandlogentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCommandlogentryInput!
  ): CreateCommandlogentryPayload

  """Creates a single `Contact`."""
  createContact(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateContactInput!
  ): CreateContactPayload

  """Creates a single `Date_`."""
  createDate_(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateDateInput!
  ): CreateDatePayload

  """Creates a single `Destinationresource`."""
  createDestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateDestinationresourceInput!
  ): CreateDestinationresourcePayload

  """Creates a single `Eventresource`."""
  createEventresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateEventresourceInput!
  ): CreateEventresourcePayload

  """Creates a single `Geocoding`."""
  createGeocoding(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGeocodingInput!
  ): CreateGeocodingPayload

  """Creates a single `Guide`."""
  createGuide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuideInput!
  ): CreateGuidePayload

  """Creates a single `Guidebid`."""
  createGuidebid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuidebidInput!
  ): CreateGuidebidPayload

  """Creates a single `Guidedeal`."""
  createGuidedeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuidedealInput!
  ): CreateGuidedealPayload

  """Creates a single `Guidefavorite`."""
  createGuidefavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuidefavoriteInput!
  ): CreateGuidefavoritePayload

  """Creates a single `Guideoffer`."""
  createGuideoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuideofferInput!
  ): CreateGuideofferPayload

  """Creates a single `Guideresource`."""
  createGuideresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuideresourceInput!
  ): CreateGuideresourcePayload

  """Creates a single `Guidereview`."""
  createGuidereview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGuidereviewInput!
  ): CreateGuidereviewPayload

  """Creates a single `Hostresource`."""
  createHostresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateHostresourceInput!
  ): CreateHostresourcePayload

  """Creates a single `Languagelevel`."""
  createLanguagelevel(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateLanguagelevelInput!
  ): CreateLanguagelevelPayload

  """Creates a single `Mediadestinationresource`."""
  createMediadestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMediadestinationresourceInput!
  ): CreateMediadestinationresourcePayload

  """Creates a single `Medialocation`."""
  createMedialocation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMedialocationInput!
  ): CreateMedialocationPayload

  """Creates a single `Presentation`."""
  createPresentation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreatePresentationInput!
  ): CreatePresentationPayload

  """Creates a single `Priceinfo`."""
  createPriceinfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreatePriceinfoInput!
  ): CreatePriceinfoPayload

  """Creates a single `Publisher`."""
  createPublisher(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreatePublisherInput!
  ): CreatePublisherPayload

  """Creates a single `Review`."""
  createReview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateReviewInput!
  ): CreateReviewPayload

  """Creates a single `Roomcalendar`."""
  createRoomcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateRoomcalendarInput!
  ): CreateRoomcalendarPayload

  """Creates a single `Roomcalendarentry`."""
  createRoomcalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateRoomcalendarentryInput!
  ): CreateRoomcalendarentryPayload

  """Creates a single `Roomlist`."""
  createRoomlist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateRoomlistInput!
  ): CreateRoomlistPayload

  """Creates a single `Similarbytriptypeaccomodation`."""
  createSimilarbytriptypeaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypeaccomodationInput!
  ): CreateSimilarbytriptypeaccomodationPayload

  """Creates a single `Similarbytriptypedestination`."""
  createSimilarbytriptypedestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypedestinationInput!
  ): CreateSimilarbytriptypedestinationPayload

  """Creates a single `Similarbytriptypeevent`."""
  createSimilarbytriptypeevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypeeventInput!
  ): CreateSimilarbytriptypeeventPayload

  """Creates a single `Similarbytriptypeguide`."""
  createSimilarbytriptypeguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypeguideInput!
  ): CreateSimilarbytriptypeguidePayload

  """Creates a single `Similarbytriptypehost`."""
  createSimilarbytriptypehost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypehostInput!
  ): CreateSimilarbytriptypehostPayload

  """Creates a single `Similarbytriptypetransport`."""
  createSimilarbytriptypetransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypetransportInput!
  ): CreateSimilarbytriptypetransportPayload

  """Creates a single `Similarbytriptypetravelgroup`."""
  createSimilarbytriptypetravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSimilarbytriptypetravelgroupInput!
  ): CreateSimilarbytriptypetravelgroupPayload

  """Creates a single `Timerange`."""
  createTimerange(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTimerangeInput!
  ): CreateTimerangePayload

  """Creates a single `Tourist`."""
  createTourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristInput!
  ): CreateTouristPayload

  """Creates a single `Touristbid`."""
  createTouristbid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristbidInput!
  ): CreateTouristbidPayload

  """Creates a single `Touristdeal`."""
  createTouristdeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristdealInput!
  ): CreateTouristdealPayload

  """Creates a single `Touristfavorite`."""
  createTouristfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristfavoriteInput!
  ): CreateTouristfavoritePayload

  """Creates a single `Touristoffer`."""
  createTouristoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristofferInput!
  ): CreateTouristofferPayload

  """Creates a single `Touristresource`."""
  createTouristresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristresourceInput!
  ): CreateTouristresourcePayload

  """Creates a single `Touristreview`."""
  createTouristreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTouristreviewInput!
  ): CreateTouristreviewPayload

  """Creates a single `Transportresource`."""
  createTransportresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTransportresourceInput!
  ): CreateTransportresourcePayload

  """Creates a single `Travelgroupresource`."""
  createTravelgroupresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTravelgroupresourceInput!
  ): CreateTravelgroupresourcePayload

  """Creates a single `Tripofferresource`."""
  createTripofferresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTripofferresourceInput!
  ): CreateTripofferresourcePayload

  """Creates a single `Triptype`."""
  createTriptype(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTriptypeInput!
  ): CreateTriptypePayload

  """Creates a single `Usertable`."""
  createUsertable(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUsertableInput!
  ): CreateUsertablePayload

  """
  Updates a single `Accomodationresource` using its globally unique id and a patch.
  """
  updateAccomodationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccomodationresourceByNodeIdInput!
  ): UpdateAccomodationresourcePayload

  """
  Updates a single `Accomodationresource` using a unique key and a patch.
  """
  updateAccomodationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccomodationresourceInput!
  ): UpdateAccomodationresourcePayload

  """Updates a single `Account` using its globally unique id and a patch."""
  updateAccountByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccountByNodeIdInput!
  ): UpdateAccountPayload

  """Updates a single `Account` using a unique key and a patch."""
  updateAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccountInput!
  ): UpdateAccountPayload

  """
  Updates a single `Accounting` using its globally unique id and a patch.
  """
  updateAccountingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccountingByNodeIdInput!
  ): UpdateAccountingPayload

  """Updates a single `Accounting` using a unique key and a patch."""
  updateAccounting(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAccountingInput!
  ): UpdateAccountingPayload

  """Updates a single `Agency` using its globally unique id and a patch."""
  updateAgencyByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyByNodeIdInput!
  ): UpdateAgencyPayload

  """Updates a single `Agency` using a unique key and a patch."""
  updateAgency(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyInput!
  ): UpdateAgencyPayload

  """
  Updates a single `Agencyaccomodation` using its globally unique id and a patch.
  """
  updateAgencyaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyaccomodationByNodeIdInput!
  ): UpdateAgencyaccomodationPayload

  """Updates a single `Agencyaccomodation` using a unique key and a patch."""
  updateAgencyaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyaccomodationInput!
  ): UpdateAgencyaccomodationPayload

  """Updates a single `Agencybid` using its globally unique id and a patch."""
  updateAgencybidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencybidByNodeIdInput!
  ): UpdateAgencybidPayload

  """Updates a single `Agencybid` using a unique key and a patch."""
  updateAgencybid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencybidInput!
  ): UpdateAgencybidPayload

  """
  Updates a single `Agencydeal` using its globally unique id and a patch.
  """
  updateAgencydealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencydealByNodeIdInput!
  ): UpdateAgencydealPayload

  """Updates a single `Agencydeal` using a unique key and a patch."""
  updateAgencydeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencydealInput!
  ): UpdateAgencydealPayload

  """
  Updates a single `Agencyevent` using its globally unique id and a patch.
  """
  updateAgencyeventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyeventByNodeIdInput!
  ): UpdateAgencyeventPayload

  """Updates a single `Agencyevent` using a unique key and a patch."""
  updateAgencyevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyeventInput!
  ): UpdateAgencyeventPayload

  """
  Updates a single `Agencyfavorite` using its globally unique id and a patch.
  """
  updateAgencyfavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyfavoriteByNodeIdInput!
  ): UpdateAgencyfavoritePayload

  """Updates a single `Agencyfavorite` using a unique key and a patch."""
  updateAgencyfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyfavoriteInput!
  ): UpdateAgencyfavoritePayload

  """
  Updates a single `Agencyguide` using its globally unique id and a patch.
  """
  updateAgencyguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyguideByNodeIdInput!
  ): UpdateAgencyguidePayload

  """Updates a single `Agencyguide` using a unique key and a patch."""
  updateAgencyguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyguideInput!
  ): UpdateAgencyguidePayload

  """
  Updates a single `Agencyhost` using its globally unique id and a patch.
  """
  updateAgencyhostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyhostByNodeIdInput!
  ): UpdateAgencyhostPayload

  """Updates a single `Agencyhost` using a unique key and a patch."""
  updateAgencyhost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyhostInput!
  ): UpdateAgencyhostPayload

  """Updates a single `Agencymedialibrary` using a unique key and a patch."""
  updateAgencymedialibraryById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencymedialibraryByIdInput!
  ): UpdateAgencymedialibraryPayload

  """
  Updates a single `Agencyoffer` using its globally unique id and a patch.
  """
  updateAgencyofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyofferByNodeIdInput!
  ): UpdateAgencyofferPayload

  """Updates a single `Agencyoffer` using a unique key and a patch."""
  updateAgencyoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyofferInput!
  ): UpdateAgencyofferPayload

  """
  Updates a single `Agencyreview` using its globally unique id and a patch.
  """
  updateAgencyreviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyreviewByNodeIdInput!
  ): UpdateAgencyreviewPayload

  """Updates a single `Agencyreview` using a unique key and a patch."""
  updateAgencyreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyreviewInput!
  ): UpdateAgencyreviewPayload

  """
  Updates a single `Agencytourist` using its globally unique id and a patch.
  """
  updateAgencytouristByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytouristByNodeIdInput!
  ): UpdateAgencytouristPayload

  """Updates a single `Agencytourist` using a unique key and a patch."""
  updateAgencytourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytouristInput!
  ): UpdateAgencytouristPayload

  """
  Updates a single `Agencytransport` using its globally unique id and a patch.
  """
  updateAgencytransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytransportByNodeIdInput!
  ): UpdateAgencytransportPayload

  """Updates a single `Agencytransport` using a unique key and a patch."""
  updateAgencytransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytransportInput!
  ): UpdateAgencytransportPayload

  """
  Updates a single `Agencytravelgroup` using its globally unique id and a patch.
  """
  updateAgencytravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytravelgroupByNodeIdInput!
  ): UpdateAgencytravelgroupPayload

  """Updates a single `Agencytravelgroup` using a unique key and a patch."""
  updateAgencytravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytravelgroupInput!
  ): UpdateAgencytravelgroupPayload

  """
  Updates a single `Agencytripoffer` using its globally unique id and a patch.
  """
  updateAgencytripofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytripofferByNodeIdInput!
  ): UpdateAgencytripofferPayload

  """Updates a single `Agencytripoffer` using a unique key and a patch."""
  updateAgencytripoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencytripofferInput!
  ): UpdateAgencytripofferPayload

  """
  Updates a single `Agencyuser` using its globally unique id and a patch.
  """
  updateAgencyuserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyuserByNodeIdInput!
  ): UpdateAgencyuserPayload

  """Updates a single `Agencyuser` using a unique key and a patch."""
  updateAgencyuser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAgencyuserInput!
  ): UpdateAgencyuserPayload

  """
  Updates a single `Assocaccomodation` using its globally unique id and a patch.
  """
  updateAssocaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocaccomodationByNodeIdInput!
  ): UpdateAssocaccomodationPayload

  """Updates a single `Assocaccomodation` using a unique key and a patch."""
  updateAssocaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocaccomodationInput!
  ): UpdateAssocaccomodationPayload

  """
  Updates a single `Assocdestination` using its globally unique id and a patch.
  """
  updateAssocdestinationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocdestinationByNodeIdInput!
  ): UpdateAssocdestinationPayload

  """Updates a single `Assocdestination` using a unique key and a patch."""
  updateAssocdestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocdestinationInput!
  ): UpdateAssocdestinationPayload

  """
  Updates a single `Assocevent` using its globally unique id and a patch.
  """
  updateAssoceventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoceventByNodeIdInput!
  ): UpdateAssoceventPayload

  """Updates a single `Assocevent` using a unique key and a patch."""
  updateAssocevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoceventInput!
  ): UpdateAssoceventPayload

  """
  Updates a single `Assocguide` using its globally unique id and a patch.
  """
  updateAssocguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocguideByNodeIdInput!
  ): UpdateAssocguidePayload

  """Updates a single `Assocguide` using a unique key and a patch."""
  updateAssocguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssocguideInput!
  ): UpdateAssocguidePayload

  """Updates a single `Assochost` using its globally unique id and a patch."""
  updateAssochostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssochostByNodeIdInput!
  ): UpdateAssochostPayload

  """Updates a single `Assochost` using a unique key and a patch."""
  updateAssochost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssochostInput!
  ): UpdateAssochostPayload

  """
  Updates a single `Assoctransport` using its globally unique id and a patch.
  """
  updateAssoctransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoctransportByNodeIdInput!
  ): UpdateAssoctransportPayload

  """Updates a single `Assoctransport` using a unique key and a patch."""
  updateAssoctransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoctransportInput!
  ): UpdateAssoctransportPayload

  """
  Updates a single `Assoctravelgroup` using its globally unique id and a patch.
  """
  updateAssoctravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoctravelgroupByNodeIdInput!
  ): UpdateAssoctravelgroupPayload

  """Updates a single `Assoctravelgroup` using a unique key and a patch."""
  updateAssoctravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAssoctravelgroupInput!
  ): UpdateAssoctravelgroupPayload

  """
  Updates a single `Auctioninfo` using its globally unique id and a patch.
  """
  updateAuctioninfoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAuctioninfoByNodeIdInput!
  ): UpdateAuctioninfoPayload

  """Updates a single `Auctioninfo` using a unique key and a patch."""
  updateAuctioninfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAuctioninfoInput!
  ): UpdateAuctioninfoPayload

  """Updates a single `Bid` using its globally unique id and a patch."""
  updateBidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateBidByNodeIdInput!
  ): UpdateBidPayload

  """Updates a single `Bid` using a unique key and a patch."""
  updateBid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateBidInput!
  ): UpdateBidPayload

  """
  Updates a single `Bookingcalendar` using its globally unique id and a patch.
  """
  updateBookingcalendarByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateBookingcalendarByNodeIdInput!
  ): UpdateBookingcalendarPayload

  """Updates a single `Bookingcalendar` using a unique key and a patch."""
  updateBookingcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateBookingcalendarInput!
  ): UpdateBookingcalendarPayload

  """
  Updates a single `Calendarentry` using its globally unique id and a patch.
  """
  updateCalendarentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarentryByNodeIdInput!
  ): UpdateCalendarentryPayload

  """Updates a single `Calendarentry` using a unique key and a patch."""
  updateCalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarentryInput!
  ): UpdateCalendarentryPayload

  """
  Updates a single `Commandlogentry` using its globally unique id and a patch.
  """
  updateCommandlogentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCommandlogentryByNodeIdInput!
  ): UpdateCommandlogentryPayload

  """Updates a single `Commandlogentry` using a unique key and a patch."""
  updateCommandlogentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCommandlogentryInput!
  ): UpdateCommandlogentryPayload

  """Updates a single `Contact` using its globally unique id and a patch."""
  updateContactByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateContactByNodeIdInput!
  ): UpdateContactPayload

  """Updates a single `Contact` using a unique key and a patch."""
  updateContact(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateContactInput!
  ): UpdateContactPayload

  """
  Updates a single `Destinationresource` using its globally unique id and a patch.
  """
  updateDestinationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDestinationresourceByNodeIdInput!
  ): UpdateDestinationresourcePayload

  """Updates a single `Destinationresource` using a unique key and a patch."""
  updateDestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDestinationresourceInput!
  ): UpdateDestinationresourcePayload

  """
  Updates a single `Eventresource` using its globally unique id and a patch.
  """
  updateEventresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateEventresourceByNodeIdInput!
  ): UpdateEventresourcePayload

  """Updates a single `Eventresource` using a unique key and a patch."""
  updateEventresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateEventresourceInput!
  ): UpdateEventresourcePayload

  """Updates a single `Geocoding` using its globally unique id and a patch."""
  updateGeocodingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGeocodingByNodeIdInput!
  ): UpdateGeocodingPayload

  """Updates a single `Geocoding` using a unique key and a patch."""
  updateGeocoding(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGeocodingInput!
  ): UpdateGeocodingPayload

  """Updates a single `Guide` using its globally unique id and a patch."""
  updateGuideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideByNodeIdInput!
  ): UpdateGuidePayload

  """Updates a single `Guide` using a unique key and a patch."""
  updateGuide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideInput!
  ): UpdateGuidePayload

  """Updates a single `Guidebid` using its globally unique id and a patch."""
  updateGuidebidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidebidByNodeIdInput!
  ): UpdateGuidebidPayload

  """Updates a single `Guidebid` using a unique key and a patch."""
  updateGuidebid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidebidInput!
  ): UpdateGuidebidPayload

  """Updates a single `Guidedeal` using its globally unique id and a patch."""
  updateGuidedealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidedealByNodeIdInput!
  ): UpdateGuidedealPayload

  """Updates a single `Guidedeal` using a unique key and a patch."""
  updateGuidedeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidedealInput!
  ): UpdateGuidedealPayload

  """
  Updates a single `Guidefavorite` using its globally unique id and a patch.
  """
  updateGuidefavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidefavoriteByNodeIdInput!
  ): UpdateGuidefavoritePayload

  """Updates a single `Guidefavorite` using a unique key and a patch."""
  updateGuidefavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidefavoriteInput!
  ): UpdateGuidefavoritePayload

  """
  Updates a single `Guideoffer` using its globally unique id and a patch.
  """
  updateGuideofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideofferByNodeIdInput!
  ): UpdateGuideofferPayload

  """Updates a single `Guideoffer` using a unique key and a patch."""
  updateGuideoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideofferInput!
  ): UpdateGuideofferPayload

  """
  Updates a single `Guideresource` using its globally unique id and a patch.
  """
  updateGuideresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideresourceByNodeIdInput!
  ): UpdateGuideresourcePayload

  """Updates a single `Guideresource` using a unique key and a patch."""
  updateGuideresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuideresourceInput!
  ): UpdateGuideresourcePayload

  """
  Updates a single `Guidereview` using its globally unique id and a patch.
  """
  updateGuidereviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidereviewByNodeIdInput!
  ): UpdateGuidereviewPayload

  """Updates a single `Guidereview` using a unique key and a patch."""
  updateGuidereview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGuidereviewInput!
  ): UpdateGuidereviewPayload

  """
  Updates a single `Hostresource` using its globally unique id and a patch.
  """
  updateHostresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateHostresourceByNodeIdInput!
  ): UpdateHostresourcePayload

  """Updates a single `Hostresource` using a unique key and a patch."""
  updateHostresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateHostresourceInput!
  ): UpdateHostresourcePayload

  """
  Updates a single `Languagelevel` using its globally unique id and a patch.
  """
  updateLanguagelevelByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateLanguagelevelByNodeIdInput!
  ): UpdateLanguagelevelPayload

  """Updates a single `Languagelevel` using a unique key and a patch."""
  updateLanguagelevel(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateLanguagelevelInput!
  ): UpdateLanguagelevelPayload

  """
  Updates a single `Mediadestinationresource` using its globally unique id and a patch.
  """
  updateMediadestinationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByNodeIdInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByIdInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByMainImageSignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByMainImageSignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByGuideSignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByGuideSignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByMapImageSignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByMapImageSignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByThumbnailImageSignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByThumbnailImageSignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery1SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery1SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery2SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery2SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery3SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery3SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery4SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery4SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery5SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery5SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery6SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery6SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery7SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery7SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery8SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery8SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery9SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery9SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Mediadestinationresource` using a unique key and a patch.
  """
  updateMediadestinationresourceByImageGallery10SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMediadestinationresourceByImageGallery10SignedUrlInput!
  ): UpdateMediadestinationresourcePayload

  """
  Updates a single `Medialocation` using its globally unique id and a patch.
  """
  updateMedialocationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationByNodeIdInput!
  ): UpdateMedialocationPayload

  """Updates a single `Medialocation` using a unique key and a patch."""
  updateMedialocationById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationByIdInput!
  ): UpdateMedialocationPayload

  """Updates a single `Medialocation` using a unique key and a patch."""
  updateMedialocation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationInput!
  ): UpdateMedialocationPayload

  """Updates a single `Medialocation` using a unique key and a patch."""
  updateMedialocationByUploadLocationOriginal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationByUploadLocationOriginalInput!
  ): UpdateMedialocationPayload

  """Updates a single `Medialocation` using a unique key and a patch."""
  updateMedialocationByUploadLocationThumbnail(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationByUploadLocationThumbnailInput!
  ): UpdateMedialocationPayload

  """Updates a single `Medialocation` using a unique key and a patch."""
  updateMedialocationByUploadLocationMobile(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationByUploadLocationMobileInput!
  ): UpdateMedialocationPayload

  """Updates a single `Medialocation` using a unique key and a patch."""
  updateMedialocationByUploadLocationTablet(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationByUploadLocationTabletInput!
  ): UpdateMedialocationPayload

  """Updates a single `Medialocation` using a unique key and a patch."""
  updateMedialocationByUploadLocationDesktop(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationByUploadLocationDesktopInput!
  ): UpdateMedialocationPayload

  """Updates a single `Medialocation` using a unique key and a patch."""
  updateMedialocationByUploadLocation2K(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMedialocationByUploadLocation2KInput!
  ): UpdateMedialocationPayload

  """
  Updates a single `Presentation` using its globally unique id and a patch.
  """
  updatePresentationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePresentationByNodeIdInput!
  ): UpdatePresentationPayload

  """Updates a single `Presentation` using a unique key and a patch."""
  updatePresentation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePresentationInput!
  ): UpdatePresentationPayload

  """Updates a single `Priceinfo` using its globally unique id and a patch."""
  updatePriceinfoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePriceinfoByNodeIdInput!
  ): UpdatePriceinfoPayload

  """Updates a single `Priceinfo` using a unique key and a patch."""
  updatePriceinfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePriceinfoInput!
  ): UpdatePriceinfoPayload

  """Updates a single `Publisher` using its globally unique id and a patch."""
  updatePublisherByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePublisherByNodeIdInput!
  ): UpdatePublisherPayload

  """Updates a single `Publisher` using a unique key and a patch."""
  updatePublisher(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePublisherInput!
  ): UpdatePublisherPayload

  """Updates a single `Review` using its globally unique id and a patch."""
  updateReviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateReviewByNodeIdInput!
  ): UpdateReviewPayload

  """Updates a single `Review` using a unique key and a patch."""
  updateReview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateReviewInput!
  ): UpdateReviewPayload

  """
  Updates a single `Roomcalendar` using its globally unique id and a patch.
  """
  updateRoomcalendarByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomcalendarByNodeIdInput!
  ): UpdateRoomcalendarPayload

  """Updates a single `Roomcalendar` using a unique key and a patch."""
  updateRoomcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomcalendarInput!
  ): UpdateRoomcalendarPayload

  """
  Updates a single `Roomcalendarentry` using its globally unique id and a patch.
  """
  updateRoomcalendarentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomcalendarentryByNodeIdInput!
  ): UpdateRoomcalendarentryPayload

  """Updates a single `Roomcalendarentry` using a unique key and a patch."""
  updateRoomcalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomcalendarentryInput!
  ): UpdateRoomcalendarentryPayload

  """Updates a single `Roomlist` using its globally unique id and a patch."""
  updateRoomlistByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomlistByNodeIdInput!
  ): UpdateRoomlistPayload

  """Updates a single `Roomlist` using a unique key and a patch."""
  updateRoomlist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateRoomlistInput!
  ): UpdateRoomlistPayload

  """
  Updates a single `Similarbytriptypeaccomodation` using its globally unique id and a patch.
  """
  updateSimilarbytriptypeaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeaccomodationByNodeIdInput!
  ): UpdateSimilarbytriptypeaccomodationPayload

  """
  Updates a single `Similarbytriptypeaccomodation` using a unique key and a patch.
  """
  updateSimilarbytriptypeaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeaccomodationInput!
  ): UpdateSimilarbytriptypeaccomodationPayload

  """
  Updates a single `Similarbytriptypedestination` using its globally unique id and a patch.
  """
  updateSimilarbytriptypedestinationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypedestinationByNodeIdInput!
  ): UpdateSimilarbytriptypedestinationPayload

  """
  Updates a single `Similarbytriptypedestination` using a unique key and a patch.
  """
  updateSimilarbytriptypedestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypedestinationInput!
  ): UpdateSimilarbytriptypedestinationPayload

  """
  Updates a single `Similarbytriptypeevent` using its globally unique id and a patch.
  """
  updateSimilarbytriptypeeventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeeventByNodeIdInput!
  ): UpdateSimilarbytriptypeeventPayload

  """
  Updates a single `Similarbytriptypeevent` using a unique key and a patch.
  """
  updateSimilarbytriptypeevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeeventInput!
  ): UpdateSimilarbytriptypeeventPayload

  """
  Updates a single `Similarbytriptypeguide` using its globally unique id and a patch.
  """
  updateSimilarbytriptypeguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeguideByNodeIdInput!
  ): UpdateSimilarbytriptypeguidePayload

  """
  Updates a single `Similarbytriptypeguide` using a unique key and a patch.
  """
  updateSimilarbytriptypeguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypeguideInput!
  ): UpdateSimilarbytriptypeguidePayload

  """
  Updates a single `Similarbytriptypehost` using its globally unique id and a patch.
  """
  updateSimilarbytriptypehostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypehostByNodeIdInput!
  ): UpdateSimilarbytriptypehostPayload

  """
  Updates a single `Similarbytriptypehost` using a unique key and a patch.
  """
  updateSimilarbytriptypehost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypehostInput!
  ): UpdateSimilarbytriptypehostPayload

  """
  Updates a single `Similarbytriptypetransport` using its globally unique id and a patch.
  """
  updateSimilarbytriptypetransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypetransportByNodeIdInput!
  ): UpdateSimilarbytriptypetransportPayload

  """
  Updates a single `Similarbytriptypetransport` using a unique key and a patch.
  """
  updateSimilarbytriptypetransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypetransportInput!
  ): UpdateSimilarbytriptypetransportPayload

  """
  Updates a single `Similarbytriptypetravelgroup` using its globally unique id and a patch.
  """
  updateSimilarbytriptypetravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypetravelgroupByNodeIdInput!
  ): UpdateSimilarbytriptypetravelgroupPayload

  """
  Updates a single `Similarbytriptypetravelgroup` using a unique key and a patch.
  """
  updateSimilarbytriptypetravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSimilarbytriptypetravelgroupInput!
  ): UpdateSimilarbytriptypetravelgroupPayload

  """Updates a single `Timerange` using its globally unique id and a patch."""
  updateTimerangeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTimerangeByNodeIdInput!
  ): UpdateTimerangePayload

  """Updates a single `Timerange` using a unique key and a patch."""
  updateTimerange(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTimerangeInput!
  ): UpdateTimerangePayload

  """Updates a single `Tourist` using its globally unique id and a patch."""
  updateTouristByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristByNodeIdInput!
  ): UpdateTouristPayload

  """Updates a single `Tourist` using a unique key and a patch."""
  updateTourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristInput!
  ): UpdateTouristPayload

  """
  Updates a single `Touristbid` using its globally unique id and a patch.
  """
  updateTouristbidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristbidByNodeIdInput!
  ): UpdateTouristbidPayload

  """Updates a single `Touristbid` using a unique key and a patch."""
  updateTouristbid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristbidInput!
  ): UpdateTouristbidPayload

  """
  Updates a single `Touristdeal` using its globally unique id and a patch.
  """
  updateTouristdealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristdealByNodeIdInput!
  ): UpdateTouristdealPayload

  """Updates a single `Touristdeal` using a unique key and a patch."""
  updateTouristdeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristdealInput!
  ): UpdateTouristdealPayload

  """
  Updates a single `Touristfavorite` using its globally unique id and a patch.
  """
  updateTouristfavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristfavoriteByNodeIdInput!
  ): UpdateTouristfavoritePayload

  """Updates a single `Touristfavorite` using a unique key and a patch."""
  updateTouristfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristfavoriteInput!
  ): UpdateTouristfavoritePayload

  """
  Updates a single `Touristoffer` using its globally unique id and a patch.
  """
  updateTouristofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristofferByNodeIdInput!
  ): UpdateTouristofferPayload

  """Updates a single `Touristoffer` using a unique key and a patch."""
  updateTouristoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristofferInput!
  ): UpdateTouristofferPayload

  """
  Updates a single `Touristresource` using its globally unique id and a patch.
  """
  updateTouristresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristresourceByNodeIdInput!
  ): UpdateTouristresourcePayload

  """Updates a single `Touristresource` using a unique key and a patch."""
  updateTouristresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristresourceInput!
  ): UpdateTouristresourcePayload

  """
  Updates a single `Touristreview` using its globally unique id and a patch.
  """
  updateTouristreviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristreviewByNodeIdInput!
  ): UpdateTouristreviewPayload

  """Updates a single `Touristreview` using a unique key and a patch."""
  updateTouristreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTouristreviewInput!
  ): UpdateTouristreviewPayload

  """
  Updates a single `Transportresource` using its globally unique id and a patch.
  """
  updateTransportresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTransportresourceByNodeIdInput!
  ): UpdateTransportresourcePayload

  """Updates a single `Transportresource` using a unique key and a patch."""
  updateTransportresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTransportresourceInput!
  ): UpdateTransportresourcePayload

  """
  Updates a single `Travelgroupresource` using its globally unique id and a patch.
  """
  updateTravelgroupresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTravelgroupresourceByNodeIdInput!
  ): UpdateTravelgroupresourcePayload

  """Updates a single `Travelgroupresource` using a unique key and a patch."""
  updateTravelgroupresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTravelgroupresourceInput!
  ): UpdateTravelgroupresourcePayload

  """
  Updates a single `Tripofferresource` using its globally unique id and a patch.
  """
  updateTripofferresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTripofferresourceByNodeIdInput!
  ): UpdateTripofferresourcePayload

  """Updates a single `Tripofferresource` using a unique key and a patch."""
  updateTripofferresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTripofferresourceInput!
  ): UpdateTripofferresourcePayload

  """Updates a single `Triptype` using its globally unique id and a patch."""
  updateTriptypeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTriptypeByNodeIdInput!
  ): UpdateTriptypePayload

  """Updates a single `Triptype` using a unique key and a patch."""
  updateTriptypeById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTriptypeByIdInput!
  ): UpdateTriptypePayload

  """Updates a single `Triptype` using a unique key and a patch."""
  updateTriptype(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTriptypeInput!
  ): UpdateTriptypePayload

  """Updates a single `Usertable` using its globally unique id and a patch."""
  updateUsertableByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsertableByNodeIdInput!
  ): UpdateUsertablePayload

  """Updates a single `Usertable` using a unique key and a patch."""
  updateUsertableById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsertableByIdInput!
  ): UpdateUsertablePayload

  """Updates a single `Usertable` using a unique key and a patch."""
  updateUsertable(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsertableInput!
  ): UpdateUsertablePayload

  """Deletes a single `Accomodationresource` using its globally unique id."""
  deleteAccomodationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccomodationresourceByNodeIdInput!
  ): DeleteAccomodationresourcePayload

  """Deletes a single `Accomodationresource` using a unique key."""
  deleteAccomodationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccomodationresourceInput!
  ): DeleteAccomodationresourcePayload

  """Deletes a single `Account` using its globally unique id."""
  deleteAccountByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccountByNodeIdInput!
  ): DeleteAccountPayload

  """Deletes a single `Account` using a unique key."""
  deleteAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccountInput!
  ): DeleteAccountPayload

  """Deletes a single `Accounting` using its globally unique id."""
  deleteAccountingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccountingByNodeIdInput!
  ): DeleteAccountingPayload

  """Deletes a single `Accounting` using a unique key."""
  deleteAccounting(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAccountingInput!
  ): DeleteAccountingPayload

  """Deletes a single `Agency` using its globally unique id."""
  deleteAgencyByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyByNodeIdInput!
  ): DeleteAgencyPayload

  """Deletes a single `Agency` using a unique key."""
  deleteAgency(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyInput!
  ): DeleteAgencyPayload

  """Deletes a single `Agencyaccomodation` using its globally unique id."""
  deleteAgencyaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyaccomodationByNodeIdInput!
  ): DeleteAgencyaccomodationPayload

  """Deletes a single `Agencyaccomodation` using a unique key."""
  deleteAgencyaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyaccomodationInput!
  ): DeleteAgencyaccomodationPayload

  """Deletes a single `Agencybid` using its globally unique id."""
  deleteAgencybidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencybidByNodeIdInput!
  ): DeleteAgencybidPayload

  """Deletes a single `Agencybid` using a unique key."""
  deleteAgencybid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencybidInput!
  ): DeleteAgencybidPayload

  """Deletes a single `Agencydeal` using its globally unique id."""
  deleteAgencydealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencydealByNodeIdInput!
  ): DeleteAgencydealPayload

  """Deletes a single `Agencydeal` using a unique key."""
  deleteAgencydeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencydealInput!
  ): DeleteAgencydealPayload

  """Deletes a single `Agencyevent` using its globally unique id."""
  deleteAgencyeventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyeventByNodeIdInput!
  ): DeleteAgencyeventPayload

  """Deletes a single `Agencyevent` using a unique key."""
  deleteAgencyevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyeventInput!
  ): DeleteAgencyeventPayload

  """Deletes a single `Agencyfavorite` using its globally unique id."""
  deleteAgencyfavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyfavoriteByNodeIdInput!
  ): DeleteAgencyfavoritePayload

  """Deletes a single `Agencyfavorite` using a unique key."""
  deleteAgencyfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyfavoriteInput!
  ): DeleteAgencyfavoritePayload

  """Deletes a single `Agencyguide` using its globally unique id."""
  deleteAgencyguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyguideByNodeIdInput!
  ): DeleteAgencyguidePayload

  """Deletes a single `Agencyguide` using a unique key."""
  deleteAgencyguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyguideInput!
  ): DeleteAgencyguidePayload

  """Deletes a single `Agencyhost` using its globally unique id."""
  deleteAgencyhostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyhostByNodeIdInput!
  ): DeleteAgencyhostPayload

  """Deletes a single `Agencyhost` using a unique key."""
  deleteAgencyhost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyhostInput!
  ): DeleteAgencyhostPayload

  """Deletes a single `Agencymedialibrary` using a unique key."""
  deleteAgencymedialibraryById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencymedialibraryByIdInput!
  ): DeleteAgencymedialibraryPayload

  """Deletes a single `Agencyoffer` using its globally unique id."""
  deleteAgencyofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyofferByNodeIdInput!
  ): DeleteAgencyofferPayload

  """Deletes a single `Agencyoffer` using a unique key."""
  deleteAgencyoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyofferInput!
  ): DeleteAgencyofferPayload

  """Deletes a single `Agencyreview` using its globally unique id."""
  deleteAgencyreviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyreviewByNodeIdInput!
  ): DeleteAgencyreviewPayload

  """Deletes a single `Agencyreview` using a unique key."""
  deleteAgencyreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyreviewInput!
  ): DeleteAgencyreviewPayload

  """Deletes a single `Agencytourist` using its globally unique id."""
  deleteAgencytouristByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytouristByNodeIdInput!
  ): DeleteAgencytouristPayload

  """Deletes a single `Agencytourist` using a unique key."""
  deleteAgencytourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytouristInput!
  ): DeleteAgencytouristPayload

  """Deletes a single `Agencytransport` using its globally unique id."""
  deleteAgencytransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytransportByNodeIdInput!
  ): DeleteAgencytransportPayload

  """Deletes a single `Agencytransport` using a unique key."""
  deleteAgencytransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytransportInput!
  ): DeleteAgencytransportPayload

  """Deletes a single `Agencytravelgroup` using its globally unique id."""
  deleteAgencytravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytravelgroupByNodeIdInput!
  ): DeleteAgencytravelgroupPayload

  """Deletes a single `Agencytravelgroup` using a unique key."""
  deleteAgencytravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytravelgroupInput!
  ): DeleteAgencytravelgroupPayload

  """Deletes a single `Agencytripoffer` using its globally unique id."""
  deleteAgencytripofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytripofferByNodeIdInput!
  ): DeleteAgencytripofferPayload

  """Deletes a single `Agencytripoffer` using a unique key."""
  deleteAgencytripoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencytripofferInput!
  ): DeleteAgencytripofferPayload

  """Deletes a single `Agencyuser` using its globally unique id."""
  deleteAgencyuserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyuserByNodeIdInput!
  ): DeleteAgencyuserPayload

  """Deletes a single `Agencyuser` using a unique key."""
  deleteAgencyuser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAgencyuserInput!
  ): DeleteAgencyuserPayload

  """Deletes a single `Assocaccomodation` using its globally unique id."""
  deleteAssocaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocaccomodationByNodeIdInput!
  ): DeleteAssocaccomodationPayload

  """Deletes a single `Assocaccomodation` using a unique key."""
  deleteAssocaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocaccomodationInput!
  ): DeleteAssocaccomodationPayload

  """Deletes a single `Assocdestination` using its globally unique id."""
  deleteAssocdestinationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocdestinationByNodeIdInput!
  ): DeleteAssocdestinationPayload

  """Deletes a single `Assocdestination` using a unique key."""
  deleteAssocdestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocdestinationInput!
  ): DeleteAssocdestinationPayload

  """Deletes a single `Assocevent` using its globally unique id."""
  deleteAssoceventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoceventByNodeIdInput!
  ): DeleteAssoceventPayload

  """Deletes a single `Assocevent` using a unique key."""
  deleteAssocevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoceventInput!
  ): DeleteAssoceventPayload

  """Deletes a single `Assocguide` using its globally unique id."""
  deleteAssocguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocguideByNodeIdInput!
  ): DeleteAssocguidePayload

  """Deletes a single `Assocguide` using a unique key."""
  deleteAssocguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssocguideInput!
  ): DeleteAssocguidePayload

  """Deletes a single `Assochost` using its globally unique id."""
  deleteAssochostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssochostByNodeIdInput!
  ): DeleteAssochostPayload

  """Deletes a single `Assochost` using a unique key."""
  deleteAssochost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssochostInput!
  ): DeleteAssochostPayload

  """Deletes a single `Assoctransport` using its globally unique id."""
  deleteAssoctransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoctransportByNodeIdInput!
  ): DeleteAssoctransportPayload

  """Deletes a single `Assoctransport` using a unique key."""
  deleteAssoctransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoctransportInput!
  ): DeleteAssoctransportPayload

  """Deletes a single `Assoctravelgroup` using its globally unique id."""
  deleteAssoctravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoctravelgroupByNodeIdInput!
  ): DeleteAssoctravelgroupPayload

  """Deletes a single `Assoctravelgroup` using a unique key."""
  deleteAssoctravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAssoctravelgroupInput!
  ): DeleteAssoctravelgroupPayload

  """Deletes a single `Auctioninfo` using its globally unique id."""
  deleteAuctioninfoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAuctioninfoByNodeIdInput!
  ): DeleteAuctioninfoPayload

  """Deletes a single `Auctioninfo` using a unique key."""
  deleteAuctioninfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAuctioninfoInput!
  ): DeleteAuctioninfoPayload

  """Deletes a single `Bid` using its globally unique id."""
  deleteBidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteBidByNodeIdInput!
  ): DeleteBidPayload

  """Deletes a single `Bid` using a unique key."""
  deleteBid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteBidInput!
  ): DeleteBidPayload

  """Deletes a single `Bookingcalendar` using its globally unique id."""
  deleteBookingcalendarByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteBookingcalendarByNodeIdInput!
  ): DeleteBookingcalendarPayload

  """Deletes a single `Bookingcalendar` using a unique key."""
  deleteBookingcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteBookingcalendarInput!
  ): DeleteBookingcalendarPayload

  """Deletes a single `Calendarentry` using its globally unique id."""
  deleteCalendarentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarentryByNodeIdInput!
  ): DeleteCalendarentryPayload

  """Deletes a single `Calendarentry` using a unique key."""
  deleteCalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarentryInput!
  ): DeleteCalendarentryPayload

  """Deletes a single `Commandlogentry` using its globally unique id."""
  deleteCommandlogentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCommandlogentryByNodeIdInput!
  ): DeleteCommandlogentryPayload

  """Deletes a single `Commandlogentry` using a unique key."""
  deleteCommandlogentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCommandlogentryInput!
  ): DeleteCommandlogentryPayload

  """Deletes a single `Contact` using its globally unique id."""
  deleteContactByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteContactByNodeIdInput!
  ): DeleteContactPayload

  """Deletes a single `Contact` using a unique key."""
  deleteContact(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteContactInput!
  ): DeleteContactPayload

  """Deletes a single `Destinationresource` using its globally unique id."""
  deleteDestinationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDestinationresourceByNodeIdInput!
  ): DeleteDestinationresourcePayload

  """Deletes a single `Destinationresource` using a unique key."""
  deleteDestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDestinationresourceInput!
  ): DeleteDestinationresourcePayload

  """Deletes a single `Eventresource` using its globally unique id."""
  deleteEventresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteEventresourceByNodeIdInput!
  ): DeleteEventresourcePayload

  """Deletes a single `Eventresource` using a unique key."""
  deleteEventresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteEventresourceInput!
  ): DeleteEventresourcePayload

  """Deletes a single `Geocoding` using its globally unique id."""
  deleteGeocodingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGeocodingByNodeIdInput!
  ): DeleteGeocodingPayload

  """Deletes a single `Geocoding` using a unique key."""
  deleteGeocoding(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGeocodingInput!
  ): DeleteGeocodingPayload

  """Deletes a single `Guide` using its globally unique id."""
  deleteGuideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideByNodeIdInput!
  ): DeleteGuidePayload

  """Deletes a single `Guide` using a unique key."""
  deleteGuide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideInput!
  ): DeleteGuidePayload

  """Deletes a single `Guidebid` using its globally unique id."""
  deleteGuidebidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidebidByNodeIdInput!
  ): DeleteGuidebidPayload

  """Deletes a single `Guidebid` using a unique key."""
  deleteGuidebid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidebidInput!
  ): DeleteGuidebidPayload

  """Deletes a single `Guidedeal` using its globally unique id."""
  deleteGuidedealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidedealByNodeIdInput!
  ): DeleteGuidedealPayload

  """Deletes a single `Guidedeal` using a unique key."""
  deleteGuidedeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidedealInput!
  ): DeleteGuidedealPayload

  """Deletes a single `Guidefavorite` using its globally unique id."""
  deleteGuidefavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidefavoriteByNodeIdInput!
  ): DeleteGuidefavoritePayload

  """Deletes a single `Guidefavorite` using a unique key."""
  deleteGuidefavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidefavoriteInput!
  ): DeleteGuidefavoritePayload

  """Deletes a single `Guideoffer` using its globally unique id."""
  deleteGuideofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideofferByNodeIdInput!
  ): DeleteGuideofferPayload

  """Deletes a single `Guideoffer` using a unique key."""
  deleteGuideoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideofferInput!
  ): DeleteGuideofferPayload

  """Deletes a single `Guideresource` using its globally unique id."""
  deleteGuideresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideresourceByNodeIdInput!
  ): DeleteGuideresourcePayload

  """Deletes a single `Guideresource` using a unique key."""
  deleteGuideresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuideresourceInput!
  ): DeleteGuideresourcePayload

  """Deletes a single `Guidereview` using its globally unique id."""
  deleteGuidereviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidereviewByNodeIdInput!
  ): DeleteGuidereviewPayload

  """Deletes a single `Guidereview` using a unique key."""
  deleteGuidereview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGuidereviewInput!
  ): DeleteGuidereviewPayload

  """Deletes a single `Hostresource` using its globally unique id."""
  deleteHostresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteHostresourceByNodeIdInput!
  ): DeleteHostresourcePayload

  """Deletes a single `Hostresource` using a unique key."""
  deleteHostresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteHostresourceInput!
  ): DeleteHostresourcePayload

  """Deletes a single `Languagelevel` using its globally unique id."""
  deleteLanguagelevelByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteLanguagelevelByNodeIdInput!
  ): DeleteLanguagelevelPayload

  """Deletes a single `Languagelevel` using a unique key."""
  deleteLanguagelevel(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteLanguagelevelInput!
  ): DeleteLanguagelevelPayload

  """
  Deletes a single `Mediadestinationresource` using its globally unique id.
  """
  deleteMediadestinationresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByNodeIdInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByIdInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByMainImageSignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByMainImageSignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByGuideSignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByGuideSignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByMapImageSignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByMapImageSignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByThumbnailImageSignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByThumbnailImageSignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery1SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery1SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery2SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery2SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery3SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery3SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery4SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery4SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery5SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery5SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery6SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery6SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery7SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery7SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery8SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery8SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery9SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery9SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Mediadestinationresource` using a unique key."""
  deleteMediadestinationresourceByImageGallery10SignedUrl(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMediadestinationresourceByImageGallery10SignedUrlInput!
  ): DeleteMediadestinationresourcePayload

  """Deletes a single `Medialocation` using its globally unique id."""
  deleteMedialocationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationByNodeIdInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Medialocation` using a unique key."""
  deleteMedialocationById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationByIdInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Medialocation` using a unique key."""
  deleteMedialocation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Medialocation` using a unique key."""
  deleteMedialocationByUploadLocationOriginal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationByUploadLocationOriginalInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Medialocation` using a unique key."""
  deleteMedialocationByUploadLocationThumbnail(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationByUploadLocationThumbnailInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Medialocation` using a unique key."""
  deleteMedialocationByUploadLocationMobile(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationByUploadLocationMobileInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Medialocation` using a unique key."""
  deleteMedialocationByUploadLocationTablet(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationByUploadLocationTabletInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Medialocation` using a unique key."""
  deleteMedialocationByUploadLocationDesktop(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationByUploadLocationDesktopInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Medialocation` using a unique key."""
  deleteMedialocationByUploadLocation2K(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMedialocationByUploadLocation2KInput!
  ): DeleteMedialocationPayload

  """Deletes a single `Presentation` using its globally unique id."""
  deletePresentationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePresentationByNodeIdInput!
  ): DeletePresentationPayload

  """Deletes a single `Presentation` using a unique key."""
  deletePresentation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePresentationInput!
  ): DeletePresentationPayload

  """Deletes a single `Priceinfo` using its globally unique id."""
  deletePriceinfoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePriceinfoByNodeIdInput!
  ): DeletePriceinfoPayload

  """Deletes a single `Priceinfo` using a unique key."""
  deletePriceinfo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePriceinfoInput!
  ): DeletePriceinfoPayload

  """Deletes a single `Publisher` using its globally unique id."""
  deletePublisherByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePublisherByNodeIdInput!
  ): DeletePublisherPayload

  """Deletes a single `Publisher` using a unique key."""
  deletePublisher(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePublisherInput!
  ): DeletePublisherPayload

  """Deletes a single `Review` using its globally unique id."""
  deleteReviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteReviewByNodeIdInput!
  ): DeleteReviewPayload

  """Deletes a single `Review` using a unique key."""
  deleteReview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteReviewInput!
  ): DeleteReviewPayload

  """Deletes a single `Roomcalendar` using its globally unique id."""
  deleteRoomcalendarByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomcalendarByNodeIdInput!
  ): DeleteRoomcalendarPayload

  """Deletes a single `Roomcalendar` using a unique key."""
  deleteRoomcalendar(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomcalendarInput!
  ): DeleteRoomcalendarPayload

  """Deletes a single `Roomcalendarentry` using its globally unique id."""
  deleteRoomcalendarentryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomcalendarentryByNodeIdInput!
  ): DeleteRoomcalendarentryPayload

  """Deletes a single `Roomcalendarentry` using a unique key."""
  deleteRoomcalendarentry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomcalendarentryInput!
  ): DeleteRoomcalendarentryPayload

  """Deletes a single `Roomlist` using its globally unique id."""
  deleteRoomlistByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomlistByNodeIdInput!
  ): DeleteRoomlistPayload

  """Deletes a single `Roomlist` using a unique key."""
  deleteRoomlist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteRoomlistInput!
  ): DeleteRoomlistPayload

  """
  Deletes a single `Similarbytriptypeaccomodation` using its globally unique id.
  """
  deleteSimilarbytriptypeaccomodationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeaccomodationByNodeIdInput!
  ): DeleteSimilarbytriptypeaccomodationPayload

  """Deletes a single `Similarbytriptypeaccomodation` using a unique key."""
  deleteSimilarbytriptypeaccomodation(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeaccomodationInput!
  ): DeleteSimilarbytriptypeaccomodationPayload

  """
  Deletes a single `Similarbytriptypedestination` using its globally unique id.
  """
  deleteSimilarbytriptypedestinationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypedestinationByNodeIdInput!
  ): DeleteSimilarbytriptypedestinationPayload

  """Deletes a single `Similarbytriptypedestination` using a unique key."""
  deleteSimilarbytriptypedestination(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypedestinationInput!
  ): DeleteSimilarbytriptypedestinationPayload

  """
  Deletes a single `Similarbytriptypeevent` using its globally unique id.
  """
  deleteSimilarbytriptypeeventByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeeventByNodeIdInput!
  ): DeleteSimilarbytriptypeeventPayload

  """Deletes a single `Similarbytriptypeevent` using a unique key."""
  deleteSimilarbytriptypeevent(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeeventInput!
  ): DeleteSimilarbytriptypeeventPayload

  """
  Deletes a single `Similarbytriptypeguide` using its globally unique id.
  """
  deleteSimilarbytriptypeguideByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeguideByNodeIdInput!
  ): DeleteSimilarbytriptypeguidePayload

  """Deletes a single `Similarbytriptypeguide` using a unique key."""
  deleteSimilarbytriptypeguide(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypeguideInput!
  ): DeleteSimilarbytriptypeguidePayload

  """Deletes a single `Similarbytriptypehost` using its globally unique id."""
  deleteSimilarbytriptypehostByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypehostByNodeIdInput!
  ): DeleteSimilarbytriptypehostPayload

  """Deletes a single `Similarbytriptypehost` using a unique key."""
  deleteSimilarbytriptypehost(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypehostInput!
  ): DeleteSimilarbytriptypehostPayload

  """
  Deletes a single `Similarbytriptypetransport` using its globally unique id.
  """
  deleteSimilarbytriptypetransportByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypetransportByNodeIdInput!
  ): DeleteSimilarbytriptypetransportPayload

  """Deletes a single `Similarbytriptypetransport` using a unique key."""
  deleteSimilarbytriptypetransport(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypetransportInput!
  ): DeleteSimilarbytriptypetransportPayload

  """
  Deletes a single `Similarbytriptypetravelgroup` using its globally unique id.
  """
  deleteSimilarbytriptypetravelgroupByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypetravelgroupByNodeIdInput!
  ): DeleteSimilarbytriptypetravelgroupPayload

  """Deletes a single `Similarbytriptypetravelgroup` using a unique key."""
  deleteSimilarbytriptypetravelgroup(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSimilarbytriptypetravelgroupInput!
  ): DeleteSimilarbytriptypetravelgroupPayload

  """Deletes a single `Timerange` using its globally unique id."""
  deleteTimerangeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTimerangeByNodeIdInput!
  ): DeleteTimerangePayload

  """Deletes a single `Timerange` using a unique key."""
  deleteTimerange(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTimerangeInput!
  ): DeleteTimerangePayload

  """Deletes a single `Tourist` using its globally unique id."""
  deleteTouristByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristByNodeIdInput!
  ): DeleteTouristPayload

  """Deletes a single `Tourist` using a unique key."""
  deleteTourist(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristInput!
  ): DeleteTouristPayload

  """Deletes a single `Touristbid` using its globally unique id."""
  deleteTouristbidByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristbidByNodeIdInput!
  ): DeleteTouristbidPayload

  """Deletes a single `Touristbid` using a unique key."""
  deleteTouristbid(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristbidInput!
  ): DeleteTouristbidPayload

  """Deletes a single `Touristdeal` using its globally unique id."""
  deleteTouristdealByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristdealByNodeIdInput!
  ): DeleteTouristdealPayload

  """Deletes a single `Touristdeal` using a unique key."""
  deleteTouristdeal(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristdealInput!
  ): DeleteTouristdealPayload

  """Deletes a single `Touristfavorite` using its globally unique id."""
  deleteTouristfavoriteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristfavoriteByNodeIdInput!
  ): DeleteTouristfavoritePayload

  """Deletes a single `Touristfavorite` using a unique key."""
  deleteTouristfavorite(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristfavoriteInput!
  ): DeleteTouristfavoritePayload

  """Deletes a single `Touristoffer` using its globally unique id."""
  deleteTouristofferByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristofferByNodeIdInput!
  ): DeleteTouristofferPayload

  """Deletes a single `Touristoffer` using a unique key."""
  deleteTouristoffer(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristofferInput!
  ): DeleteTouristofferPayload

  """Deletes a single `Touristresource` using its globally unique id."""
  deleteTouristresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristresourceByNodeIdInput!
  ): DeleteTouristresourcePayload

  """Deletes a single `Touristresource` using a unique key."""
  deleteTouristresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristresourceInput!
  ): DeleteTouristresourcePayload

  """Deletes a single `Touristreview` using its globally unique id."""
  deleteTouristreviewByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristreviewByNodeIdInput!
  ): DeleteTouristreviewPayload

  """Deletes a single `Touristreview` using a unique key."""
  deleteTouristreview(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTouristreviewInput!
  ): DeleteTouristreviewPayload

  """Deletes a single `Transportresource` using its globally unique id."""
  deleteTransportresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTransportresourceByNodeIdInput!
  ): DeleteTransportresourcePayload

  """Deletes a single `Transportresource` using a unique key."""
  deleteTransportresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTransportresourceInput!
  ): DeleteTransportresourcePayload

  """Deletes a single `Travelgroupresource` using its globally unique id."""
  deleteTravelgroupresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTravelgroupresourceByNodeIdInput!
  ): DeleteTravelgroupresourcePayload

  """Deletes a single `Travelgroupresource` using a unique key."""
  deleteTravelgroupresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTravelgroupresourceInput!
  ): DeleteTravelgroupresourcePayload

  """Deletes a single `Tripofferresource` using its globally unique id."""
  deleteTripofferresourceByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTripofferresourceByNodeIdInput!
  ): DeleteTripofferresourcePayload

  """Deletes a single `Tripofferresource` using a unique key."""
  deleteTripofferresource(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTripofferresourceInput!
  ): DeleteTripofferresourcePayload

  """Deletes a single `Triptype` using its globally unique id."""
  deleteTriptypeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTriptypeByNodeIdInput!
  ): DeleteTriptypePayload

  """Deletes a single `Triptype` using a unique key."""
  deleteTriptypeById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTriptypeByIdInput!
  ): DeleteTriptypePayload

  """Deletes a single `Triptype` using a unique key."""
  deleteTriptype(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTriptypeInput!
  ): DeleteTriptypePayload

  """Deletes a single `Usertable` using its globally unique id."""
  deleteUsertableByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsertableByNodeIdInput!
  ): DeleteUsertablePayload

  """Deletes a single `Usertable` using a unique key."""
  deleteUsertableById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsertableByIdInput!
  ): DeleteUsertablePayload

  """Deletes a single `Usertable` using a unique key."""
  deleteUsertable(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsertableInput!
  ): DeleteUsertablePayload
}

"""An object with a globally unique `ID`."""
interface Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor

  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}

type Presentation implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  headline: String
  publisherId: Int!
  createdById: Int!
  resourceType: Resourcetype!
  resourceTypeId: Int!
  isActive: Boolean
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Presentation`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Presentation`."""
  createdBy: Usertable

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection!
}

"""
A condition to be used against `Presentation` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input PresentationCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int
}

"""An input for mutations affecting `Presentation`"""
input PresentationInput {
  id: Int
  headline: String
  publisherId: Int!
  createdById: Int!
  resourceType: Resourcetype!
  resourceTypeId: Int!
  isActive: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Presentation`. Fields that are set will be updated.
"""
input PresentationPatch {
  id: Int
  headline: String
  publisherId: Int
  createdById: Int
  resourceType: Resourcetype
  resourceTypeId: Int
  isActive: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Presentation` values."""
type PresentationsConnection {
  """A list of `Presentation` objects."""
  nodes: [Presentation!]!

  """
  A list of edges which contains the `Presentation` and cursor to aid in pagination.
  """
  edges: [PresentationsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Presentation` you could get from the connection."""
  totalCount: Int!
}

"""A `Presentation` edge in the connection."""
type PresentationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Presentation` at the end of the edge."""
  node: Presentation!
}

"""Methods to use when ordering `Presentation`."""
enum PresentationsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Priceinfo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  publisherId: Int!
  createdById: Int!
  advertisedPrice: Float!
  currentHighBId: Float
  bidId: Int
  acceptsOffers: Boolean!
  auctionExpiry: Datetime
  isAuction: Boolean!
  isActive: Boolean
  atResourceType: Resourcetype!
  belongsToId: Int!
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Priceinfo`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Priceinfo`."""
  createdBy: Usertable

  """Reads a single `Bid` that is related to this `Priceinfo`."""
  bid: Bid

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByPriceInfoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByPriceInfoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition
  ): TripofferresourcesConnection!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByPriceInfoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByPriceInfoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition
  ): TouristresourcesConnection!
}

"""
A condition to be used against `Priceinfo` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input PriceinfoCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `bidId` field."""
  bidId: Int
}

"""An input for mutations affecting `Priceinfo`"""
input PriceinfoInput {
  id: Int
  publisherId: Int!
  createdById: Int!
  advertisedPrice: Float!
  currentHighBId: Float
  bidId: Int
  acceptsOffers: Boolean!
  auctionExpiry: Datetime
  isAuction: Boolean!
  isActive: Boolean
  atResourceType: Resourcetype!
  belongsToId: Int!
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Priceinfo`. Fields that are set will be updated.
"""
input PriceinfoPatch {
  id: Int
  publisherId: Int
  createdById: Int
  advertisedPrice: Float
  currentHighBId: Float
  bidId: Int
  acceptsOffers: Boolean
  auctionExpiry: Datetime
  isAuction: Boolean
  isActive: Boolean
  atResourceType: Resourcetype
  belongsToId: Int
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Priceinfo` values."""
type PriceinfosConnection {
  """A list of `Priceinfo` objects."""
  nodes: [Priceinfo!]!

  """
  A list of edges which contains the `Priceinfo` and cursor to aid in pagination.
  """
  edges: [PriceinfosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Priceinfo` you could get from the connection."""
  totalCount: Int!
}

"""A `Priceinfo` edge in the connection."""
type PriceinfosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Priceinfo` at the end of the edge."""
  node: Priceinfo!
}

"""Methods to use when ordering `Priceinfo`."""
enum PriceinfosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  BID_ID_ASC
  BID_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Publisher implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  name: String
  createdById: Int
  belongsToId: Int
  belongsToType: Resourcetype
  canReview: Boolean
  canPublish: Boolean
  isRomanian: Boolean
  isActive: Boolean
  commandLogEntryId: [Int]
  timeCreated: Datetime
  timeCommand: Datetime

  """Reads a single `Usertable` that is related to this `Publisher`."""
  createdBy: Usertable

  """Reads and enables pagination through a set of `Commandlogentry`."""
  commandlogentriesByAtPublisher(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CommandlogentryCondition
  ): CommandlogentriesConnection!

  """Reads and enables pagination through a set of `Geocoding`."""
  geocodingsByPublishedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GeocodingCondition
  ): GeocodingsConnection!

  """Reads and enables pagination through a set of `Accounting`."""
  accountings(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccountingCondition
  ): AccountingsConnection!

  """Reads and enables pagination through a set of `Presentation`."""
  presentations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PresentationCondition
  ): PresentationsConnection!

  """Reads and enables pagination through a set of `Auctioninfo`."""
  auctioninfosByPublishedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AuctioninfoCondition
  ): AuctioninfosConnection!

  """Reads and enables pagination through a set of `Priceinfo`."""
  priceinfos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PriceinfoCondition
  ): PriceinfosConnection!

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByPublishedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition
  ): TripofferresourcesConnection!

  """Reads and enables pagination through a set of `Roomcalendar`."""
  roomcalendars(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarCondition
  ): RoomcalendarsConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Review`."""
  reviews(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ReviewCondition
  ): ReviewsConnection!

  """Reads and enables pagination through a set of `Review`."""
  reviewsByPublisherTarget(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ReviewCondition
  ): ReviewsConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection!

  """Reads and enables pagination through a set of `Tourist`."""
  tourists(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition
  ): TouristsConnection!

  """Reads and enables pagination through a set of `Languagelevel`."""
  languagelevels(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: LanguagelevelCondition
  ): LanguagelevelsConnection!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Guide`."""
  guides(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Agency`."""
  agencies(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition
  ): AgenciesConnection!

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Agencyreview`."""
  agencyreviews(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyreviewCondition
  ): AgencyreviewsConnection!

  """Reads and enables pagination through a set of `Guidereview`."""
  guidereviews(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidereviewCondition
  ): GuidereviewsConnection!

  """Reads and enables pagination through a set of `Touristreview`."""
  touristreviews(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristreviewCondition
  ): TouristreviewsConnection!
}

"""
A condition to be used against `Publisher` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input PublisherCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `belongsToType` field."""
  belongsToType: Resourcetype

  """Checks for equality with the object’s `commandLogEntryId` field."""
  commandLogEntryId: [Int]
}

"""An input for mutations affecting `Publisher`"""
input PublisherInput {
  id: Int
  name: String
  createdById: Int
  belongsToId: Int
  belongsToType: Resourcetype
  canReview: Boolean
  canPublish: Boolean
  isRomanian: Boolean
  isActive: Boolean
  commandLogEntryId: [Int]
  timeCreated: Datetime
  timeCommand: Datetime
}

"""
Represents an update to a `Publisher`. Fields that are set will be updated.
"""
input PublisherPatch {
  id: Int
  name: String
  createdById: Int
  belongsToId: Int
  belongsToType: Resourcetype
  canReview: Boolean
  canPublish: Boolean
  isRomanian: Boolean
  isActive: Boolean
  commandLogEntryId: [Int]
  timeCreated: Datetime
  timeCommand: Datetime
}

"""A connection to a list of `Publisher` values."""
type PublishersConnection {
  """A list of `Publisher` objects."""
  nodes: [Publisher!]!

  """
  A list of edges which contains the `Publisher` and cursor to aid in pagination.
  """
  edges: [PublishersEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Publisher` you could get from the connection."""
  totalCount: Int!
}

"""A `Publisher` edge in the connection."""
type PublishersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Publisher` at the end of the edge."""
  node: Publisher!
}

"""Methods to use when ordering `Publisher`."""
enum PublishersOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  BELONGS_TO_TYPE_ASC
  BELONGS_TO_TYPE_DESC
  COMMAND_LOG_ENTRY_ID_ASC
  COMMAND_LOG_ENTRY_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""The root query type which gives access points into the data universe."""
type Query implements Node {
  """
  Exposes the root query type nested one level down. This is helpful for Relay 1
  which can only query top level fields if they are in a particular form.
  """
  query: Query!

  """
  The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.
  """
  nodeId: ID!

  """Fetches an object given its globally unique `ID`."""
  node(
    """The globally unique `ID`."""
    nodeId: ID!
  ): Node

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition
  ): AccomodationresourcesConnection

  """Reads and enables pagination through a set of `Account`."""
  accounts(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccountCondition
  ): AccountsConnection

  """Reads and enables pagination through a set of `Accounting`."""
  accountings(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccountingCondition
  ): AccountingsConnection

  """Reads and enables pagination through a set of `Agency`."""
  agencies(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition
  ): AgenciesConnection

  """Reads and enables pagination through a set of `Agencyaccomodation`."""
  agencyaccomodations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyaccomodationCondition
  ): AgencyaccomodationsConnection

  """Reads and enables pagination through a set of `Agencybid`."""
  agencybids(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencybidCondition
  ): AgencybidsConnection

  """Reads and enables pagination through a set of `Agencydeal`."""
  agencydeals(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencydeal`."""
    orderBy: [AgencydealsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencydealCondition
  ): AgencydealsConnection

  """Reads and enables pagination through a set of `Agencyevent`."""
  agencyevents(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyeventCondition
  ): AgencyeventsConnection

  """Reads and enables pagination through a set of `Agencyfavorite`."""
  agencyfavorites(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyfavorite`."""
    orderBy: [AgencyfavoritesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyfavoriteCondition
  ): AgencyfavoritesConnection

  """Reads and enables pagination through a set of `Agencyguide`."""
  agencyguides(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyguideCondition
  ): AgencyguidesConnection

  """Reads and enables pagination through a set of `Agencyhost`."""
  agencyhosts(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyhostCondition
  ): AgencyhostsConnection

  """Reads and enables pagination through a set of `Agencymedialibrary`."""
  agencymedialibraries(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencymedialibraryCondition
  ): AgencymedialibrariesConnection

  """Reads and enables pagination through a set of `Agencyoffer`."""
  agencyoffers(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyoffer`."""
    orderBy: [AgencyoffersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyofferCondition
  ): AgencyoffersConnection

  """Reads and enables pagination through a set of `Agencyreview`."""
  agencyreviews(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyreviewCondition
  ): AgencyreviewsConnection

  """Reads and enables pagination through a set of `Agencytourist`."""
  agencytourists(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytouristCondition
  ): AgencytouristsConnection

  """Reads and enables pagination through a set of `Agencytransport`."""
  agencytransports(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytransportCondition
  ): AgencytransportsConnection

  """Reads and enables pagination through a set of `Agencytravelgroup`."""
  agencytravelgroups(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytravelgroupCondition
  ): AgencytravelgroupsConnection

  """Reads and enables pagination through a set of `Agencytripoffer`."""
  agencytripoffers(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytripofferCondition
  ): AgencytripoffersConnection

  """Reads and enables pagination through a set of `Agencyuser`."""
  agencyusers(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyuserCondition
  ): AgencyusersConnection

  """Reads and enables pagination through a set of `Assocaccomodation`."""
  assocaccomodations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocaccomodationCondition
  ): AssocaccomodationsConnection

  """Reads and enables pagination through a set of `Assocdestination`."""
  assocdestinations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocdestinationCondition
  ): AssocdestinationsConnection

  """Reads and enables pagination through a set of `Assocevent`."""
  assocevents(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoceventCondition
  ): AssoceventsConnection

  """Reads and enables pagination through a set of `Assocguide`."""
  assocguides(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssocguideCondition
  ): AssocguidesConnection

  """Reads and enables pagination through a set of `Assochost`."""
  assochosts(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssochostCondition
  ): AssochostsConnection

  """Reads and enables pagination through a set of `Assoctransport`."""
  assoctransports(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctransportCondition
  ): AssoctransportsConnection

  """Reads and enables pagination through a set of `Assoctravelgroup`."""
  assoctravelgroups(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctravelgroupCondition
  ): AssoctravelgroupsConnection

  """Reads and enables pagination through a set of `Auctioninfo`."""
  auctioninfos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AuctioninfoCondition
  ): AuctioninfosConnection

  """Reads and enables pagination through a set of `Bid`."""
  bids(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Bid`."""
    orderBy: [BidsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: BidCondition
  ): BidsConnection

  """Reads and enables pagination through a set of `Bookingcalendar`."""
  bookingcalendars(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: BookingcalendarCondition
  ): BookingcalendarsConnection

  """Reads and enables pagination through a set of `Calendarentry`."""
  calendarentries(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calendarentry`."""
    orderBy: [CalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarentryCondition
  ): CalendarentriesConnection

  """Reads and enables pagination through a set of `Commandlogentry`."""
  commandlogentries(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CommandlogentryCondition
  ): CommandlogentriesConnection

  """Reads and enables pagination through a set of `Contact`."""
  contacts(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ContactCondition
  ): ContactsConnection

  """Reads and enables pagination through a set of `Date_`."""
  dateS(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Date_`."""
    orderBy: [DateSOrderBy!] = [NATURAL]
  ): DateSConnection

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition
  ): DestinationresourcesConnection

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition
  ): EventresourcesConnection

  """Reads and enables pagination through a set of `Geocoding`."""
  geocodings(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GeocodingCondition
  ): GeocodingsConnection

  """Reads and enables pagination through a set of `Guide`."""
  guides(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection

  """Reads and enables pagination through a set of `Guidebid`."""
  guidebids(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guidebid`."""
    orderBy: [GuidebidsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidebidCondition
  ): GuidebidsConnection

  """Reads and enables pagination through a set of `Guidedeal`."""
  guidedeals(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guidedeal`."""
    orderBy: [GuidedealsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidedealCondition
  ): GuidedealsConnection

  """Reads and enables pagination through a set of `Guidefavorite`."""
  guidefavorites(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guidefavorite`."""
    orderBy: [GuidefavoritesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidefavoriteCondition
  ): GuidefavoritesConnection

  """Reads and enables pagination through a set of `Guideoffer`."""
  guideoffers(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guideoffer`."""
    orderBy: [GuideoffersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideofferCondition
  ): GuideoffersConnection

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition
  ): GuideresourcesConnection

  """Reads and enables pagination through a set of `Guidereview`."""
  guidereviews(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidereviewCondition
  ): GuidereviewsConnection

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection

  """Reads and enables pagination through a set of `Languagelevel`."""
  languagelevels(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: LanguagelevelCondition
  ): LanguagelevelsConnection

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection

  """Reads and enables pagination through a set of `Medialocation`."""
  medialocations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MedialocationCondition
  ): MedialocationsConnection

  """Reads and enables pagination through a set of `Presentation`."""
  presentations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PresentationCondition
  ): PresentationsConnection

  """Reads and enables pagination through a set of `Priceinfo`."""
  priceinfos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PriceinfoCondition
  ): PriceinfosConnection

  """Reads and enables pagination through a set of `Publisher`."""
  publishers(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PublisherCondition
  ): PublishersConnection

  """Reads and enables pagination through a set of `Review`."""
  reviews(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ReviewCondition
  ): ReviewsConnection

  """Reads and enables pagination through a set of `Roomcalendar`."""
  roomcalendars(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarCondition
  ): RoomcalendarsConnection

  """Reads and enables pagination through a set of `Roomcalendarentry`."""
  roomcalendarentries(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarentryCondition
  ): RoomcalendarentriesConnection

  """Reads and enables pagination through a set of `Roomlist`."""
  roomlists(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomlistCondition
  ): RoomlistsConnection

  """
  Reads and enables pagination through a set of `Similarbytriptypeaccomodation`.
  """
  similarbytriptypeaccomodations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeaccomodationCondition
  ): SimilarbytriptypeaccomodationsConnection

  """
  Reads and enables pagination through a set of `Similarbytriptypedestination`.
  """
  similarbytriptypedestinations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypedestinationCondition
  ): SimilarbytriptypedestinationsConnection

  """
  Reads and enables pagination through a set of `Similarbytriptypeevent`.
  """
  similarbytriptypeevents(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeeventCondition
  ): SimilarbytriptypeeventsConnection

  """
  Reads and enables pagination through a set of `Similarbytriptypeguide`.
  """
  similarbytriptypeguides(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypeguideCondition
  ): SimilarbytriptypeguidesConnection

  """Reads and enables pagination through a set of `Similarbytriptypehost`."""
  similarbytriptypehosts(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypehostCondition
  ): SimilarbytriptypehostsConnection

  """
  Reads and enables pagination through a set of `Similarbytriptypetransport`.
  """
  similarbytriptypetransports(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypetransportCondition
  ): SimilarbytriptypetransportsConnection

  """
  Reads and enables pagination through a set of `Similarbytriptypetravelgroup`.
  """
  similarbytriptypetravelgroups(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SimilarbytriptypetravelgroupCondition
  ): SimilarbytriptypetravelgroupsConnection

  """Reads and enables pagination through a set of `Timerange`."""
  timeranges(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Timerange`."""
    orderBy: [TimerangesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TimerangeCondition
  ): TimerangesConnection

  """Reads and enables pagination through a set of `Tourist`."""
  tourists(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition
  ): TouristsConnection

  """Reads and enables pagination through a set of `Touristbid`."""
  touristbids(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristbid`."""
    orderBy: [TouristbidsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristbidCondition
  ): TouristbidsConnection

  """Reads and enables pagination through a set of `Touristdeal`."""
  touristdeals(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristdeal`."""
    orderBy: [TouristdealsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristdealCondition
  ): TouristdealsConnection

  """Reads and enables pagination through a set of `Touristfavorite`."""
  touristfavorites(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristfavorite`."""
    orderBy: [TouristfavoritesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristfavoriteCondition
  ): TouristfavoritesConnection

  """Reads and enables pagination through a set of `Touristoffer`."""
  touristoffers(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristoffer`."""
    orderBy: [TouristoffersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristofferCondition
  ): TouristoffersConnection

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition
  ): TouristresourcesConnection

  """Reads and enables pagination through a set of `Touristreview`."""
  touristreviews(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristreviewCondition
  ): TouristreviewsConnection

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition
  ): TransportresourcesConnection

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition
  ): TravelgroupresourcesConnection

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresources(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition
  ): TripofferresourcesConnection

  """Reads and enables pagination through a set of `Triptype`."""
  triptypes(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TriptypeCondition
  ): TriptypesConnection

  """Reads and enables pagination through a set of `Usertable`."""
  usertables(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsertableCondition
  ): UsertablesConnection
  accomodationresource(id: Int!): Accomodationresource
  account(id: Int!): Account
  accounting(id: Int!): Accounting
  agency(id: Int!): Agency
  agencyaccomodation(agencyId: Int!, accomodationId: Int!): Agencyaccomodation
  agencybid(id: Int!): Agencybid
  agencydeal(id: Int!): Agencydeal
  agencyevent(agencyId: Int!, eventId: Int!): Agencyevent
  agencyfavorite(resourceId: Int!, resourceType: Resourcetype!, atAgency: Int!): Agencyfavorite
  agencyguide(agencyId: Int!, guideId: Int!): Agencyguide
  agencyhost(agencyId: Int!, hostId: Int!): Agencyhost
  agencymedialibraryById(id: Int!): Agencymedialibrary
  agencyoffer(id: Int!): Agencyoffer
  agencyreview(id: Int!): Agencyreview
  agencytourist(agencyId: Int!, touristId: Int!): Agencytourist
  agencytransport(agencyId: Int!, transportId: Int!): Agencytransport
  agencytravelgroup(agencyId: Int!, travelGroupId: Int!): Agencytravelgroup
  agencytripoffer(agencyId: Int!, tripOfferId: Int!): Agencytripoffer
  agencyuser(agencyId: Int!, userId: Int!): Agencyuser
  assocaccomodation(atAgency: Int!, accomodationId: Int!): Assocaccomodation
  assocdestination(atAgency: Int!, destinationId: Int!): Assocdestination
  assocevent(atAgency: Int!, eventId: Int!): Assocevent
  assocguide(atAgency: Int!, guideId: Int!): Assocguide
  assochost(atAgency: Int!, hostId: Int!): Assochost
  assoctransport(atAgency: Int!, transportId: Int!): Assoctransport
  assoctravelgroup(atAgency: Int!, travelGroupId: Int!): Assoctravelgroup
  auctioninfo(id: Int!): Auctioninfo
  bid(id: Int!): Bid
  bookingcalendar(id: Int!): Bookingcalendar
  calendarentry(id: Int!): Calendarentry
  commandlogentry(id: Int!): Commandlogentry
  contact(id: Int!): Contact
  destinationresource(id: Int!): Destinationresource
  eventresource(id: Int!): Eventresource
  geocoding(id: Int!): Geocoding
  guide(id: Int!): Guide
  guidebid(id: Int!): Guidebid
  guidedeal(id: Int!): Guidedeal
  guidefavorite(id: Int!): Guidefavorite
  guideoffer(id: Int!): Guideoffer
  guideresource(id: Int!): Guideresource
  guidereview(id: Int!): Guidereview
  hostresource(id: Int!): Hostresource
  languagelevel(id: Int!): Languagelevel
  mediadestinationresourceById(id: Int!): Mediadestinationresource
  mediadestinationresource(atAgency: Int!, atDestination: Int!): Mediadestinationresource
  mediadestinationresourceByMainImageSignedUrl(mainImageSignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByGuideSignedUrl(guideSignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByMapImageSignedUrl(mapImageSignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByThumbnailImageSignedUrl(thumbnailImageSignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery1SignedUrl(imageGallery1SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery2SignedUrl(imageGallery2SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery3SignedUrl(imageGallery3SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery4SignedUrl(imageGallery4SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery5SignedUrl(imageGallery5SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery6SignedUrl(imageGallery6SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery7SignedUrl(imageGallery7SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery8SignedUrl(imageGallery8SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery9SignedUrl(imageGallery9SignedUrl: String!): Mediadestinationresource
  mediadestinationresourceByImageGallery10SignedUrl(imageGallery10SignedUrl: String!): Mediadestinationresource
  medialocationById(id: Int!): Medialocation
  medialocation(atAgency: Int!, atResource: Int!, mediaLocationPlacement: Medialocationplacement!): Medialocation
  medialocationByUploadLocationOriginal(uploadLocationOriginal: String!): Medialocation
  medialocationByUploadLocationThumbnail(uploadLocationThumbnail: String!): Medialocation
  medialocationByUploadLocationMobile(uploadLocationMobile: String!): Medialocation
  medialocationByUploadLocationTablet(uploadLocationTablet: String!): Medialocation
  medialocationByUploadLocationDesktop(uploadLocationDesktop: String!): Medialocation
  medialocationByUploadLocation2K(uploadLocation2K: String!): Medialocation
  presentation(id: Int!): Presentation
  priceinfo(id: Int!): Priceinfo
  publisher(id: Int!): Publisher
  review(id: Int!): Review
  roomcalendar(id: Int!): Roomcalendar
  roomcalendarentry(id: Int!): Roomcalendarentry
  roomlist(id: Int!): Roomlist
  similarbytriptypeaccomodation(atAgency: Int!, tripTypeName: String!): Similarbytriptypeaccomodation
  similarbytriptypedestination(atAgency: Int!, tripTypeName: String!): Similarbytriptypedestination
  similarbytriptypeevent(atAgency: Int!, tripTypeName: String!): Similarbytriptypeevent
  similarbytriptypeguide(atAgency: Int!, tripTypeName: String!): Similarbytriptypeguide
  similarbytriptypehost(atAgency: Int!, tripTypeName: String!): Similarbytriptypehost
  similarbytriptypetransport(atAgency: Int!, tripTypeName: String!): Similarbytriptypetransport
  similarbytriptypetravelgroup(atAgency: Int!, tripTypeName: String!): Similarbytriptypetravelgroup
  timerange(id: Int!): Timerange
  tourist(id: Int!): Tourist
  touristbid(id: Int!): Touristbid
  touristdeal(id: Int!): Touristdeal
  touristfavorite(id: Int!): Touristfavorite
  touristoffer(id: Int!): Touristoffer
  touristresource(id: Int!): Touristresource
  touristreview(id: Int!): Touristreview
  transportresource(id: Int!): Transportresource
  travelgroupresource(id: Int!): Travelgroupresource
  tripofferresource(id: Int!): Tripofferresource
  triptypeById(id: Int!): Triptype
  triptype(atAgency: Int!, tripTypeName: String!): Triptype
  usertableById(id: Int!): Usertable
  usertable(userEmail: String!): Usertable

  """Reads a single `Accomodationresource` using its globally unique `ID`."""
  accomodationresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Accomodationresource`.
    """
    nodeId: ID!
  ): Accomodationresource

  """Reads a single `Account` using its globally unique `ID`."""
  accountByNodeId(
    """The globally unique `ID` to be used in selecting a single `Account`."""
    nodeId: ID!
  ): Account

  """Reads a single `Accounting` using its globally unique `ID`."""
  accountingByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Accounting`.
    """
    nodeId: ID!
  ): Accounting

  """Reads a single `Agency` using its globally unique `ID`."""
  agencyByNodeId(
    """The globally unique `ID` to be used in selecting a single `Agency`."""
    nodeId: ID!
  ): Agency

  """Reads a single `Agencyaccomodation` using its globally unique `ID`."""
  agencyaccomodationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyaccomodation`.
    """
    nodeId: ID!
  ): Agencyaccomodation

  """Reads a single `Agencybid` using its globally unique `ID`."""
  agencybidByNodeId(
    """The globally unique `ID` to be used in selecting a single `Agencybid`."""
    nodeId: ID!
  ): Agencybid

  """Reads a single `Agencydeal` using its globally unique `ID`."""
  agencydealByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencydeal`.
    """
    nodeId: ID!
  ): Agencydeal

  """Reads a single `Agencyevent` using its globally unique `ID`."""
  agencyeventByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyevent`.
    """
    nodeId: ID!
  ): Agencyevent

  """Reads a single `Agencyfavorite` using its globally unique `ID`."""
  agencyfavoriteByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyfavorite`.
    """
    nodeId: ID!
  ): Agencyfavorite

  """Reads a single `Agencyguide` using its globally unique `ID`."""
  agencyguideByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyguide`.
    """
    nodeId: ID!
  ): Agencyguide

  """Reads a single `Agencyhost` using its globally unique `ID`."""
  agencyhostByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyhost`.
    """
    nodeId: ID!
  ): Agencyhost

  """Reads a single `Agencyoffer` using its globally unique `ID`."""
  agencyofferByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyoffer`.
    """
    nodeId: ID!
  ): Agencyoffer

  """Reads a single `Agencyreview` using its globally unique `ID`."""
  agencyreviewByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyreview`.
    """
    nodeId: ID!
  ): Agencyreview

  """Reads a single `Agencytourist` using its globally unique `ID`."""
  agencytouristByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencytourist`.
    """
    nodeId: ID!
  ): Agencytourist

  """Reads a single `Agencytransport` using its globally unique `ID`."""
  agencytransportByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencytransport`.
    """
    nodeId: ID!
  ): Agencytransport

  """Reads a single `Agencytravelgroup` using its globally unique `ID`."""
  agencytravelgroupByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencytravelgroup`.
    """
    nodeId: ID!
  ): Agencytravelgroup

  """Reads a single `Agencytripoffer` using its globally unique `ID`."""
  agencytripofferByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencytripoffer`.
    """
    nodeId: ID!
  ): Agencytripoffer

  """Reads a single `Agencyuser` using its globally unique `ID`."""
  agencyuserByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Agencyuser`.
    """
    nodeId: ID!
  ): Agencyuser

  """Reads a single `Assocaccomodation` using its globally unique `ID`."""
  assocaccomodationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assocaccomodation`.
    """
    nodeId: ID!
  ): Assocaccomodation

  """Reads a single `Assocdestination` using its globally unique `ID`."""
  assocdestinationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assocdestination`.
    """
    nodeId: ID!
  ): Assocdestination

  """Reads a single `Assocevent` using its globally unique `ID`."""
  assoceventByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assocevent`.
    """
    nodeId: ID!
  ): Assocevent

  """Reads a single `Assocguide` using its globally unique `ID`."""
  assocguideByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assocguide`.
    """
    nodeId: ID!
  ): Assocguide

  """Reads a single `Assochost` using its globally unique `ID`."""
  assochostByNodeId(
    """The globally unique `ID` to be used in selecting a single `Assochost`."""
    nodeId: ID!
  ): Assochost

  """Reads a single `Assoctransport` using its globally unique `ID`."""
  assoctransportByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assoctransport`.
    """
    nodeId: ID!
  ): Assoctransport

  """Reads a single `Assoctravelgroup` using its globally unique `ID`."""
  assoctravelgroupByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Assoctravelgroup`.
    """
    nodeId: ID!
  ): Assoctravelgroup

  """Reads a single `Auctioninfo` using its globally unique `ID`."""
  auctioninfoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Auctioninfo`.
    """
    nodeId: ID!
  ): Auctioninfo

  """Reads a single `Bid` using its globally unique `ID`."""
  bidByNodeId(
    """The globally unique `ID` to be used in selecting a single `Bid`."""
    nodeId: ID!
  ): Bid

  """Reads a single `Bookingcalendar` using its globally unique `ID`."""
  bookingcalendarByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Bookingcalendar`.
    """
    nodeId: ID!
  ): Bookingcalendar

  """Reads a single `Calendarentry` using its globally unique `ID`."""
  calendarentryByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Calendarentry`.
    """
    nodeId: ID!
  ): Calendarentry

  """Reads a single `Commandlogentry` using its globally unique `ID`."""
  commandlogentryByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Commandlogentry`.
    """
    nodeId: ID!
  ): Commandlogentry

  """Reads a single `Contact` using its globally unique `ID`."""
  contactByNodeId(
    """The globally unique `ID` to be used in selecting a single `Contact`."""
    nodeId: ID!
  ): Contact

  """Reads a single `Destinationresource` using its globally unique `ID`."""
  destinationresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Destinationresource`.
    """
    nodeId: ID!
  ): Destinationresource

  """Reads a single `Eventresource` using its globally unique `ID`."""
  eventresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Eventresource`.
    """
    nodeId: ID!
  ): Eventresource

  """Reads a single `Geocoding` using its globally unique `ID`."""
  geocodingByNodeId(
    """The globally unique `ID` to be used in selecting a single `Geocoding`."""
    nodeId: ID!
  ): Geocoding

  """Reads a single `Guide` using its globally unique `ID`."""
  guideByNodeId(
    """The globally unique `ID` to be used in selecting a single `Guide`."""
    nodeId: ID!
  ): Guide

  """Reads a single `Guidebid` using its globally unique `ID`."""
  guidebidByNodeId(
    """The globally unique `ID` to be used in selecting a single `Guidebid`."""
    nodeId: ID!
  ): Guidebid

  """Reads a single `Guidedeal` using its globally unique `ID`."""
  guidedealByNodeId(
    """The globally unique `ID` to be used in selecting a single `Guidedeal`."""
    nodeId: ID!
  ): Guidedeal

  """Reads a single `Guidefavorite` using its globally unique `ID`."""
  guidefavoriteByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Guidefavorite`.
    """
    nodeId: ID!
  ): Guidefavorite

  """Reads a single `Guideoffer` using its globally unique `ID`."""
  guideofferByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Guideoffer`.
    """
    nodeId: ID!
  ): Guideoffer

  """Reads a single `Guideresource` using its globally unique `ID`."""
  guideresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Guideresource`.
    """
    nodeId: ID!
  ): Guideresource

  """Reads a single `Guidereview` using its globally unique `ID`."""
  guidereviewByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Guidereview`.
    """
    nodeId: ID!
  ): Guidereview

  """Reads a single `Hostresource` using its globally unique `ID`."""
  hostresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Hostresource`.
    """
    nodeId: ID!
  ): Hostresource

  """Reads a single `Languagelevel` using its globally unique `ID`."""
  languagelevelByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Languagelevel`.
    """
    nodeId: ID!
  ): Languagelevel

  """
  Reads a single `Mediadestinationresource` using its globally unique `ID`.
  """
  mediadestinationresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Mediadestinationresource`.
    """
    nodeId: ID!
  ): Mediadestinationresource

  """Reads a single `Medialocation` using its globally unique `ID`."""
  medialocationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Medialocation`.
    """
    nodeId: ID!
  ): Medialocation

  """Reads a single `Presentation` using its globally unique `ID`."""
  presentationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Presentation`.
    """
    nodeId: ID!
  ): Presentation

  """Reads a single `Priceinfo` using its globally unique `ID`."""
  priceinfoByNodeId(
    """The globally unique `ID` to be used in selecting a single `Priceinfo`."""
    nodeId: ID!
  ): Priceinfo

  """Reads a single `Publisher` using its globally unique `ID`."""
  publisherByNodeId(
    """The globally unique `ID` to be used in selecting a single `Publisher`."""
    nodeId: ID!
  ): Publisher

  """Reads a single `Review` using its globally unique `ID`."""
  reviewByNodeId(
    """The globally unique `ID` to be used in selecting a single `Review`."""
    nodeId: ID!
  ): Review

  """Reads a single `Roomcalendar` using its globally unique `ID`."""
  roomcalendarByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Roomcalendar`.
    """
    nodeId: ID!
  ): Roomcalendar

  """Reads a single `Roomcalendarentry` using its globally unique `ID`."""
  roomcalendarentryByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Roomcalendarentry`.
    """
    nodeId: ID!
  ): Roomcalendarentry

  """Reads a single `Roomlist` using its globally unique `ID`."""
  roomlistByNodeId(
    """The globally unique `ID` to be used in selecting a single `Roomlist`."""
    nodeId: ID!
  ): Roomlist

  """
  Reads a single `Similarbytriptypeaccomodation` using its globally unique `ID`.
  """
  similarbytriptypeaccomodationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypeaccomodation`.
    """
    nodeId: ID!
  ): Similarbytriptypeaccomodation

  """
  Reads a single `Similarbytriptypedestination` using its globally unique `ID`.
  """
  similarbytriptypedestinationByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypedestination`.
    """
    nodeId: ID!
  ): Similarbytriptypedestination

  """
  Reads a single `Similarbytriptypeevent` using its globally unique `ID`.
  """
  similarbytriptypeeventByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypeevent`.
    """
    nodeId: ID!
  ): Similarbytriptypeevent

  """
  Reads a single `Similarbytriptypeguide` using its globally unique `ID`.
  """
  similarbytriptypeguideByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypeguide`.
    """
    nodeId: ID!
  ): Similarbytriptypeguide

  """Reads a single `Similarbytriptypehost` using its globally unique `ID`."""
  similarbytriptypehostByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypehost`.
    """
    nodeId: ID!
  ): Similarbytriptypehost

  """
  Reads a single `Similarbytriptypetransport` using its globally unique `ID`.
  """
  similarbytriptypetransportByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypetransport`.
    """
    nodeId: ID!
  ): Similarbytriptypetransport

  """
  Reads a single `Similarbytriptypetravelgroup` using its globally unique `ID`.
  """
  similarbytriptypetravelgroupByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Similarbytriptypetravelgroup`.
    """
    nodeId: ID!
  ): Similarbytriptypetravelgroup

  """Reads a single `Timerange` using its globally unique `ID`."""
  timerangeByNodeId(
    """The globally unique `ID` to be used in selecting a single `Timerange`."""
    nodeId: ID!
  ): Timerange

  """Reads a single `Tourist` using its globally unique `ID`."""
  touristByNodeId(
    """The globally unique `ID` to be used in selecting a single `Tourist`."""
    nodeId: ID!
  ): Tourist

  """Reads a single `Touristbid` using its globally unique `ID`."""
  touristbidByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristbid`.
    """
    nodeId: ID!
  ): Touristbid

  """Reads a single `Touristdeal` using its globally unique `ID`."""
  touristdealByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristdeal`.
    """
    nodeId: ID!
  ): Touristdeal

  """Reads a single `Touristfavorite` using its globally unique `ID`."""
  touristfavoriteByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristfavorite`.
    """
    nodeId: ID!
  ): Touristfavorite

  """Reads a single `Touristoffer` using its globally unique `ID`."""
  touristofferByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristoffer`.
    """
    nodeId: ID!
  ): Touristoffer

  """Reads a single `Touristresource` using its globally unique `ID`."""
  touristresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristresource`.
    """
    nodeId: ID!
  ): Touristresource

  """Reads a single `Touristreview` using its globally unique `ID`."""
  touristreviewByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Touristreview`.
    """
    nodeId: ID!
  ): Touristreview

  """Reads a single `Transportresource` using its globally unique `ID`."""
  transportresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Transportresource`.
    """
    nodeId: ID!
  ): Transportresource

  """Reads a single `Travelgroupresource` using its globally unique `ID`."""
  travelgroupresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Travelgroupresource`.
    """
    nodeId: ID!
  ): Travelgroupresource

  """Reads a single `Tripofferresource` using its globally unique `ID`."""
  tripofferresourceByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Tripofferresource`.
    """
    nodeId: ID!
  ): Tripofferresource

  """Reads a single `Triptype` using its globally unique `ID`."""
  triptypeByNodeId(
    """The globally unique `ID` to be used in selecting a single `Triptype`."""
    nodeId: ID!
  ): Triptype

  """Reads a single `Usertable` using its globally unique `ID`."""
  usertableByNodeId(
    """The globally unique `ID` to be used in selecting a single `Usertable`."""
    nodeId: ID!
  ): Usertable
}

enum Resourcetype {
  TOURIST_RESOURCE
  TOURIST
  AGENCY
  GUIDE
  GUIDE_RESOURCE
  EVENT_RESOURCE
  TRIP_OFFER_RESOURCE
  HOST_RESOURCE
  ACCOMODATION_RESOURCE
  CAR_RESOURCE
  DESTINATION_RESOURCE
  TRAVEL_GROUP
  UNKNOWN
}

type Review implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  publisherId: Int!
  createdById: Int!
  halfStars: Int
  reviewText: String
  resourceType: Resourcetype!
  resourceId: Int!
  publisherTarget: Int!
  startDateTripEvent: Date
  byRomanian: Boolean
  isActive: Boolean
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Review`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Review`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Review`."""
  publisherByPublisherTarget: Publisher
}

"""
A condition to be used against `Review` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input ReviewCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `publisherTarget` field."""
  publisherTarget: Int
}

"""An input for mutations affecting `Review`"""
input ReviewInput {
  id: Int
  publisherId: Int!
  createdById: Int!
  halfStars: Int
  reviewText: String
  resourceType: Resourcetype!
  resourceId: Int!
  publisherTarget: Int!
  startDateTripEvent: Date
  byRomanian: Boolean
  isActive: Boolean
  timeCreated: Datetime
}

"""
Represents an update to a `Review`. Fields that are set will be updated.
"""
input ReviewPatch {
  id: Int
  publisherId: Int
  createdById: Int
  halfStars: Int
  reviewText: String
  resourceType: Resourcetype
  resourceId: Int
  publisherTarget: Int
  startDateTripEvent: Date
  byRomanian: Boolean
  isActive: Boolean
  timeCreated: Datetime
}

"""A connection to a list of `Review` values."""
type ReviewsConnection {
  """A list of `Review` objects."""
  nodes: [Review!]!

  """
  A list of edges which contains the `Review` and cursor to aid in pagination.
  """
  edges: [ReviewsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Review` you could get from the connection."""
  totalCount: Int!
}

"""A `Review` edge in the connection."""
type ReviewsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Review` at the end of the edge."""
  node: Review!
}

"""Methods to use when ordering `Review`."""
enum ReviewsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  PUBLISHER_TARGET_ASC
  PUBLISHER_TARGET_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Roomcalendar implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  calendarentryId: Int!
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Roomcalendar`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Roomcalendar`."""
  createdBy: Usertable

  """
  Reads a single `Roomcalendarentry` that is related to this `Roomcalendar`.
  """
  calendarentry: Roomcalendarentry

  """Reads and enables pagination through a set of `Roomcalendarentry`."""
  roomcalendarentriesByAtRoomCalendar(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarentryCondition
  ): RoomcalendarentriesConnection!

  """Reads and enables pagination through a set of `Roomlist`."""
  roomlistsByRoomCalendarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomlistCondition
  ): RoomlistsConnection!
}

"""
A condition to be used against `Roomcalendar` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input RoomcalendarCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `calendarentryId` field."""
  calendarentryId: Int
}

"""A connection to a list of `Roomcalendarentry` values."""
type RoomcalendarentriesConnection {
  """A list of `Roomcalendarentry` objects."""
  nodes: [Roomcalendarentry!]!

  """
  A list of edges which contains the `Roomcalendarentry` and cursor to aid in pagination.
  """
  edges: [RoomcalendarentriesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Roomcalendarentry` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Roomcalendarentry` edge in the connection."""
type RoomcalendarentriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Roomcalendarentry` at the end of the edge."""
  node: Roomcalendarentry!
}

"""Methods to use when ordering `Roomcalendarentry`."""
enum RoomcalendarentriesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  AT_ROOM_CALENDAR_ASC
  AT_ROOM_CALENDAR_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Roomcalendarentry implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  atRoomCalendar: Int
  fromDate: [Date]
  toDate: [Date]
  comment: [String]
  timeCreated: Datetime

  """
  Reads a single `Roomcalendar` that is related to this `Roomcalendarentry`.
  """
  roomcalendarByAtRoomCalendar: Roomcalendar

  """Reads and enables pagination through a set of `Roomcalendar`."""
  roomcalendarsByCalendarentryId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarCondition
  ): RoomcalendarsConnection!
}

"""
A condition to be used against `Roomcalendarentry` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input RoomcalendarentryCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `atRoomCalendar` field."""
  atRoomCalendar: Int
}

"""An input for mutations affecting `Roomcalendarentry`"""
input RoomcalendarentryInput {
  id: Int
  atRoomCalendar: Int
  fromDate: [Date]
  toDate: [Date]
  comment: [String]
  timeCreated: Datetime
}

"""
Represents an update to a `Roomcalendarentry`. Fields that are set will be updated.
"""
input RoomcalendarentryPatch {
  id: Int
  atRoomCalendar: Int
  fromDate: [Date]
  toDate: [Date]
  comment: [String]
  timeCreated: Datetime
}

"""An input for mutations affecting `Roomcalendar`"""
input RoomcalendarInput {
  id: Int
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  calendarentryId: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Roomcalendar`. Fields that are set will be updated.
"""
input RoomcalendarPatch {
  id: Int
  publisherId: Int
  createdById: Int
  isActive: Boolean
  calendarentryId: Int
  timeCreated: Datetime
}

"""A connection to a list of `Roomcalendar` values."""
type RoomcalendarsConnection {
  """A list of `Roomcalendar` objects."""
  nodes: [Roomcalendar!]!

  """
  A list of edges which contains the `Roomcalendar` and cursor to aid in pagination.
  """
  edges: [RoomcalendarsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Roomcalendar` you could get from the connection."""
  totalCount: Int!
}

"""A `Roomcalendar` edge in the connection."""
type RoomcalendarsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Roomcalendar` at the end of the edge."""
  node: Roomcalendar!
}

"""Methods to use when ordering `Roomcalendar`."""
enum RoomcalendarsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  CALENDARENTRY_ID_ASC
  CALENDARENTRY_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Roomlist implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  atAccomodation: Int!
  roomNames: String
  roomNumPeople: Int
  roomCalendarId: Int
  roomPrices: Float
  roomActive: Boolean

  """
  Reads a single `Accomodationresource` that is related to this `Roomlist`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Roomcalendar` that is related to this `Roomlist`."""
  roomCalendar: Roomcalendar
}

"""
A condition to be used against `Roomlist` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input RoomlistCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `atAccomodation` field."""
  atAccomodation: Int

  """Checks for equality with the object’s `roomCalendarId` field."""
  roomCalendarId: Int
}

"""An input for mutations affecting `Roomlist`"""
input RoomlistInput {
  id: Int
  atAccomodation: Int!
  roomNames: String
  roomNumPeople: Int
  roomCalendarId: Int
  roomPrices: Float
  roomActive: Boolean
}

"""
Represents an update to a `Roomlist`. Fields that are set will be updated.
"""
input RoomlistPatch {
  id: Int
  atAccomodation: Int
  roomNames: String
  roomNumPeople: Int
  roomCalendarId: Int
  roomPrices: Float
  roomActive: Boolean
}

"""A connection to a list of `Roomlist` values."""
type RoomlistsConnection {
  """A list of `Roomlist` objects."""
  nodes: [Roomlist!]!

  """
  A list of edges which contains the `Roomlist` and cursor to aid in pagination.
  """
  edges: [RoomlistsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Roomlist` you could get from the connection."""
  totalCount: Int!
}

"""A `Roomlist` edge in the connection."""
type RoomlistsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Roomlist` at the end of the edge."""
  node: Roomlist!
}

"""Methods to use when ordering `Roomlist`."""
enum RoomlistsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  AT_ACCOMODATION_ASC
  AT_ACCOMODATION_DESC
  ROOM_CALENDAR_ID_ASC
  ROOM_CALENDAR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Similarbytriptypeaccomodation implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  accomodationIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeaccomodation`.
  """
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Similarbytriptypeaccomodation` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypeaccomodationCondition {
  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Similarbytriptypeaccomodation`"""
input SimilarbytriptypeaccomodationInput {
  accomodationIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Similarbytriptypeaccomodation`. Fields that are set will be updated.
"""
input SimilarbytriptypeaccomodationPatch {
  accomodationIds: [Int]
  tripTypeName: String
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Similarbytriptypeaccomodation` values."""
type SimilarbytriptypeaccomodationsConnection {
  """A list of `Similarbytriptypeaccomodation` objects."""
  nodes: [Similarbytriptypeaccomodation!]!

  """
  A list of edges which contains the `Similarbytriptypeaccomodation` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypeaccomodationsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypeaccomodation` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypeaccomodation` edge in the connection."""
type SimilarbytriptypeaccomodationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypeaccomodation` at the end of the edge."""
  node: Similarbytriptypeaccomodation!
}

"""Methods to use when ordering `Similarbytriptypeaccomodation`."""
enum SimilarbytriptypeaccomodationsOrderBy {
  NATURAL
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Similarbytriptypedestination implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  destinationIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Agency` that is related to this `Similarbytriptypedestination`.
  """
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Similarbytriptypedestination` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypedestinationCondition {
  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Similarbytriptypedestination`"""
input SimilarbytriptypedestinationInput {
  destinationIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Similarbytriptypedestination`. Fields that are set will be updated.
"""
input SimilarbytriptypedestinationPatch {
  destinationIds: [Int]
  tripTypeName: String
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Similarbytriptypedestination` values."""
type SimilarbytriptypedestinationsConnection {
  """A list of `Similarbytriptypedestination` objects."""
  nodes: [Similarbytriptypedestination!]!

  """
  A list of edges which contains the `Similarbytriptypedestination` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypedestinationsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypedestination` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypedestination` edge in the connection."""
type SimilarbytriptypedestinationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypedestination` at the end of the edge."""
  node: Similarbytriptypedestination!
}

"""Methods to use when ordering `Similarbytriptypedestination`."""
enum SimilarbytriptypedestinationsOrderBy {
  NATURAL
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Similarbytriptypeevent implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  eventIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeevent`.
  """
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Similarbytriptypeevent` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypeeventCondition {
  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Similarbytriptypeevent`"""
input SimilarbytriptypeeventInput {
  eventIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Similarbytriptypeevent`. Fields that are set will be updated.
"""
input SimilarbytriptypeeventPatch {
  eventIds: [Int]
  tripTypeName: String
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Similarbytriptypeevent` values."""
type SimilarbytriptypeeventsConnection {
  """A list of `Similarbytriptypeevent` objects."""
  nodes: [Similarbytriptypeevent!]!

  """
  A list of edges which contains the `Similarbytriptypeevent` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypeeventsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypeevent` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypeevent` edge in the connection."""
type SimilarbytriptypeeventsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypeevent` at the end of the edge."""
  node: Similarbytriptypeevent!
}

"""Methods to use when ordering `Similarbytriptypeevent`."""
enum SimilarbytriptypeeventsOrderBy {
  NATURAL
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Similarbytriptypeguide implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  guideIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeguide`.
  """
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Similarbytriptypeguide` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypeguideCondition {
  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Similarbytriptypeguide`"""
input SimilarbytriptypeguideInput {
  guideIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Similarbytriptypeguide`. Fields that are set will be updated.
"""
input SimilarbytriptypeguidePatch {
  guideIds: [Int]
  tripTypeName: String
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Similarbytriptypeguide` values."""
type SimilarbytriptypeguidesConnection {
  """A list of `Similarbytriptypeguide` objects."""
  nodes: [Similarbytriptypeguide!]!

  """
  A list of edges which contains the `Similarbytriptypeguide` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypeguidesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypeguide` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypeguide` edge in the connection."""
type SimilarbytriptypeguidesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypeguide` at the end of the edge."""
  node: Similarbytriptypeguide!
}

"""Methods to use when ordering `Similarbytriptypeguide`."""
enum SimilarbytriptypeguidesOrderBy {
  NATURAL
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Similarbytriptypehost implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  hostIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Agency` that is related to this `Similarbytriptypehost`.
  """
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Similarbytriptypehost` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypehostCondition {
  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Similarbytriptypehost`"""
input SimilarbytriptypehostInput {
  hostIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Similarbytriptypehost`. Fields that are set will be updated.
"""
input SimilarbytriptypehostPatch {
  hostIds: [Int]
  tripTypeName: String
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Similarbytriptypehost` values."""
type SimilarbytriptypehostsConnection {
  """A list of `Similarbytriptypehost` objects."""
  nodes: [Similarbytriptypehost!]!

  """
  A list of edges which contains the `Similarbytriptypehost` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypehostsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypehost` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypehost` edge in the connection."""
type SimilarbytriptypehostsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypehost` at the end of the edge."""
  node: Similarbytriptypehost!
}

"""Methods to use when ordering `Similarbytriptypehost`."""
enum SimilarbytriptypehostsOrderBy {
  NATURAL
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Similarbytriptypetransport implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  transportIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Agency` that is related to this `Similarbytriptypetransport`.
  """
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Similarbytriptypetransport` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypetransportCondition {
  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Similarbytriptypetransport`"""
input SimilarbytriptypetransportInput {
  transportIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Similarbytriptypetransport`. Fields that are set will be updated.
"""
input SimilarbytriptypetransportPatch {
  transportIds: [Int]
  tripTypeName: String
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Similarbytriptypetransport` values."""
type SimilarbytriptypetransportsConnection {
  """A list of `Similarbytriptypetransport` objects."""
  nodes: [Similarbytriptypetransport!]!

  """
  A list of edges which contains the `Similarbytriptypetransport` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypetransportsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypetransport` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypetransport` edge in the connection."""
type SimilarbytriptypetransportsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypetransport` at the end of the edge."""
  node: Similarbytriptypetransport!
}

"""Methods to use when ordering `Similarbytriptypetransport`."""
enum SimilarbytriptypetransportsOrderBy {
  NATURAL
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Similarbytriptypetravelgroup implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  travelGroupIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime

  """
  Reads a single `Agency` that is related to this `Similarbytriptypetravelgroup`.
  """
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Similarbytriptypetravelgroup` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input SimilarbytriptypetravelgroupCondition {
  """Checks for equality with the object’s `tripTypeName` field."""
  tripTypeName: String

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Similarbytriptypetravelgroup`"""
input SimilarbytriptypetravelgroupInput {
  travelGroupIds: [Int]
  tripTypeName: String!
  atAgency: Int!
  timeCreated: Datetime
}

"""
Represents an update to a `Similarbytriptypetravelgroup`. Fields that are set will be updated.
"""
input SimilarbytriptypetravelgroupPatch {
  travelGroupIds: [Int]
  tripTypeName: String
  atAgency: Int
  timeCreated: Datetime
}

"""A connection to a list of `Similarbytriptypetravelgroup` values."""
type SimilarbytriptypetravelgroupsConnection {
  """A list of `Similarbytriptypetravelgroup` objects."""
  nodes: [Similarbytriptypetravelgroup!]!

  """
  A list of edges which contains the `Similarbytriptypetravelgroup` and cursor to aid in pagination.
  """
  edges: [SimilarbytriptypetravelgroupsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Similarbytriptypetravelgroup` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Similarbytriptypetravelgroup` edge in the connection."""
type SimilarbytriptypetravelgroupsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Similarbytriptypetravelgroup` at the end of the edge."""
  node: Similarbytriptypetravelgroup!
}

"""Methods to use when ordering `Similarbytriptypetravelgroup`."""
enum SimilarbytriptypetravelgroupsOrderBy {
  NATURAL
  TRIP_TYPE_NAME_ASC
  TRIP_TYPE_NAME_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Timerange implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  fromTimestamp: Datetime
  toTimestamp: Datetime
  timeCreated: Datetime

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByTimeRangeId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition
  ): GuideresourcesConnection!
}

"""
A condition to be used against `Timerange` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input TimerangeCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Timerange`"""
input TimerangeInput {
  id: Int
  fromTimestamp: Datetime
  toTimestamp: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Timerange`. Fields that are set will be updated.
"""
input TimerangePatch {
  id: Int
  fromTimestamp: Datetime
  toTimestamp: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Timerange` values."""
type TimerangesConnection {
  """A list of `Timerange` objects."""
  nodes: [Timerange!]!

  """
  A list of edges which contains the `Timerange` and cursor to aid in pagination.
  """
  edges: [TimerangesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Timerange` you could get from the connection."""
  totalCount: Int!
}

"""A `Timerange` edge in the connection."""
type TimerangesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Timerange` at the end of the edge."""
  node: Timerange!
}

"""Methods to use when ordering `Timerange`."""
enum TimerangesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Tourist implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  touristFirstName: String
  touristLastName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  nativeLanguage: Languages
  alternativeLanguage: Languages
  touristOfferId: Int!
  touristFavoriteId: Int!
  touristBidId: Int!
  touristDealId: Int!
  guideReviewInIdPool: [Int]
  agencyReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  timeCreated: Datetime
  atTravelGroup: Int
  isActive: Boolean
  isRomanian: Boolean!

  """Reads a single `Contact` that is related to this `Tourist`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Tourist`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Tourist`."""
  createdBy: Usertable

  """Reads a single `Touristoffer` that is related to this `Tourist`."""
  touristOffer: Touristoffer

  """Reads a single `Touristfavorite` that is related to this `Tourist`."""
  touristFavorite: Touristfavorite

  """Reads a single `Touristbid` that is related to this `Tourist`."""
  touristBid: Touristbid

  """Reads a single `Touristdeal` that is related to this `Tourist`."""
  touristDeal: Touristdeal

  """Reads and enables pagination through a set of `Usertable`."""
  usertablesByAtTourist(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsertableCondition
  ): UsertablesConnection!

  """Reads and enables pagination through a set of `Touristreview`."""
  touristreviewsByTouristIdTarget(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristreviewCondition
  ): TouristreviewsConnection!
}

type Touristbid implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  tripOfferResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByTouristBidId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition
  ): TouristsConnection!
}

"""
A condition to be used against `Touristbid` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input TouristbidCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Touristbid`"""
input TouristbidInput {
  id: Int
  tripOfferResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]
}

"""
Represents an update to a `Touristbid`. Fields that are set will be updated.
"""
input TouristbidPatch {
  id: Int
  tripOfferResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]
}

"""A connection to a list of `Touristbid` values."""
type TouristbidsConnection {
  """A list of `Touristbid` objects."""
  nodes: [Touristbid!]!

  """
  A list of edges which contains the `Touristbid` and cursor to aid in pagination.
  """
  edges: [TouristbidsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Touristbid` you could get from the connection."""
  totalCount: Int!
}

"""A `Touristbid` edge in the connection."""
type TouristbidsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristbid` at the end of the edge."""
  node: Touristbid!
}

"""Methods to use when ordering `Touristbid`."""
enum TouristbidsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Tourist` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input TouristCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `touristOfferId` field."""
  touristOfferId: Int

  """Checks for equality with the object’s `touristFavoriteId` field."""
  touristFavoriteId: Int

  """Checks for equality with the object’s `touristBidId` field."""
  touristBidId: Int

  """Checks for equality with the object’s `touristDealId` field."""
  touristDealId: Int
}

type Touristdeal implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  tripsOfferResourceIdPool: [Int]
  guideOfferResourceIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByTouristDealId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition
  ): TouristsConnection!
}

"""
A condition to be used against `Touristdeal` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input TouristdealCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Touristdeal`"""
input TouristdealInput {
  id: Int
  tripsOfferResourceIdPool: [Int]
  guideOfferResourceIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]
}

"""
Represents an update to a `Touristdeal`. Fields that are set will be updated.
"""
input TouristdealPatch {
  id: Int
  tripsOfferResourceIdPool: [Int]
  guideOfferResourceIdPool: [Int]
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]
}

"""A connection to a list of `Touristdeal` values."""
type TouristdealsConnection {
  """A list of `Touristdeal` objects."""
  nodes: [Touristdeal!]!

  """
  A list of edges which contains the `Touristdeal` and cursor to aid in pagination.
  """
  edges: [TouristdealsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Touristdeal` you could get from the connection."""
  totalCount: Int!
}

"""A `Touristdeal` edge in the connection."""
type TouristdealsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristdeal` at the end of the edge."""
  node: Touristdeal!
}

"""Methods to use when ordering `Touristdeal`."""
enum TouristdealsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Touristfavorite implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  travelGroupResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByTouristFavoriteId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition
  ): TouristsConnection!
}

"""
A condition to be used against `Touristfavorite` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TouristfavoriteCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Touristfavorite`"""
input TouristfavoriteInput {
  id: Int
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  travelGroupResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]
}

"""
Represents an update to a `Touristfavorite`. Fields that are set will be updated.
"""
input TouristfavoritePatch {
  id: Int
  agenciesRomanianIdPool: [Int]
  agenciesAbroadIdPool: [Int]
  travelGroupResourceIdPool: [Int]
  tripsOfferResourceIdPool: [Int]
  guideResourceIdPool: [Int]
  eventResourceIdPool: [Int]
  transportationResourceIdPool: [Int]
  accomodationResourceIdPool: [Int]
  hostResourceIdPool: [Int]
}

"""A connection to a list of `Touristfavorite` values."""
type TouristfavoritesConnection {
  """A list of `Touristfavorite` objects."""
  nodes: [Touristfavorite!]!

  """
  A list of edges which contains the `Touristfavorite` and cursor to aid in pagination.
  """
  edges: [TouristfavoritesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Touristfavorite` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Touristfavorite` edge in the connection."""
type TouristfavoritesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristfavorite` at the end of the edge."""
  node: Touristfavorite!
}

"""Methods to use when ordering `Touristfavorite`."""
enum TouristfavoritesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""An input for mutations affecting `Tourist`"""
input TouristInput {
  id: Int
  touristFirstName: String
  touristLastName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  nativeLanguage: Languages
  alternativeLanguage: Languages
  touristOfferId: Int!
  touristFavoriteId: Int!
  touristBidId: Int!
  touristDealId: Int!
  guideReviewInIdPool: [Int]
  agencyReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  timeCreated: Datetime
  atTravelGroup: Int
  isActive: Boolean
  isRomanian: Boolean!
}

type Touristoffer implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  touristResourceIdPool: [Int]

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByTouristOfferId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition
  ): TouristsConnection!
}

"""
A condition to be used against `Touristoffer` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TouristofferCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int
}

"""An input for mutations affecting `Touristoffer`"""
input TouristofferInput {
  id: Int
  touristResourceIdPool: [Int]
}

"""
Represents an update to a `Touristoffer`. Fields that are set will be updated.
"""
input TouristofferPatch {
  id: Int
  touristResourceIdPool: [Int]
}

"""A connection to a list of `Touristoffer` values."""
type TouristoffersConnection {
  """A list of `Touristoffer` objects."""
  nodes: [Touristoffer!]!

  """
  A list of edges which contains the `Touristoffer` and cursor to aid in pagination.
  """
  edges: [TouristoffersEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Touristoffer` you could get from the connection."""
  totalCount: Int!
}

"""A `Touristoffer` edge in the connection."""
type TouristoffersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristoffer` at the end of the edge."""
  node: Touristoffer!
}

"""Methods to use when ordering `Touristoffer`."""
enum TouristoffersOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
Represents an update to a `Tourist`. Fields that are set will be updated.
"""
input TouristPatch {
  id: Int
  touristFirstName: String
  touristLastName: String
  contactId: Int
  publisherId: Int
  createdById: Int
  nativeLanguage: Languages
  alternativeLanguage: Languages
  touristOfferId: Int
  touristFavoriteId: Int
  touristBidId: Int
  touristDealId: Int
  guideReviewInIdPool: [Int]
  agencyReviewInIdPool: [Int]
  guideReviewOutIdPool: [Int]
  agencyReviewOutIdPool: [Int]
  timeCreated: Datetime
  atTravelGroup: Int
  isActive: Boolean
  isRomanian: Boolean
}

type Touristresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  name: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  atTravelGroup: Int
  atAgency: Int
  atGuide: Int
  isSigned: Boolean!
  priceInfoId: Int!
  travellingCalendarId: Int!
  isRomanian: Boolean
  isActive: Boolean
  isPublic: Boolean!
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Contact` that is related to this `Touristresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Touristresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Touristresource`."""
  createdBy: Usertable

  """
  Reads a single `Travelgroupresource` that is related to this `Touristresource`.
  """
  travelgroupresourceByAtTravelGroup: Travelgroupresource

  """Reads a single `Agency` that is related to this `Touristresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Touristresource`."""
  guideByAtGuide: Guide

  """Reads a single `Priceinfo` that is related to this `Touristresource`."""
  priceInfo: Priceinfo

  """
  Reads a single `Bookingcalendar` that is related to this `Touristresource`.
  """
  travellingCalendar: Bookingcalendar

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByAtTouristResource(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition
  ): TravelgroupresourcesConnection!
}

"""
A condition to be used against `Touristresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TouristresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `atTravelGroup` field."""
  atTravelGroup: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `priceInfoId` field."""
  priceInfoId: Int

  """Checks for equality with the object’s `travellingCalendarId` field."""
  travellingCalendarId: Int
}

"""An input for mutations affecting `Touristresource`"""
input TouristresourceInput {
  id: Int
  name: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  atTravelGroup: Int
  atAgency: Int
  atGuide: Int
  isSigned: Boolean!
  priceInfoId: Int!
  travellingCalendarId: Int!
  isRomanian: Boolean
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Touristresource`. Fields that are set will be updated.
"""
input TouristresourcePatch {
  id: Int
  name: String
  contactId: Int
  publisherId: Int
  createdById: Int
  atTravelGroup: Int
  atAgency: Int
  atGuide: Int
  isSigned: Boolean
  priceInfoId: Int
  travellingCalendarId: Int
  isRomanian: Boolean
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Touristresource` values."""
type TouristresourcesConnection {
  """A list of `Touristresource` objects."""
  nodes: [Touristresource!]!

  """
  A list of edges which contains the `Touristresource` and cursor to aid in pagination.
  """
  edges: [TouristresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Touristresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Touristresource` edge in the connection."""
type TouristresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristresource` at the end of the edge."""
  node: Touristresource!
}

"""Methods to use when ordering `Touristresource`."""
enum TouristresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  AT_TRAVEL_GROUP_ASC
  AT_TRAVEL_GROUP_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  PRICE_INFO_ID_ASC
  PRICE_INFO_ID_DESC
  TRAVELLING_CALENDAR_ID_ASC
  TRAVELLING_CALENDAR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Touristreview implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  halfStars: Int!
  reviewText: String!
  touristIdTarget: Int!
  startDateTripEvent: Date!
  byRomanian: Boolean
  timeCreated: Datetime

  """Reads a single `Publisher` that is related to this `Touristreview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Touristreview`."""
  createdBy: Usertable

  """Reads a single `Tourist` that is related to this `Touristreview`."""
  touristByTouristIdTarget: Tourist
}

"""
A condition to be used against `Touristreview` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TouristreviewCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `touristIdTarget` field."""
  touristIdTarget: Int
}

"""An input for mutations affecting `Touristreview`"""
input TouristreviewInput {
  id: Int
  publisherId: Int!
  createdById: Int!
  isActive: Boolean
  halfStars: Int!
  reviewText: String!
  touristIdTarget: Int!
  startDateTripEvent: Date!
  byRomanian: Boolean
  timeCreated: Datetime
}

"""
Represents an update to a `Touristreview`. Fields that are set will be updated.
"""
input TouristreviewPatch {
  id: Int
  publisherId: Int
  createdById: Int
  isActive: Boolean
  halfStars: Int
  reviewText: String
  touristIdTarget: Int
  startDateTripEvent: Date
  byRomanian: Boolean
  timeCreated: Datetime
}

"""A connection to a list of `Touristreview` values."""
type TouristreviewsConnection {
  """A list of `Touristreview` objects."""
  nodes: [Touristreview!]!

  """
  A list of edges which contains the `Touristreview` and cursor to aid in pagination.
  """
  edges: [TouristreviewsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Touristreview` you could get from the connection."""
  totalCount: Int!
}

"""A `Touristreview` edge in the connection."""
type TouristreviewsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Touristreview` at the end of the edge."""
  node: Touristreview!
}

"""Methods to use when ordering `Touristreview`."""
enum TouristreviewsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  TOURIST_ID_TARGET_ASC
  TOURIST_ID_TARGET_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""A connection to a list of `Tourist` values."""
type TouristsConnection {
  """A list of `Tourist` objects."""
  nodes: [Tourist!]!

  """
  A list of edges which contains the `Tourist` and cursor to aid in pagination.
  """
  edges: [TouristsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Tourist` you could get from the connection."""
  totalCount: Int!
}

"""A `Tourist` edge in the connection."""
type TouristsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Tourist` at the end of the edge."""
  node: Tourist!
}

"""Methods to use when ordering `Tourist`."""
enum TouristsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  TOURIST_OFFER_ID_ASC
  TOURIST_OFFER_ID_DESC
  TOURIST_FAVORITE_ID_ASC
  TOURIST_FAVORITE_ID_DESC
  TOURIST_BID_ID_ASC
  TOURIST_BID_ID_DESC
  TOURIST_DEAL_ID_ASC
  TOURIST_DEAL_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Transportresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  transportName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  locatedIn: Area!
  addressInfoId: Int!
  atAgency: Int
  atGuide: Int
  ownedByAt: Boolean!
  presentationId: Int
  isBus: Boolean!
  numberOfPlaces: Int!
  bookingCalendarId: Int!
  isActive: Boolean
  isPublic: Boolean!
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Contact` that is related to this `Transportresource`."""
  contact: Contact

  """
  Reads a single `Publisher` that is related to this `Transportresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Transportresource`.
  """
  createdBy: Usertable

  """Reads a single `Contact` that is related to this `Transportresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Transportresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Transportresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Presentation` that is related to this `Transportresource`.
  """
  presentation: Presentation

  """
  Reads a single `Bookingcalendar` that is related to this `Transportresource`.
  """
  bookingCalendar: Bookingcalendar

  """Reads and enables pagination through a set of `Agencytransport`."""
  agencytransportsByTransportId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytransportCondition
  ): AgencytransportsConnection!

  """Reads and enables pagination through a set of `Assoctransport`."""
  assoctransportsByTransportId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctransportCondition
  ): AssoctransportsConnection!
}

"""
A condition to be used against `Transportresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TransportresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `addressInfoId` field."""
  addressInfoId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `presentationId` field."""
  presentationId: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int
}

"""An input for mutations affecting `Transportresource`"""
input TransportresourceInput {
  id: Int
  transportName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  locatedIn: Area!
  addressInfoId: Int!
  atAgency: Int
  atGuide: Int
  ownedByAt: Boolean
  presentationId: Int
  isBus: Boolean!
  numberOfPlaces: Int!
  bookingCalendarId: Int!
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Transportresource`. Fields that are set will be updated.
"""
input TransportresourcePatch {
  id: Int
  transportName: String
  contactId: Int
  publisherId: Int
  createdById: Int
  locatedIn: Area
  addressInfoId: Int
  atAgency: Int
  atGuide: Int
  ownedByAt: Boolean
  presentationId: Int
  isBus: Boolean
  numberOfPlaces: Int
  bookingCalendarId: Int
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Transportresource` values."""
type TransportresourcesConnection {
  """A list of `Transportresource` objects."""
  nodes: [Transportresource!]!

  """
  A list of edges which contains the `Transportresource` and cursor to aid in pagination.
  """
  edges: [TransportresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Transportresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Transportresource` edge in the connection."""
type TransportresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Transportresource` at the end of the edge."""
  node: Transportresource!
}

"""Methods to use when ordering `Transportresource`."""
enum TransportresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  ADDRESS_INFO_ID_ASC
  ADDRESS_INFO_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  PRESENTATION_ID_ASC
  PRESENTATION_ID_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Travelgroupresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  travelGroupName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  numberOfAdults: Int
  numberOfChildren: Int
  customInfo: [String]
  bookingCalendarId: Int!
  atAgency: Int
  atGuide: Int
  language: Languages!
  atTripOfferResource: Int
  atTouristResource: Int!
  isRomanian: Boolean!
  isActive: Boolean
  lastModified: Datetime
  timeCreated: Datetime

  """
  Reads a single `Contact` that is related to this `Travelgroupresource`.
  """
  contact: Contact

  """
  Reads a single `Publisher` that is related to this `Travelgroupresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Travelgroupresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Bookingcalendar` that is related to this `Travelgroupresource`.
  """
  bookingCalendar: Bookingcalendar

  """Reads a single `Agency` that is related to this `Travelgroupresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Travelgroupresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Tripofferresource` that is related to this `Travelgroupresource`.
  """
  tripofferresourceByAtTripOfferResource: Tripofferresource

  """
  Reads a single `Touristresource` that is related to this `Travelgroupresource`.
  """
  touristresourceByAtTouristResource: Touristresource

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByAtTravelGroup(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Agencytravelgroup`."""
  agencytravelgroupsByTravelGroupId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytravelgroupCondition
  ): AgencytravelgroupsConnection!

  """Reads and enables pagination through a set of `Assoctravelgroup`."""
  assoctravelgroupsByTravelGroupId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AssoctravelgroupCondition
  ): AssoctravelgroupsConnection!
}

"""
A condition to be used against `Travelgroupresource` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input TravelgroupresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `contactId` field."""
  contactId: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `bookingCalendarId` field."""
  bookingCalendarId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `atTripOfferResource` field."""
  atTripOfferResource: Int

  """Checks for equality with the object’s `atTouristResource` field."""
  atTouristResource: Int
}

"""An input for mutations affecting `Travelgroupresource`"""
input TravelgroupresourceInput {
  id: Int
  travelGroupName: String
  contactId: Int!
  publisherId: Int!
  createdById: Int!
  numberOfAdults: Int
  numberOfChildren: Int
  customInfo: [String]
  bookingCalendarId: Int!
  atAgency: Int
  atGuide: Int
  language: Languages!
  atTripOfferResource: Int
  atTouristResource: Int!
  isRomanian: Boolean!
  isActive: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Travelgroupresource`. Fields that are set will be updated.
"""
input TravelgroupresourcePatch {
  id: Int
  travelGroupName: String
  contactId: Int
  publisherId: Int
  createdById: Int
  numberOfAdults: Int
  numberOfChildren: Int
  customInfo: [String]
  bookingCalendarId: Int
  atAgency: Int
  atGuide: Int
  language: Languages
  atTripOfferResource: Int
  atTouristResource: Int
  isRomanian: Boolean
  isActive: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Travelgroupresource` values."""
type TravelgroupresourcesConnection {
  """A list of `Travelgroupresource` objects."""
  nodes: [Travelgroupresource!]!

  """
  A list of edges which contains the `Travelgroupresource` and cursor to aid in pagination.
  """
  edges: [TravelgroupresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Travelgroupresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Travelgroupresource` edge in the connection."""
type TravelgroupresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Travelgroupresource` at the end of the edge."""
  node: Travelgroupresource!
}

"""Methods to use when ordering `Travelgroupresource`."""
enum TravelgroupresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONTACT_ID_ASC
  CONTACT_ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  BOOKING_CALENDAR_ID_ASC
  BOOKING_CALENDAR_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  AT_TRIP_OFFER_RESOURCE_ASC
  AT_TRIP_OFFER_RESOURCE_DESC
  AT_TOURIST_RESOURCE_ASC
  AT_TOURIST_RESOURCE_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Tripofferresource implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  tripOfferName: String
  publisherId: Int!
  createdById: Int!
  availableAtCalendarId: Int!
  guideResponsibleId: Int!
  guideSecondaryId: Int
  atAgency: Int
  priceInfoId: Int!
  destinationId: [Int]!
  isSigned: Boolean!
  atGuide: Int
  isActive: Boolean
  isPublic: Boolean!
  lastModified: Datetime
  timeCreated: Datetime

  """
  Reads a single `Publisher` that is related to this `Tripofferresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Tripofferresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Bookingcalendar` that is related to this `Tripofferresource`.
  """
  availableAtCalendar: Bookingcalendar

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideResponsible: Guide

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideSecondary: Guide

  """Reads a single `Agency` that is related to this `Tripofferresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Priceinfo` that is related to this `Tripofferresource`.
  """
  priceInfo: Priceinfo

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByAtTripOfferResource(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Agencytripoffer`."""
  agencytripoffersByTripOfferId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencytripofferCondition
  ): AgencytripoffersConnection!
}

"""
A condition to be used against `Tripofferresource` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TripofferresourceCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `publisherId` field."""
  publisherId: Int

  """Checks for equality with the object’s `createdById` field."""
  createdById: Int

  """Checks for equality with the object’s `availableAtCalendarId` field."""
  availableAtCalendarId: Int

  """Checks for equality with the object’s `guideResponsibleId` field."""
  guideResponsibleId: Int

  """Checks for equality with the object’s `guideSecondaryId` field."""
  guideSecondaryId: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `priceInfoId` field."""
  priceInfoId: Int
}

"""An input for mutations affecting `Tripofferresource`"""
input TripofferresourceInput {
  id: Int
  tripOfferName: String
  publisherId: Int!
  createdById: Int!
  availableAtCalendarId: Int!
  guideResponsibleId: Int!
  guideSecondaryId: Int
  atAgency: Int
  priceInfoId: Int!
  destinationId: [Int]!
  isSigned: Boolean!
  atGuide: Int
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Tripofferresource`. Fields that are set will be updated.
"""
input TripofferresourcePatch {
  id: Int
  tripOfferName: String
  publisherId: Int
  createdById: Int
  availableAtCalendarId: Int
  guideResponsibleId: Int
  guideSecondaryId: Int
  atAgency: Int
  priceInfoId: Int
  destinationId: [Int]
  isSigned: Boolean
  atGuide: Int
  isActive: Boolean
  isPublic: Boolean
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Tripofferresource` values."""
type TripofferresourcesConnection {
  """A list of `Tripofferresource` objects."""
  nodes: [Tripofferresource!]!

  """
  A list of edges which contains the `Tripofferresource` and cursor to aid in pagination.
  """
  edges: [TripofferresourcesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `Tripofferresource` you could get from the connection.
  """
  totalCount: Int!
}

"""A `Tripofferresource` edge in the connection."""
type TripofferresourcesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Tripofferresource` at the end of the edge."""
  node: Tripofferresource!
}

"""Methods to use when ordering `Tripofferresource`."""
enum TripofferresourcesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PUBLISHER_ID_ASC
  PUBLISHER_ID_DESC
  CREATED_BY_ID_ASC
  CREATED_BY_ID_DESC
  AVAILABLE_AT_CALENDAR_ID_ASC
  AVAILABLE_AT_CALENDAR_ID_DESC
  GUIDE_RESPONSIBLE_ID_ASC
  GUIDE_RESPONSIBLE_ID_DESC
  GUIDE_SECONDARY_ID_ASC
  GUIDE_SECONDARY_ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRICE_INFO_ID_ASC
  PRICE_INFO_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Triptype implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  tripTypeName: String!
  atAgency: Int!
  lastModified: Datetime
  timeCreated: Datetime

  """Reads a single `Agency` that is related to this `Triptype`."""
  agencyByAtAgency: Agency
}

"""
A condition to be used against `Triptype` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input TriptypeCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int
}

"""An input for mutations affecting `Triptype`"""
input TriptypeInput {
  id: Int
  tripTypeName: String!
  atAgency: Int!
  lastModified: Datetime
  timeCreated: Datetime
}

"""
Represents an update to a `Triptype`. Fields that are set will be updated.
"""
input TriptypePatch {
  id: Int
  tripTypeName: String
  atAgency: Int
  lastModified: Datetime
  timeCreated: Datetime
}

"""A connection to a list of `Triptype` values."""
type TriptypesConnection {
  """A list of `Triptype` objects."""
  nodes: [Triptype!]!

  """
  A list of edges which contains the `Triptype` and cursor to aid in pagination.
  """
  edges: [TriptypesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Triptype` you could get from the connection."""
  totalCount: Int!
}

"""A `Triptype` edge in the connection."""
type TriptypesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Triptype` at the end of the edge."""
  node: Triptype!
}

"""Methods to use when ordering `Triptype`."""
enum TriptypesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""All input for the `updateAccomodationresourceByNodeId` mutation."""
input UpdateAccomodationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Accomodationresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Accomodationresource` being updated.
  """
  patch: AccomodationresourcePatch!
}

"""All input for the `updateAccomodationresource` mutation."""
input UpdateAccomodationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Accomodationresource` being updated.
  """
  patch: AccomodationresourcePatch!
  id: Int!
}

"""The output of our update `Accomodationresource` mutation."""
type UpdateAccomodationresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Accomodationresource` that was updated by this mutation."""
  accomodationresource: Accomodationresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  contact: Contact

  """
  Reads a single `Contact` that is related to this `Accomodationresource`.
  """
  address: Contact

  """
  Reads a single `Bookingcalendar` that is related to this `Accomodationresource`.
  """
  locationCalendar: Bookingcalendar

  """
  Reads a single `Publisher` that is related to this `Accomodationresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Accomodationresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Presentation` that is related to this `Accomodationresource`.
  """
  presentation: Presentation

  """
  Reads a single `Agency` that is related to this `Accomodationresource`.
  """
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Accomodationresource`."""
  guideByAtGuide: Guide

  """An edge for our `Accomodationresource`. May be used by Relay 1."""
  accomodationresourceEdge(
    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccomodationresourcesEdge
}

"""All input for the `updateAccountByNodeId` mutation."""
input UpdateAccountByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Account` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Account` being updated.
  """
  patch: AccountPatch!
}

"""All input for the `updateAccountingByNodeId` mutation."""
input UpdateAccountingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Accounting` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Accounting` being updated.
  """
  patch: AccountingPatch!
}

"""All input for the `updateAccounting` mutation."""
input UpdateAccountingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Accounting` being updated.
  """
  patch: AccountingPatch!
  id: Int!
}

"""The output of our update `Accounting` mutation."""
type UpdateAccountingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Accounting` that was updated by this mutation."""
  accounting: Accounting

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Accounting`."""
  publisher: Publisher

  """An edge for our `Accounting`. May be used by Relay 1."""
  accountingEdge(
    """The method to use when ordering `Accounting`."""
    orderBy: [AccountingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountingsEdge
}

"""All input for the `updateAccount` mutation."""
input UpdateAccountInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Account` being updated.
  """
  patch: AccountPatch!
  id: Int!
}

"""The output of our update `Account` mutation."""
type UpdateAccountPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Account` that was updated by this mutation."""
  account: Account

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Account`. May be used by Relay 1."""
  accountEdge(
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AccountsEdge
}

"""All input for the `updateAgencyaccomodationByNodeId` mutation."""
input UpdateAgencyaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyaccomodation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyaccomodation` being updated.
  """
  patch: AgencyaccomodationPatch!
}

"""All input for the `updateAgencyaccomodation` mutation."""
input UpdateAgencyaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyaccomodation` being updated.
  """
  patch: AgencyaccomodationPatch!
  agencyId: Int!
  accomodationId: Int!
}

"""The output of our update `Agencyaccomodation` mutation."""
type UpdateAgencyaccomodationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyaccomodation` that was updated by this mutation."""
  agencyaccomodation: Agencyaccomodation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyaccomodation`."""
  agency: Agency

  """
  Reads a single `Accomodationresource` that is related to this `Agencyaccomodation`.
  """
  accomodation: Accomodationresource

  """An edge for our `Agencyaccomodation`. May be used by Relay 1."""
  agencyaccomodationEdge(
    """The method to use when ordering `Agencyaccomodation`."""
    orderBy: [AgencyaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyaccomodationsEdge
}

"""All input for the `updateAgencybidByNodeId` mutation."""
input UpdateAgencybidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencybid` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencybid` being updated.
  """
  patch: AgencybidPatch!
}

"""All input for the `updateAgencybid` mutation."""
input UpdateAgencybidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencybid` being updated.
  """
  patch: AgencybidPatch!
  id: Int!
}

"""The output of our update `Agencybid` mutation."""
type UpdateAgencybidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencybid` that was updated by this mutation."""
  agencybid: Agencybid

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencybid`."""
  agency: Agency

  """An edge for our `Agencybid`. May be used by Relay 1."""
  agencybidEdge(
    """The method to use when ordering `Agencybid`."""
    orderBy: [AgencybidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencybidsEdge
}

"""All input for the `updateAgencyByNodeId` mutation."""
input UpdateAgencyByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agency` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agency` being updated.
  """
  patch: AgencyPatch!
}

"""All input for the `updateAgencydealByNodeId` mutation."""
input UpdateAgencydealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencydeal` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencydeal` being updated.
  """
  patch: AgencydealPatch!
}

"""All input for the `updateAgencydeal` mutation."""
input UpdateAgencydealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencydeal` being updated.
  """
  patch: AgencydealPatch!
  id: Int!
}

"""The output of our update `Agencydeal` mutation."""
type UpdateAgencydealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencydeal` that was updated by this mutation."""
  agencydeal: Agencydeal

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Agencydeal`. May be used by Relay 1."""
  agencydealEdge(
    """The method to use when ordering `Agencydeal`."""
    orderBy: [AgencydealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencydealsEdge
}

"""All input for the `updateAgencyeventByNodeId` mutation."""
input UpdateAgencyeventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyevent` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyevent` being updated.
  """
  patch: AgencyeventPatch!
}

"""All input for the `updateAgencyevent` mutation."""
input UpdateAgencyeventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyevent` being updated.
  """
  patch: AgencyeventPatch!
  agencyId: Int!
  eventId: Int!
}

"""The output of our update `Agencyevent` mutation."""
type UpdateAgencyeventPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyevent` that was updated by this mutation."""
  agencyevent: Agencyevent

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyevent`."""
  agency: Agency

  """Reads a single `Eventresource` that is related to this `Agencyevent`."""
  event: Eventresource

  """An edge for our `Agencyevent`. May be used by Relay 1."""
  agencyeventEdge(
    """The method to use when ordering `Agencyevent`."""
    orderBy: [AgencyeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyeventsEdge
}

"""All input for the `updateAgencyfavoriteByNodeId` mutation."""
input UpdateAgencyfavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyfavorite` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyfavorite` being updated.
  """
  patch: AgencyfavoritePatch!
}

"""All input for the `updateAgencyfavorite` mutation."""
input UpdateAgencyfavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyfavorite` being updated.
  """
  patch: AgencyfavoritePatch!
  resourceId: Int!
  resourceType: Resourcetype!
  atAgency: Int!
}

"""The output of our update `Agencyfavorite` mutation."""
type UpdateAgencyfavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyfavorite` that was updated by this mutation."""
  agencyfavorite: Agencyfavorite

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Agencyfavorite`. May be used by Relay 1."""
  agencyfavoriteEdge(
    """The method to use when ordering `Agencyfavorite`."""
    orderBy: [AgencyfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyfavoritesEdge
}

"""All input for the `updateAgencyguideByNodeId` mutation."""
input UpdateAgencyguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyguide` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyguide` being updated.
  """
  patch: AgencyguidePatch!
}

"""All input for the `updateAgencyguide` mutation."""
input UpdateAgencyguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyguide` being updated.
  """
  patch: AgencyguidePatch!
  agencyId: Int!
  guideId: Int!
}

"""The output of our update `Agencyguide` mutation."""
type UpdateAgencyguidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyguide` that was updated by this mutation."""
  agencyguide: Agencyguide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyguide`."""
  agency: Agency

  """Reads a single `Guide` that is related to this `Agencyguide`."""
  guide: Guide

  """An edge for our `Agencyguide`. May be used by Relay 1."""
  agencyguideEdge(
    """The method to use when ordering `Agencyguide`."""
    orderBy: [AgencyguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyguidesEdge
}

"""All input for the `updateAgencyhostByNodeId` mutation."""
input UpdateAgencyhostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyhost` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyhost` being updated.
  """
  patch: AgencyhostPatch!
}

"""All input for the `updateAgencyhost` mutation."""
input UpdateAgencyhostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyhost` being updated.
  """
  patch: AgencyhostPatch!
  agencyId: Int!
  hostId: Int!
}

"""The output of our update `Agencyhost` mutation."""
type UpdateAgencyhostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyhost` that was updated by this mutation."""
  agencyhost: Agencyhost

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyhost`."""
  agency: Agency

  """Reads a single `Hostresource` that is related to this `Agencyhost`."""
  host: Hostresource

  """An edge for our `Agencyhost`. May be used by Relay 1."""
  agencyhostEdge(
    """The method to use when ordering `Agencyhost`."""
    orderBy: [AgencyhostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyhostsEdge
}

"""All input for the `updateAgency` mutation."""
input UpdateAgencyInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agency` being updated.
  """
  patch: AgencyPatch!
  id: Int!
}

"""All input for the `updateAgencymedialibraryById` mutation."""
input UpdateAgencymedialibraryByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencymedialibrary` being updated.
  """
  patch: AgencymedialibraryPatch!
  id: Int!
}

"""The output of our update `Agencymedialibrary` mutation."""
type UpdateAgencymedialibraryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencymedialibrary` that was updated by this mutation."""
  agencymedialibrary: Agencymedialibrary

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencymedialibrary`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Usertable` that is related to this `Agencymedialibrary`.
  """
  usertableByLastModifiedBy: Usertable

  """An edge for our `Agencymedialibrary`. May be used by Relay 1."""
  agencymedialibraryEdge(
    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]
  ): AgencymedialibrariesEdge
}

"""All input for the `updateAgencyofferByNodeId` mutation."""
input UpdateAgencyofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyoffer` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyoffer` being updated.
  """
  patch: AgencyofferPatch!
}

"""All input for the `updateAgencyoffer` mutation."""
input UpdateAgencyofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyoffer` being updated.
  """
  patch: AgencyofferPatch!
  id: Int!
}

"""The output of our update `Agencyoffer` mutation."""
type UpdateAgencyofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyoffer` that was updated by this mutation."""
  agencyoffer: Agencyoffer

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Agencyoffer`. May be used by Relay 1."""
  agencyofferEdge(
    """The method to use when ordering `Agencyoffer`."""
    orderBy: [AgencyoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyoffersEdge
}

"""The output of our update `Agency` mutation."""
type UpdateAgencyPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agency` that was updated by this mutation."""
  agency: Agency

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Agency`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Agency`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Agency`."""
  createdBy: Usertable

  """Reads a single `Agencyoffer` that is related to this `Agency`."""
  agencyOffer: Agencyoffer

  """Reads a single `Agencydeal` that is related to this `Agency`."""
  agencyDeal: Agencydeal

  """Reads a single `Agencymedialibrary` that is related to this `Agency`."""
  agencyMediaLibrary: Agencymedialibrary

  """Reads a single `Bookingcalendar` that is related to this `Agency`."""
  bookingCalendar: Bookingcalendar

  """An edge for our `Agency`. May be used by Relay 1."""
  agencyEdge(
    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgenciesEdge
}

"""All input for the `updateAgencyreviewByNodeId` mutation."""
input UpdateAgencyreviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyreview` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyreview` being updated.
  """
  patch: AgencyreviewPatch!
}

"""All input for the `updateAgencyreview` mutation."""
input UpdateAgencyreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyreview` being updated.
  """
  patch: AgencyreviewPatch!
  id: Int!
}

"""The output of our update `Agencyreview` mutation."""
type UpdateAgencyreviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyreview` that was updated by this mutation."""
  agencyreview: Agencyreview

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Agencyreview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Agencyreview`."""
  createdBy: Usertable

  """Reads a single `Agency` that is related to this `Agencyreview`."""
  agencyByAgencyIdTarget: Agency

  """An edge for our `Agencyreview`. May be used by Relay 1."""
  agencyreviewEdge(
    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyreviewsEdge
}

"""All input for the `updateAgencytouristByNodeId` mutation."""
input UpdateAgencytouristByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytourist` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencytourist` being updated.
  """
  patch: AgencytouristPatch!
}

"""All input for the `updateAgencytourist` mutation."""
input UpdateAgencytouristInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencytourist` being updated.
  """
  patch: AgencytouristPatch!
  agencyId: Int!
  touristId: Int!
}

"""The output of our update `Agencytourist` mutation."""
type UpdateAgencytouristPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytourist` that was updated by this mutation."""
  agencytourist: Agencytourist

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytourist`."""
  agency: Agency

  """An edge for our `Agencytourist`. May be used by Relay 1."""
  agencytouristEdge(
    """The method to use when ordering `Agencytourist`."""
    orderBy: [AgencytouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytouristsEdge
}

"""All input for the `updateAgencytransportByNodeId` mutation."""
input UpdateAgencytransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytransport` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencytransport` being updated.
  """
  patch: AgencytransportPatch!
}

"""All input for the `updateAgencytransport` mutation."""
input UpdateAgencytransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencytransport` being updated.
  """
  patch: AgencytransportPatch!
  agencyId: Int!
  transportId: Int!
}

"""The output of our update `Agencytransport` mutation."""
type UpdateAgencytransportPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytransport` that was updated by this mutation."""
  agencytransport: Agencytransport

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytransport`."""
  agency: Agency

  """
  Reads a single `Transportresource` that is related to this `Agencytransport`.
  """
  transport: Transportresource

  """An edge for our `Agencytransport`. May be used by Relay 1."""
  agencytransportEdge(
    """The method to use when ordering `Agencytransport`."""
    orderBy: [AgencytransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytransportsEdge
}

"""All input for the `updateAgencytravelgroupByNodeId` mutation."""
input UpdateAgencytravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytravelgroup` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencytravelgroup` being updated.
  """
  patch: AgencytravelgroupPatch!
}

"""All input for the `updateAgencytravelgroup` mutation."""
input UpdateAgencytravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencytravelgroup` being updated.
  """
  patch: AgencytravelgroupPatch!
  agencyId: Int!
  travelGroupId: Int!
}

"""The output of our update `Agencytravelgroup` mutation."""
type UpdateAgencytravelgroupPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytravelgroup` that was updated by this mutation."""
  agencytravelgroup: Agencytravelgroup

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytravelgroup`."""
  agency: Agency

  """
  Reads a single `Travelgroupresource` that is related to this `Agencytravelgroup`.
  """
  travelGroup: Travelgroupresource

  """An edge for our `Agencytravelgroup`. May be used by Relay 1."""
  agencytravelgroupEdge(
    """The method to use when ordering `Agencytravelgroup`."""
    orderBy: [AgencytravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytravelgroupsEdge
}

"""All input for the `updateAgencytripofferByNodeId` mutation."""
input UpdateAgencytripofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencytripoffer` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencytripoffer` being updated.
  """
  patch: AgencytripofferPatch!
}

"""All input for the `updateAgencytripoffer` mutation."""
input UpdateAgencytripofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencytripoffer` being updated.
  """
  patch: AgencytripofferPatch!
  agencyId: Int!
  tripOfferId: Int!
}

"""The output of our update `Agencytripoffer` mutation."""
type UpdateAgencytripofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencytripoffer` that was updated by this mutation."""
  agencytripoffer: Agencytripoffer

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencytripoffer`."""
  agency: Agency

  """
  Reads a single `Tripofferresource` that is related to this `Agencytripoffer`.
  """
  tripOffer: Tripofferresource

  """An edge for our `Agencytripoffer`. May be used by Relay 1."""
  agencytripofferEdge(
    """The method to use when ordering `Agencytripoffer`."""
    orderBy: [AgencytripoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencytripoffersEdge
}

"""All input for the `updateAgencyuserByNodeId` mutation."""
input UpdateAgencyuserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Agencyuser` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Agencyuser` being updated.
  """
  patch: AgencyuserPatch!
}

"""All input for the `updateAgencyuser` mutation."""
input UpdateAgencyuserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Agencyuser` being updated.
  """
  patch: AgencyuserPatch!
  agencyId: Int!
  userId: Int!
}

"""The output of our update `Agencyuser` mutation."""
type UpdateAgencyuserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Agencyuser` that was updated by this mutation."""
  agencyuser: Agencyuser

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Agencyuser`."""
  agency: Agency

  """Reads a single `Usertable` that is related to this `Agencyuser`."""
  user: Usertable

  """An edge for our `Agencyuser`. May be used by Relay 1."""
  agencyuserEdge(
    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]
  ): AgencyusersEdge
}

"""All input for the `updateAssocaccomodationByNodeId` mutation."""
input UpdateAssocaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocaccomodation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assocaccomodation` being updated.
  """
  patch: AssocaccomodationPatch!
}

"""All input for the `updateAssocaccomodation` mutation."""
input UpdateAssocaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assocaccomodation` being updated.
  """
  patch: AssocaccomodationPatch!
  atAgency: Int!
  accomodationId: Int!
}

"""The output of our update `Assocaccomodation` mutation."""
type UpdateAssocaccomodationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocaccomodation` that was updated by this mutation."""
  assocaccomodation: Assocaccomodation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Accomodationresource` that is related to this `Assocaccomodation`.
  """
  accomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Assocaccomodation`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocaccomodation`. May be used by Relay 1."""
  assocaccomodationEdge(
    """The method to use when ordering `Assocaccomodation`."""
    orderBy: [AssocaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocaccomodationsEdge
}

"""All input for the `updateAssocdestinationByNodeId` mutation."""
input UpdateAssocdestinationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocdestination` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assocdestination` being updated.
  """
  patch: AssocdestinationPatch!
}

"""All input for the `updateAssocdestination` mutation."""
input UpdateAssocdestinationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assocdestination` being updated.
  """
  patch: AssocdestinationPatch!
  atAgency: Int!
  destinationId: Int!
}

"""The output of our update `Assocdestination` mutation."""
type UpdateAssocdestinationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocdestination` that was updated by this mutation."""
  assocdestination: Assocdestination

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Destinationresource` that is related to this `Assocdestination`.
  """
  destination: Destinationresource

  """Reads a single `Agency` that is related to this `Assocdestination`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocdestination`. May be used by Relay 1."""
  assocdestinationEdge(
    """The method to use when ordering `Assocdestination`."""
    orderBy: [AssocdestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocdestinationsEdge
}

"""All input for the `updateAssoceventByNodeId` mutation."""
input UpdateAssoceventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocevent` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assocevent` being updated.
  """
  patch: AssoceventPatch!
}

"""All input for the `updateAssocevent` mutation."""
input UpdateAssoceventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assocevent` being updated.
  """
  patch: AssoceventPatch!
  atAgency: Int!
  eventId: Int!
}

"""The output of our update `Assocevent` mutation."""
type UpdateAssoceventPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocevent` that was updated by this mutation."""
  assocevent: Assocevent

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Eventresource` that is related to this `Assocevent`."""
  event: Eventresource

  """Reads a single `Agency` that is related to this `Assocevent`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocevent`. May be used by Relay 1."""
  assoceventEdge(
    """The method to use when ordering `Assocevent`."""
    orderBy: [AssoceventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoceventsEdge
}

"""All input for the `updateAssocguideByNodeId` mutation."""
input UpdateAssocguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assocguide` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assocguide` being updated.
  """
  patch: AssocguidePatch!
}

"""All input for the `updateAssocguide` mutation."""
input UpdateAssocguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assocguide` being updated.
  """
  patch: AssocguidePatch!
  atAgency: Int!
  guideId: Int!
}

"""The output of our update `Assocguide` mutation."""
type UpdateAssocguidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assocguide` that was updated by this mutation."""
  assocguide: Assocguide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Guideresource` that is related to this `Assocguide`."""
  guide: Guideresource

  """Reads a single `Agency` that is related to this `Assocguide`."""
  agencyByAtAgency: Agency

  """An edge for our `Assocguide`. May be used by Relay 1."""
  assocguideEdge(
    """The method to use when ordering `Assocguide`."""
    orderBy: [AssocguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssocguidesEdge
}

"""All input for the `updateAssochostByNodeId` mutation."""
input UpdateAssochostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assochost` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assochost` being updated.
  """
  patch: AssochostPatch!
}

"""All input for the `updateAssochost` mutation."""
input UpdateAssochostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assochost` being updated.
  """
  patch: AssochostPatch!
  atAgency: Int!
  hostId: Int!
}

"""The output of our update `Assochost` mutation."""
type UpdateAssochostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assochost` that was updated by this mutation."""
  assochost: Assochost

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Hostresource` that is related to this `Assochost`."""
  host: Hostresource

  """Reads a single `Agency` that is related to this `Assochost`."""
  agencyByAtAgency: Agency

  """An edge for our `Assochost`. May be used by Relay 1."""
  assochostEdge(
    """The method to use when ordering `Assochost`."""
    orderBy: [AssochostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssochostsEdge
}

"""All input for the `updateAssoctransportByNodeId` mutation."""
input UpdateAssoctransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assoctransport` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assoctransport` being updated.
  """
  patch: AssoctransportPatch!
}

"""All input for the `updateAssoctransport` mutation."""
input UpdateAssoctransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assoctransport` being updated.
  """
  patch: AssoctransportPatch!
  atAgency: Int!
  transportId: Int!
}

"""The output of our update `Assoctransport` mutation."""
type UpdateAssoctransportPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assoctransport` that was updated by this mutation."""
  assoctransport: Assoctransport

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Transportresource` that is related to this `Assoctransport`.
  """
  transport: Transportresource

  """Reads a single `Agency` that is related to this `Assoctransport`."""
  agencyByAtAgency: Agency

  """An edge for our `Assoctransport`. May be used by Relay 1."""
  assoctransportEdge(
    """The method to use when ordering `Assoctransport`."""
    orderBy: [AssoctransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctransportsEdge
}

"""All input for the `updateAssoctravelgroupByNodeId` mutation."""
input UpdateAssoctravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Assoctravelgroup` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Assoctravelgroup` being updated.
  """
  patch: AssoctravelgroupPatch!
}

"""All input for the `updateAssoctravelgroup` mutation."""
input UpdateAssoctravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Assoctravelgroup` being updated.
  """
  patch: AssoctravelgroupPatch!
  atAgency: Int!
  travelGroupId: Int!
}

"""The output of our update `Assoctravelgroup` mutation."""
type UpdateAssoctravelgroupPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Assoctravelgroup` that was updated by this mutation."""
  assoctravelgroup: Assoctravelgroup

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Travelgroupresource` that is related to this `Assoctravelgroup`.
  """
  travelGroup: Travelgroupresource

  """Reads a single `Agency` that is related to this `Assoctravelgroup`."""
  agencyByAtAgency: Agency

  """An edge for our `Assoctravelgroup`. May be used by Relay 1."""
  assoctravelgroupEdge(
    """The method to use when ordering `Assoctravelgroup`."""
    orderBy: [AssoctravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AssoctravelgroupsEdge
}

"""All input for the `updateAuctioninfoByNodeId` mutation."""
input UpdateAuctioninfoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Auctioninfo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Auctioninfo` being updated.
  """
  patch: AuctioninfoPatch!
}

"""All input for the `updateAuctioninfo` mutation."""
input UpdateAuctioninfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Auctioninfo` being updated.
  """
  patch: AuctioninfoPatch!
  id: Int!
}

"""The output of our update `Auctioninfo` mutation."""
type UpdateAuctioninfoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Auctioninfo` that was updated by this mutation."""
  auctioninfo: Auctioninfo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Auctioninfo`."""
  publishedBy: Publisher

  """Reads a single `Usertable` that is related to this `Auctioninfo`."""
  createdBy: Usertable

  """Reads a single `Bid` that is related to this `Auctioninfo`."""
  bid: Bid

  """An edge for our `Auctioninfo`. May be used by Relay 1."""
  auctioninfoEdge(
    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AuctioninfosEdge
}

"""All input for the `updateBidByNodeId` mutation."""
input UpdateBidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Bid` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Bid` being updated.
  """
  patch: BidPatch!
}

"""All input for the `updateBid` mutation."""
input UpdateBidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Bid` being updated.
  """
  patch: BidPatch!
  id: Int!
}

"""The output of our update `Bid` mutation."""
type UpdateBidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Bid` that was updated by this mutation."""
  bid: Bid

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Bid`. May be used by Relay 1."""
  bidEdge(
    """The method to use when ordering `Bid`."""
    orderBy: [BidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BidsEdge
}

"""All input for the `updateBookingcalendarByNodeId` mutation."""
input UpdateBookingcalendarByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Bookingcalendar` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Bookingcalendar` being updated.
  """
  patch: BookingcalendarPatch!
}

"""All input for the `updateBookingcalendar` mutation."""
input UpdateBookingcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Bookingcalendar` being updated.
  """
  patch: BookingcalendarPatch!
  id: Int!
}

"""The output of our update `Bookingcalendar` mutation."""
type UpdateBookingcalendarPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Bookingcalendar` that was updated by this mutation."""
  bookingcalendar: Bookingcalendar

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Bookingcalendar`."""
  createdBy: Usertable

  """An edge for our `Bookingcalendar`. May be used by Relay 1."""
  bookingcalendarEdge(
    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): BookingcalendarsEdge
}

"""All input for the `updateCalendarentryByNodeId` mutation."""
input UpdateCalendarentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Calendarentry` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Calendarentry` being updated.
  """
  patch: CalendarentryPatch!
}

"""All input for the `updateCalendarentry` mutation."""
input UpdateCalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Calendarentry` being updated.
  """
  patch: CalendarentryPatch!
  id: Int!
}

"""The output of our update `Calendarentry` mutation."""
type UpdateCalendarentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Calendarentry` that was updated by this mutation."""
  calendarentry: Calendarentry

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Calendarentry`. May be used by Relay 1."""
  calendarentryEdge(
    """The method to use when ordering `Calendarentry`."""
    orderBy: [CalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarentriesEdge
}

"""All input for the `updateCommandlogentryByNodeId` mutation."""
input UpdateCommandlogentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Commandlogentry` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Commandlogentry` being updated.
  """
  patch: CommandlogentryPatch!
}

"""All input for the `updateCommandlogentry` mutation."""
input UpdateCommandlogentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Commandlogentry` being updated.
  """
  patch: CommandlogentryPatch!
  id: Int!
}

"""The output of our update `Commandlogentry` mutation."""
type UpdateCommandlogentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Commandlogentry` that was updated by this mutation."""
  commandlogentry: Commandlogentry

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Commandlogentry`."""
  publisherByAtPublisher: Publisher

  """An edge for our `Commandlogentry`. May be used by Relay 1."""
  commandlogentryEdge(
    """The method to use when ordering `Commandlogentry`."""
    orderBy: [CommandlogentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CommandlogentriesEdge
}

"""All input for the `updateContactByNodeId` mutation."""
input UpdateContactByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Contact` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Contact` being updated.
  """
  patch: ContactPatch!
}

"""All input for the `updateContact` mutation."""
input UpdateContactInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Contact` being updated.
  """
  patch: ContactPatch!
  id: Int!
}

"""The output of our update `Contact` mutation."""
type UpdateContactPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Contact` that was updated by this mutation."""
  contact: Contact

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Contact`."""
  createdBy: Usertable

  """An edge for our `Contact`. May be used by Relay 1."""
  contactEdge(
    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ContactsEdge
}

"""All input for the `updateDestinationresourceByNodeId` mutation."""
input UpdateDestinationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Destinationresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Destinationresource` being updated.
  """
  patch: DestinationresourcePatch!
}

"""All input for the `updateDestinationresource` mutation."""
input UpdateDestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Destinationresource` being updated.
  """
  patch: DestinationresourcePatch!
  id: Int!
}

"""The output of our update `Destinationresource` mutation."""
type UpdateDestinationresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Destinationresource` that was updated by this mutation."""
  destinationresource: Destinationresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Publisher` that is related to this `Destinationresource`.
  """
  publishedBy: Publisher

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Priceinfo` that is related to this `Destinationresource`.
  """
  priceInfo: Priceinfo

  """
  Reads a single `Bookingcalendar` that is related to this `Destinationresource`.
  """
  activeAtPeriods: Bookingcalendar

  """
  Reads a single `Presentation` that is related to this `Destinationresource`.
  """
  presentation: Presentation

  """Reads a single `Agency` that is related to this `Destinationresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Geocoding` that is related to this `Destinationresource`.
  """
  geoCoding: Geocoding

  """
  Reads a single `Usertable` that is related to this `Destinationresource`.
  """
  usertableByLastModifiedBy: Usertable

  """An edge for our `Destinationresource`. May be used by Relay 1."""
  destinationresourceEdge(
    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DestinationresourcesEdge
}

"""All input for the `updateEventresourceByNodeId` mutation."""
input UpdateEventresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Eventresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Eventresource` being updated.
  """
  patch: EventresourcePatch!
}

"""All input for the `updateEventresource` mutation."""
input UpdateEventresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Eventresource` being updated.
  """
  patch: EventresourcePatch!
  id: Int!
}

"""The output of our update `Eventresource` mutation."""
type UpdateEventresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Eventresource` that was updated by this mutation."""
  eventresource: Eventresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Eventresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Eventresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Eventresource`."""
  createdBy: Usertable

  """Reads a single `Contact` that is related to this `Eventresource`."""
  locationAddress: Contact

  """
  Reads a single `Bookingcalendar` that is related to this `Eventresource`.
  """
  activeAtPeriods: Bookingcalendar

  """Reads a single `Agency` that is related to this `Eventresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Eventresource`."""
  guideByAtGuide: Guide

  """Reads a single `Presentation` that is related to this `Eventresource`."""
  presentation: Presentation

  """An edge for our `Eventresource`. May be used by Relay 1."""
  eventresourceEdge(
    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventresourcesEdge
}

"""All input for the `updateGeocodingByNodeId` mutation."""
input UpdateGeocodingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Geocoding` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Geocoding` being updated.
  """
  patch: GeocodingPatch!
}

"""All input for the `updateGeocoding` mutation."""
input UpdateGeocodingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Geocoding` being updated.
  """
  patch: GeocodingPatch!
  id: Int!
}

"""The output of our update `Geocoding` mutation."""
type UpdateGeocodingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Geocoding` that was updated by this mutation."""
  geocoding: Geocoding

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Geocoding`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Geocoding`."""
  publishedBy: Publisher

  """An edge for our `Geocoding`. May be used by Relay 1."""
  geocodingEdge(
    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GeocodingsEdge
}

"""All input for the `updateGuidebidByNodeId` mutation."""
input UpdateGuidebidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidebid` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guidebid` being updated.
  """
  patch: GuidebidPatch!
}

"""All input for the `updateGuidebid` mutation."""
input UpdateGuidebidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Guidebid` being updated.
  """
  patch: GuidebidPatch!
  id: Int!
}

"""The output of our update `Guidebid` mutation."""
type UpdateGuidebidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidebid` that was updated by this mutation."""
  guidebid: Guidebid

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guidebid`. May be used by Relay 1."""
  guidebidEdge(
    """The method to use when ordering `Guidebid`."""
    orderBy: [GuidebidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidebidsEdge
}

"""All input for the `updateGuideByNodeId` mutation."""
input UpdateGuideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guide` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guide` being updated.
  """
  patch: GuidePatch!
}

"""All input for the `updateGuidedealByNodeId` mutation."""
input UpdateGuidedealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidedeal` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guidedeal` being updated.
  """
  patch: GuidedealPatch!
}

"""All input for the `updateGuidedeal` mutation."""
input UpdateGuidedealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Guidedeal` being updated.
  """
  patch: GuidedealPatch!
  id: Int!
}

"""The output of our update `Guidedeal` mutation."""
type UpdateGuidedealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidedeal` that was updated by this mutation."""
  guidedeal: Guidedeal

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guidedeal`. May be used by Relay 1."""
  guidedealEdge(
    """The method to use when ordering `Guidedeal`."""
    orderBy: [GuidedealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidedealsEdge
}

"""All input for the `updateGuidefavoriteByNodeId` mutation."""
input UpdateGuidefavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidefavorite` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guidefavorite` being updated.
  """
  patch: GuidefavoritePatch!
}

"""All input for the `updateGuidefavorite` mutation."""
input UpdateGuidefavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Guidefavorite` being updated.
  """
  patch: GuidefavoritePatch!
  id: Int!
}

"""The output of our update `Guidefavorite` mutation."""
type UpdateGuidefavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidefavorite` that was updated by this mutation."""
  guidefavorite: Guidefavorite

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guidefavorite`. May be used by Relay 1."""
  guidefavoriteEdge(
    """The method to use when ordering `Guidefavorite`."""
    orderBy: [GuidefavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidefavoritesEdge
}

"""All input for the `updateGuide` mutation."""
input UpdateGuideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Guide` being updated.
  """
  patch: GuidePatch!
  id: Int!
}

"""All input for the `updateGuideofferByNodeId` mutation."""
input UpdateGuideofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guideoffer` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guideoffer` being updated.
  """
  patch: GuideofferPatch!
}

"""All input for the `updateGuideoffer` mutation."""
input UpdateGuideofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Guideoffer` being updated.
  """
  patch: GuideofferPatch!
  id: Int!
}

"""The output of our update `Guideoffer` mutation."""
type UpdateGuideofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guideoffer` that was updated by this mutation."""
  guideoffer: Guideoffer

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Guideoffer`. May be used by Relay 1."""
  guideofferEdge(
    """The method to use when ordering `Guideoffer`."""
    orderBy: [GuideoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideoffersEdge
}

"""The output of our update `Guide` mutation."""
type UpdateGuidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guide` that was updated by this mutation."""
  guide: Guide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Guide`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Guide`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guide`."""
  createdBy: Usertable

  """Reads a single `Agency` that is related to this `Guide`."""
  agencyByAtAgency: Agency

  """Reads a single `Languagelevel` that is related to this `Guide`."""
  languageLevel: Languagelevel

  """Reads a single `Guideoffer` that is related to this `Guide`."""
  guideOffer: Guideoffer

  """Reads a single `Guidebid` that is related to this `Guide`."""
  guideBid: Guidebid

  """Reads a single `Guidefavorite` that is related to this `Guide`."""
  guideFavorite: Guidefavorite

  """Reads a single `Guidedeal` that is related to this `Guide`."""
  guideDeal: Guidedeal

  """Reads a single `Bookingcalendar` that is related to this `Guide`."""
  bookingCalendar: Bookingcalendar

  """An edge for our `Guide`. May be used by Relay 1."""
  guideEdge(
    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidesEdge
}

"""All input for the `updateGuideresourceByNodeId` mutation."""
input UpdateGuideresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guideresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guideresource` being updated.
  """
  patch: GuideresourcePatch!
}

"""All input for the `updateGuideresource` mutation."""
input UpdateGuideresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Guideresource` being updated.
  """
  patch: GuideresourcePatch!
  id: Int!
}

"""The output of our update `Guideresource` mutation."""
type UpdateGuideresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guideresource` that was updated by this mutation."""
  guideresource: Guideresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Guideresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guideresource`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guideresource`."""
  guideByAtGuide: Guide

  """Reads a single `Timerange` that is related to this `Guideresource`."""
  timeRange: Timerange

  """Reads a single `Priceinfo` that is related to this `Guideresource`."""
  priceInfo: Priceinfo

  """Reads a single `Agency` that is related to this `Guideresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Bookingcalendar` that is related to this `Guideresource`.
  """
  bookingCalendar: Bookingcalendar

  """An edge for our `Guideresource`. May be used by Relay 1."""
  guideresourceEdge(
    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuideresourcesEdge
}

"""All input for the `updateGuidereviewByNodeId` mutation."""
input UpdateGuidereviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Guidereview` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Guidereview` being updated.
  """
  patch: GuidereviewPatch!
}

"""All input for the `updateGuidereview` mutation."""
input UpdateGuidereviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Guidereview` being updated.
  """
  patch: GuidereviewPatch!
  id: Int!
}

"""The output of our update `Guidereview` mutation."""
type UpdateGuidereviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Guidereview` that was updated by this mutation."""
  guidereview: Guidereview

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Guidereview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Guidereview`."""
  createdBy: Usertable

  """Reads a single `Guide` that is related to this `Guidereview`."""
  guideByGuideIdTarget: Guide

  """An edge for our `Guidereview`. May be used by Relay 1."""
  guidereviewEdge(
    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): GuidereviewsEdge
}

"""All input for the `updateHostresourceByNodeId` mutation."""
input UpdateHostresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Hostresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Hostresource` being updated.
  """
  patch: HostresourcePatch!
}

"""All input for the `updateHostresource` mutation."""
input UpdateHostresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Hostresource` being updated.
  """
  patch: HostresourcePatch!
  id: Int!
}

"""The output of our update `Hostresource` mutation."""
type UpdateHostresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Hostresource` that was updated by this mutation."""
  hostresource: Hostresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Hostresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Hostresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Hostresource`."""
  createdBy: Usertable

  """
  Reads a single `Accomodationresource` that is related to this `Hostresource`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Agency` that is related to this `Hostresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Hostresource`."""
  guideByAtGuide: Guide

  """Reads a single `Contact` that is related to this `Hostresource`."""
  addressInfo: Contact

  """Reads a single `Presentation` that is related to this `Hostresource`."""
  presentation: Presentation

  """
  Reads a single `Bookingcalendar` that is related to this `Hostresource`.
  """
  bookingCalendar: Bookingcalendar

  """An edge for our `Hostresource`. May be used by Relay 1."""
  hostresourceEdge(
    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HostresourcesEdge
}

"""All input for the `updateLanguagelevelByNodeId` mutation."""
input UpdateLanguagelevelByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Languagelevel` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Languagelevel` being updated.
  """
  patch: LanguagelevelPatch!
}

"""All input for the `updateLanguagelevel` mutation."""
input UpdateLanguagelevelInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Languagelevel` being updated.
  """
  patch: LanguagelevelPatch!
  id: Int!
}

"""The output of our update `Languagelevel` mutation."""
type UpdateLanguagelevelPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Languagelevel` that was updated by this mutation."""
  languagelevel: Languagelevel

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Languagelevel`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Languagelevel`."""
  publisher: Publisher

  """An edge for our `Languagelevel`. May be used by Relay 1."""
  languagelevelEdge(
    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LanguagelevelsEdge
}

"""
All input for the `updateMediadestinationresourceByGuideSignedUrl` mutation.
"""
input UpdateMediadestinationresourceByGuideSignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  guideSignedUrl: String!
}

"""All input for the `updateMediadestinationresourceById` mutation."""
input UpdateMediadestinationresourceByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  id: Int!
}

"""
All input for the `updateMediadestinationresourceByImageGallery10SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery10SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery10SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByImageGallery1SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery1SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery1SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByImageGallery2SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery2SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery2SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByImageGallery3SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery3SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery3SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByImageGallery4SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery4SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery4SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByImageGallery5SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery5SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery5SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByImageGallery6SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery6SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery6SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByImageGallery7SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery7SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery7SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByImageGallery8SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery8SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery8SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByImageGallery9SignedUrl` mutation.
"""
input UpdateMediadestinationresourceByImageGallery9SignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  imageGallery9SignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByMainImageSignedUrl` mutation.
"""
input UpdateMediadestinationresourceByMainImageSignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  mainImageSignedUrl: String!
}

"""
All input for the `updateMediadestinationresourceByMapImageSignedUrl` mutation.
"""
input UpdateMediadestinationresourceByMapImageSignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  mapImageSignedUrl: String!
}

"""All input for the `updateMediadestinationresourceByNodeId` mutation."""
input UpdateMediadestinationresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Mediadestinationresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
}

"""
All input for the `updateMediadestinationresourceByThumbnailImageSignedUrl` mutation.
"""
input UpdateMediadestinationresourceByThumbnailImageSignedUrlInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  thumbnailImageSignedUrl: String!
}

"""All input for the `updateMediadestinationresource` mutation."""
input UpdateMediadestinationresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mediadestinationresource` being updated.
  """
  patch: MediadestinationresourcePatch!
  atAgency: Int!
  atDestination: Int!
}

"""The output of our update `Mediadestinationresource` mutation."""
type UpdateMediadestinationresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Mediadestinationresource` that was updated by this mutation."""
  mediadestinationresource: Mediadestinationresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Mediadestinationresource`.
  """
  agencyByAtAgency: Agency

  """
  Reads a single `Destinationresource` that is related to this `Mediadestinationresource`.
  """
  destinationresourceByAtDestination: Destinationresource

  """
  Reads a single `Usertable` that is related to this `Mediadestinationresource`.
  """
  usertableByLastModifiedBy: Usertable

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMainImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByGuideImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByMapImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByThumbnailImage: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery1: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery2: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery3: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery4: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery5: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery6: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery7: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery8: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery9: Medialocation

  """
  Reads a single `Medialocation` that is related to this `Mediadestinationresource`.
  """
  medialocationByImageGallery10: Medialocation

  """An edge for our `Mediadestinationresource`. May be used by Relay 1."""
  mediadestinationresourceEdge(
    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MediadestinationresourcesEdge
}

"""All input for the `updateMedialocationById` mutation."""
input UpdateMedialocationByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
  id: Int!
}

"""All input for the `updateMedialocationByNodeId` mutation."""
input UpdateMedialocationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Medialocation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
}

"""All input for the `updateMedialocationByUploadLocation2K` mutation."""
input UpdateMedialocationByUploadLocation2KInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
  uploadLocation2K: String!
}

"""
All input for the `updateMedialocationByUploadLocationDesktop` mutation.
"""
input UpdateMedialocationByUploadLocationDesktopInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
  uploadLocationDesktop: String!
}

"""
All input for the `updateMedialocationByUploadLocationMobile` mutation.
"""
input UpdateMedialocationByUploadLocationMobileInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
  uploadLocationMobile: String!
}

"""
All input for the `updateMedialocationByUploadLocationOriginal` mutation.
"""
input UpdateMedialocationByUploadLocationOriginalInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
  uploadLocationOriginal: String!
}

"""
All input for the `updateMedialocationByUploadLocationTablet` mutation.
"""
input UpdateMedialocationByUploadLocationTabletInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
  uploadLocationTablet: String!
}

"""
All input for the `updateMedialocationByUploadLocationThumbnail` mutation.
"""
input UpdateMedialocationByUploadLocationThumbnailInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
  uploadLocationThumbnail: String!
}

"""All input for the `updateMedialocation` mutation."""
input UpdateMedialocationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Medialocation` being updated.
  """
  patch: MedialocationPatch!
  atAgency: Int!
  atResource: Int!
  mediaLocationPlacement: Medialocationplacement!
}

"""The output of our update `Medialocation` mutation."""
type UpdateMedialocationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Medialocation` that was updated by this mutation."""
  medialocation: Medialocation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Medialocation`."""
  agencyByAtAgency: Agency

  """An edge for our `Medialocation`. May be used by Relay 1."""
  medialocationEdge(
    """The method to use when ordering `Medialocation`."""
    orderBy: [MedialocationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MedialocationsEdge
}

"""All input for the `updatePresentationByNodeId` mutation."""
input UpdatePresentationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Presentation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Presentation` being updated.
  """
  patch: PresentationPatch!
}

"""All input for the `updatePresentation` mutation."""
input UpdatePresentationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Presentation` being updated.
  """
  patch: PresentationPatch!
  id: Int!
}

"""The output of our update `Presentation` mutation."""
type UpdatePresentationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Presentation` that was updated by this mutation."""
  presentation: Presentation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Presentation`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Presentation`."""
  createdBy: Usertable

  """An edge for our `Presentation`. May be used by Relay 1."""
  presentationEdge(
    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): PresentationsEdge
}

"""All input for the `updatePriceinfoByNodeId` mutation."""
input UpdatePriceinfoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Priceinfo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Priceinfo` being updated.
  """
  patch: PriceinfoPatch!
}

"""All input for the `updatePriceinfo` mutation."""
input UpdatePriceinfoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Priceinfo` being updated.
  """
  patch: PriceinfoPatch!
  id: Int!
}

"""The output of our update `Priceinfo` mutation."""
type UpdatePriceinfoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Priceinfo` that was updated by this mutation."""
  priceinfo: Priceinfo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Priceinfo`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Priceinfo`."""
  createdBy: Usertable

  """Reads a single `Bid` that is related to this `Priceinfo`."""
  bid: Bid

  """An edge for our `Priceinfo`. May be used by Relay 1."""
  priceinfoEdge(
    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]
  ): PriceinfosEdge
}

"""All input for the `updatePublisherByNodeId` mutation."""
input UpdatePublisherByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Publisher` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Publisher` being updated.
  """
  patch: PublisherPatch!
}

"""All input for the `updatePublisher` mutation."""
input UpdatePublisherInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Publisher` being updated.
  """
  patch: PublisherPatch!
  id: Int!
}

"""The output of our update `Publisher` mutation."""
type UpdatePublisherPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Publisher` that was updated by this mutation."""
  publisher: Publisher

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Usertable` that is related to this `Publisher`."""
  createdBy: Usertable

  """An edge for our `Publisher`. May be used by Relay 1."""
  publisherEdge(
    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]
  ): PublishersEdge
}

"""All input for the `updateReviewByNodeId` mutation."""
input UpdateReviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Review` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Review` being updated.
  """
  patch: ReviewPatch!
}

"""All input for the `updateReview` mutation."""
input UpdateReviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Review` being updated.
  """
  patch: ReviewPatch!
  id: Int!
}

"""The output of our update `Review` mutation."""
type UpdateReviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Review` that was updated by this mutation."""
  review: Review

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Review`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Review`."""
  createdBy: Usertable

  """Reads a single `Publisher` that is related to this `Review`."""
  publisherByPublisherTarget: Publisher

  """An edge for our `Review`. May be used by Relay 1."""
  reviewEdge(
    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ReviewsEdge
}

"""All input for the `updateRoomcalendarByNodeId` mutation."""
input UpdateRoomcalendarByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomcalendar` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Roomcalendar` being updated.
  """
  patch: RoomcalendarPatch!
}

"""All input for the `updateRoomcalendarentryByNodeId` mutation."""
input UpdateRoomcalendarentryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomcalendarentry` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Roomcalendarentry` being updated.
  """
  patch: RoomcalendarentryPatch!
}

"""All input for the `updateRoomcalendarentry` mutation."""
input UpdateRoomcalendarentryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Roomcalendarentry` being updated.
  """
  patch: RoomcalendarentryPatch!
  id: Int!
}

"""The output of our update `Roomcalendarentry` mutation."""
type UpdateRoomcalendarentryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Roomcalendarentry` that was updated by this mutation."""
  roomcalendarentry: Roomcalendarentry

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Roomcalendar` that is related to this `Roomcalendarentry`.
  """
  roomcalendarByAtRoomCalendar: Roomcalendar

  """An edge for our `Roomcalendarentry`. May be used by Relay 1."""
  roomcalendarentryEdge(
    """The method to use when ordering `Roomcalendarentry`."""
    orderBy: [RoomcalendarentriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarentriesEdge
}

"""All input for the `updateRoomcalendar` mutation."""
input UpdateRoomcalendarInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Roomcalendar` being updated.
  """
  patch: RoomcalendarPatch!
  id: Int!
}

"""The output of our update `Roomcalendar` mutation."""
type UpdateRoomcalendarPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Roomcalendar` that was updated by this mutation."""
  roomcalendar: Roomcalendar

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Roomcalendar`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Roomcalendar`."""
  createdBy: Usertable

  """
  Reads a single `Roomcalendarentry` that is related to this `Roomcalendar`.
  """
  calendarentry: Roomcalendarentry

  """An edge for our `Roomcalendar`. May be used by Relay 1."""
  roomcalendarEdge(
    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomcalendarsEdge
}

"""All input for the `updateRoomlistByNodeId` mutation."""
input UpdateRoomlistByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Roomlist` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Roomlist` being updated.
  """
  patch: RoomlistPatch!
}

"""All input for the `updateRoomlist` mutation."""
input UpdateRoomlistInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Roomlist` being updated.
  """
  patch: RoomlistPatch!
  id: Int!
}

"""The output of our update `Roomlist` mutation."""
type UpdateRoomlistPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Roomlist` that was updated by this mutation."""
  roomlist: Roomlist

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Accomodationresource` that is related to this `Roomlist`.
  """
  accomodationresourceByAtAccomodation: Accomodationresource

  """Reads a single `Roomcalendar` that is related to this `Roomlist`."""
  roomCalendar: Roomcalendar

  """An edge for our `Roomlist`. May be used by Relay 1."""
  roomlistEdge(
    """The method to use when ordering `Roomlist`."""
    orderBy: [RoomlistsOrderBy!] = [PRIMARY_KEY_ASC]
  ): RoomlistsEdge
}

"""
All input for the `updateSimilarbytriptypeaccomodationByNodeId` mutation.
"""
input UpdateSimilarbytriptypeaccomodationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeaccomodation` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypeaccomodation` being updated.
  """
  patch: SimilarbytriptypeaccomodationPatch!
}

"""All input for the `updateSimilarbytriptypeaccomodation` mutation."""
input UpdateSimilarbytriptypeaccomodationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypeaccomodation` being updated.
  """
  patch: SimilarbytriptypeaccomodationPatch!
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypeaccomodation` mutation."""
type UpdateSimilarbytriptypeaccomodationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypeaccomodation` that was updated by this mutation."""
  similarbytriptypeaccomodation: Similarbytriptypeaccomodation

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeaccomodation`.
  """
  agencyByAtAgency: Agency

  """
  An edge for our `Similarbytriptypeaccomodation`. May be used by Relay 1.
  """
  similarbytriptypeaccomodationEdge(
    """The method to use when ordering `Similarbytriptypeaccomodation`."""
    orderBy: [SimilarbytriptypeaccomodationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeaccomodationsEdge
}

"""
All input for the `updateSimilarbytriptypedestinationByNodeId` mutation.
"""
input UpdateSimilarbytriptypedestinationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypedestination` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypedestination` being updated.
  """
  patch: SimilarbytriptypedestinationPatch!
}

"""All input for the `updateSimilarbytriptypedestination` mutation."""
input UpdateSimilarbytriptypedestinationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypedestination` being updated.
  """
  patch: SimilarbytriptypedestinationPatch!
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypedestination` mutation."""
type UpdateSimilarbytriptypedestinationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypedestination` that was updated by this mutation."""
  similarbytriptypedestination: Similarbytriptypedestination

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypedestination`.
  """
  agencyByAtAgency: Agency

  """
  An edge for our `Similarbytriptypedestination`. May be used by Relay 1.
  """
  similarbytriptypedestinationEdge(
    """The method to use when ordering `Similarbytriptypedestination`."""
    orderBy: [SimilarbytriptypedestinationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypedestinationsEdge
}

"""All input for the `updateSimilarbytriptypeeventByNodeId` mutation."""
input UpdateSimilarbytriptypeeventByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeevent` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypeevent` being updated.
  """
  patch: SimilarbytriptypeeventPatch!
}

"""All input for the `updateSimilarbytriptypeevent` mutation."""
input UpdateSimilarbytriptypeeventInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypeevent` being updated.
  """
  patch: SimilarbytriptypeeventPatch!
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypeevent` mutation."""
type UpdateSimilarbytriptypeeventPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypeevent` that was updated by this mutation."""
  similarbytriptypeevent: Similarbytriptypeevent

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeevent`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypeevent`. May be used by Relay 1."""
  similarbytriptypeeventEdge(
    """The method to use when ordering `Similarbytriptypeevent`."""
    orderBy: [SimilarbytriptypeeventsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeeventsEdge
}

"""All input for the `updateSimilarbytriptypeguideByNodeId` mutation."""
input UpdateSimilarbytriptypeguideByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypeguide` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypeguide` being updated.
  """
  patch: SimilarbytriptypeguidePatch!
}

"""All input for the `updateSimilarbytriptypeguide` mutation."""
input UpdateSimilarbytriptypeguideInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypeguide` being updated.
  """
  patch: SimilarbytriptypeguidePatch!
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypeguide` mutation."""
type UpdateSimilarbytriptypeguidePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypeguide` that was updated by this mutation."""
  similarbytriptypeguide: Similarbytriptypeguide

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypeguide`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypeguide`. May be used by Relay 1."""
  similarbytriptypeguideEdge(
    """The method to use when ordering `Similarbytriptypeguide`."""
    orderBy: [SimilarbytriptypeguidesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypeguidesEdge
}

"""All input for the `updateSimilarbytriptypehostByNodeId` mutation."""
input UpdateSimilarbytriptypehostByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypehost` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypehost` being updated.
  """
  patch: SimilarbytriptypehostPatch!
}

"""All input for the `updateSimilarbytriptypehost` mutation."""
input UpdateSimilarbytriptypehostInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypehost` being updated.
  """
  patch: SimilarbytriptypehostPatch!
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypehost` mutation."""
type UpdateSimilarbytriptypehostPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypehost` that was updated by this mutation."""
  similarbytriptypehost: Similarbytriptypehost

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypehost`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypehost`. May be used by Relay 1."""
  similarbytriptypehostEdge(
    """The method to use when ordering `Similarbytriptypehost`."""
    orderBy: [SimilarbytriptypehostsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypehostsEdge
}

"""All input for the `updateSimilarbytriptypetransportByNodeId` mutation."""
input UpdateSimilarbytriptypetransportByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypetransport` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypetransport` being updated.
  """
  patch: SimilarbytriptypetransportPatch!
}

"""All input for the `updateSimilarbytriptypetransport` mutation."""
input UpdateSimilarbytriptypetransportInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypetransport` being updated.
  """
  patch: SimilarbytriptypetransportPatch!
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypetransport` mutation."""
type UpdateSimilarbytriptypetransportPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypetransport` that was updated by this mutation."""
  similarbytriptypetransport: Similarbytriptypetransport

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypetransport`.
  """
  agencyByAtAgency: Agency

  """An edge for our `Similarbytriptypetransport`. May be used by Relay 1."""
  similarbytriptypetransportEdge(
    """The method to use when ordering `Similarbytriptypetransport`."""
    orderBy: [SimilarbytriptypetransportsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetransportsEdge
}

"""
All input for the `updateSimilarbytriptypetravelgroupByNodeId` mutation.
"""
input UpdateSimilarbytriptypetravelgroupByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Similarbytriptypetravelgroup` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Similarbytriptypetravelgroup` being updated.
  """
  patch: SimilarbytriptypetravelgroupPatch!
}

"""All input for the `updateSimilarbytriptypetravelgroup` mutation."""
input UpdateSimilarbytriptypetravelgroupInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Similarbytriptypetravelgroup` being updated.
  """
  patch: SimilarbytriptypetravelgroupPatch!
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our update `Similarbytriptypetravelgroup` mutation."""
type UpdateSimilarbytriptypetravelgroupPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Similarbytriptypetravelgroup` that was updated by this mutation."""
  similarbytriptypetravelgroup: Similarbytriptypetravelgroup

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Agency` that is related to this `Similarbytriptypetravelgroup`.
  """
  agencyByAtAgency: Agency

  """
  An edge for our `Similarbytriptypetravelgroup`. May be used by Relay 1.
  """
  similarbytriptypetravelgroupEdge(
    """The method to use when ordering `Similarbytriptypetravelgroup`."""
    orderBy: [SimilarbytriptypetravelgroupsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SimilarbytriptypetravelgroupsEdge
}

"""All input for the `updateTimerangeByNodeId` mutation."""
input UpdateTimerangeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Timerange` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Timerange` being updated.
  """
  patch: TimerangePatch!
}

"""All input for the `updateTimerange` mutation."""
input UpdateTimerangeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Timerange` being updated.
  """
  patch: TimerangePatch!
  id: Int!
}

"""The output of our update `Timerange` mutation."""
type UpdateTimerangePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Timerange` that was updated by this mutation."""
  timerange: Timerange

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Timerange`. May be used by Relay 1."""
  timerangeEdge(
    """The method to use when ordering `Timerange`."""
    orderBy: [TimerangesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TimerangesEdge
}

"""All input for the `updateTouristbidByNodeId` mutation."""
input UpdateTouristbidByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristbid` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristbid` being updated.
  """
  patch: TouristbidPatch!
}

"""All input for the `updateTouristbid` mutation."""
input UpdateTouristbidInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Touristbid` being updated.
  """
  patch: TouristbidPatch!
  id: Int!
}

"""The output of our update `Touristbid` mutation."""
type UpdateTouristbidPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristbid` that was updated by this mutation."""
  touristbid: Touristbid

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristbid`. May be used by Relay 1."""
  touristbidEdge(
    """The method to use when ordering `Touristbid`."""
    orderBy: [TouristbidsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristbidsEdge
}

"""All input for the `updateTouristByNodeId` mutation."""
input UpdateTouristByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tourist` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Tourist` being updated.
  """
  patch: TouristPatch!
}

"""All input for the `updateTouristdealByNodeId` mutation."""
input UpdateTouristdealByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristdeal` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristdeal` being updated.
  """
  patch: TouristdealPatch!
}

"""All input for the `updateTouristdeal` mutation."""
input UpdateTouristdealInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Touristdeal` being updated.
  """
  patch: TouristdealPatch!
  id: Int!
}

"""The output of our update `Touristdeal` mutation."""
type UpdateTouristdealPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristdeal` that was updated by this mutation."""
  touristdeal: Touristdeal

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristdeal`. May be used by Relay 1."""
  touristdealEdge(
    """The method to use when ordering `Touristdeal`."""
    orderBy: [TouristdealsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristdealsEdge
}

"""All input for the `updateTouristfavoriteByNodeId` mutation."""
input UpdateTouristfavoriteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristfavorite` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristfavorite` being updated.
  """
  patch: TouristfavoritePatch!
}

"""All input for the `updateTouristfavorite` mutation."""
input UpdateTouristfavoriteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Touristfavorite` being updated.
  """
  patch: TouristfavoritePatch!
  id: Int!
}

"""The output of our update `Touristfavorite` mutation."""
type UpdateTouristfavoritePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristfavorite` that was updated by this mutation."""
  touristfavorite: Touristfavorite

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristfavorite`. May be used by Relay 1."""
  touristfavoriteEdge(
    """The method to use when ordering `Touristfavorite`."""
    orderBy: [TouristfavoritesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristfavoritesEdge
}

"""All input for the `updateTourist` mutation."""
input UpdateTouristInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Tourist` being updated.
  """
  patch: TouristPatch!
  id: Int!
}

"""All input for the `updateTouristofferByNodeId` mutation."""
input UpdateTouristofferByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristoffer` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristoffer` being updated.
  """
  patch: TouristofferPatch!
}

"""All input for the `updateTouristoffer` mutation."""
input UpdateTouristofferInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Touristoffer` being updated.
  """
  patch: TouristofferPatch!
  id: Int!
}

"""The output of our update `Touristoffer` mutation."""
type UpdateTouristofferPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristoffer` that was updated by this mutation."""
  touristoffer: Touristoffer

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Touristoffer`. May be used by Relay 1."""
  touristofferEdge(
    """The method to use when ordering `Touristoffer`."""
    orderBy: [TouristoffersOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristoffersEdge
}

"""The output of our update `Tourist` mutation."""
type UpdateTouristPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tourist` that was updated by this mutation."""
  tourist: Tourist

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Tourist`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Tourist`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Tourist`."""
  createdBy: Usertable

  """Reads a single `Touristoffer` that is related to this `Tourist`."""
  touristOffer: Touristoffer

  """Reads a single `Touristfavorite` that is related to this `Tourist`."""
  touristFavorite: Touristfavorite

  """Reads a single `Touristbid` that is related to this `Tourist`."""
  touristBid: Touristbid

  """Reads a single `Touristdeal` that is related to this `Tourist`."""
  touristDeal: Touristdeal

  """An edge for our `Tourist`. May be used by Relay 1."""
  touristEdge(
    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristsEdge
}

"""All input for the `updateTouristresourceByNodeId` mutation."""
input UpdateTouristresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristresource` being updated.
  """
  patch: TouristresourcePatch!
}

"""All input for the `updateTouristresource` mutation."""
input UpdateTouristresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Touristresource` being updated.
  """
  patch: TouristresourcePatch!
  id: Int!
}

"""The output of our update `Touristresource` mutation."""
type UpdateTouristresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristresource` that was updated by this mutation."""
  touristresource: Touristresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Touristresource`."""
  contact: Contact

  """Reads a single `Publisher` that is related to this `Touristresource`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Touristresource`."""
  createdBy: Usertable

  """
  Reads a single `Travelgroupresource` that is related to this `Touristresource`.
  """
  travelgroupresourceByAtTravelGroup: Travelgroupresource

  """Reads a single `Agency` that is related to this `Touristresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Touristresource`."""
  guideByAtGuide: Guide

  """Reads a single `Priceinfo` that is related to this `Touristresource`."""
  priceInfo: Priceinfo

  """
  Reads a single `Bookingcalendar` that is related to this `Touristresource`.
  """
  travellingCalendar: Bookingcalendar

  """An edge for our `Touristresource`. May be used by Relay 1."""
  touristresourceEdge(
    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristresourcesEdge
}

"""All input for the `updateTouristreviewByNodeId` mutation."""
input UpdateTouristreviewByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Touristreview` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Touristreview` being updated.
  """
  patch: TouristreviewPatch!
}

"""All input for the `updateTouristreview` mutation."""
input UpdateTouristreviewInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Touristreview` being updated.
  """
  patch: TouristreviewPatch!
  id: Int!
}

"""The output of our update `Touristreview` mutation."""
type UpdateTouristreviewPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Touristreview` that was updated by this mutation."""
  touristreview: Touristreview

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Publisher` that is related to this `Touristreview`."""
  publisher: Publisher

  """Reads a single `Usertable` that is related to this `Touristreview`."""
  createdBy: Usertable

  """Reads a single `Tourist` that is related to this `Touristreview`."""
  touristByTouristIdTarget: Tourist

  """An edge for our `Touristreview`. May be used by Relay 1."""
  touristreviewEdge(
    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TouristreviewsEdge
}

"""All input for the `updateTransportresourceByNodeId` mutation."""
input UpdateTransportresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Transportresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Transportresource` being updated.
  """
  patch: TransportresourcePatch!
}

"""All input for the `updateTransportresource` mutation."""
input UpdateTransportresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Transportresource` being updated.
  """
  patch: TransportresourcePatch!
  id: Int!
}

"""The output of our update `Transportresource` mutation."""
type UpdateTransportresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Transportresource` that was updated by this mutation."""
  transportresource: Transportresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Contact` that is related to this `Transportresource`."""
  contact: Contact

  """
  Reads a single `Publisher` that is related to this `Transportresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Transportresource`.
  """
  createdBy: Usertable

  """Reads a single `Contact` that is related to this `Transportresource`."""
  addressInfo: Contact

  """Reads a single `Agency` that is related to this `Transportresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Transportresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Presentation` that is related to this `Transportresource`.
  """
  presentation: Presentation

  """
  Reads a single `Bookingcalendar` that is related to this `Transportresource`.
  """
  bookingCalendar: Bookingcalendar

  """An edge for our `Transportresource`. May be used by Relay 1."""
  transportresourceEdge(
    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TransportresourcesEdge
}

"""All input for the `updateTravelgroupresourceByNodeId` mutation."""
input UpdateTravelgroupresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Travelgroupresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Travelgroupresource` being updated.
  """
  patch: TravelgroupresourcePatch!
}

"""All input for the `updateTravelgroupresource` mutation."""
input UpdateTravelgroupresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Travelgroupresource` being updated.
  """
  patch: TravelgroupresourcePatch!
  id: Int!
}

"""The output of our update `Travelgroupresource` mutation."""
type UpdateTravelgroupresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Travelgroupresource` that was updated by this mutation."""
  travelgroupresource: Travelgroupresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Contact` that is related to this `Travelgroupresource`.
  """
  contact: Contact

  """
  Reads a single `Publisher` that is related to this `Travelgroupresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Travelgroupresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Bookingcalendar` that is related to this `Travelgroupresource`.
  """
  bookingCalendar: Bookingcalendar

  """Reads a single `Agency` that is related to this `Travelgroupresource`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Travelgroupresource`."""
  guideByAtGuide: Guide

  """
  Reads a single `Tripofferresource` that is related to this `Travelgroupresource`.
  """
  tripofferresourceByAtTripOfferResource: Tripofferresource

  """
  Reads a single `Touristresource` that is related to this `Travelgroupresource`.
  """
  touristresourceByAtTouristResource: Touristresource

  """An edge for our `Travelgroupresource`. May be used by Relay 1."""
  travelgroupresourceEdge(
    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TravelgroupresourcesEdge
}

"""All input for the `updateTripofferresourceByNodeId` mutation."""
input UpdateTripofferresourceByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tripofferresource` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Tripofferresource` being updated.
  """
  patch: TripofferresourcePatch!
}

"""All input for the `updateTripofferresource` mutation."""
input UpdateTripofferresourceInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Tripofferresource` being updated.
  """
  patch: TripofferresourcePatch!
  id: Int!
}

"""The output of our update `Tripofferresource` mutation."""
type UpdateTripofferresourcePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tripofferresource` that was updated by this mutation."""
  tripofferresource: Tripofferresource

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Publisher` that is related to this `Tripofferresource`.
  """
  publisher: Publisher

  """
  Reads a single `Usertable` that is related to this `Tripofferresource`.
  """
  createdBy: Usertable

  """
  Reads a single `Bookingcalendar` that is related to this `Tripofferresource`.
  """
  availableAtCalendar: Bookingcalendar

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideResponsible: Guide

  """Reads a single `Guide` that is related to this `Tripofferresource`."""
  guideSecondary: Guide

  """Reads a single `Agency` that is related to this `Tripofferresource`."""
  agencyByAtAgency: Agency

  """
  Reads a single `Priceinfo` that is related to this `Tripofferresource`.
  """
  priceInfo: Priceinfo

  """An edge for our `Tripofferresource`. May be used by Relay 1."""
  tripofferresourceEdge(
    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TripofferresourcesEdge
}

"""All input for the `updateTriptypeById` mutation."""
input UpdateTriptypeByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Triptype` being updated.
  """
  patch: TriptypePatch!
  id: Int!
}

"""All input for the `updateTriptypeByNodeId` mutation."""
input UpdateTriptypeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Triptype` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Triptype` being updated.
  """
  patch: TriptypePatch!
}

"""All input for the `updateTriptype` mutation."""
input UpdateTriptypeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Triptype` being updated.
  """
  patch: TriptypePatch!
  atAgency: Int!
  tripTypeName: String!
}

"""The output of our update `Triptype` mutation."""
type UpdateTriptypePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Triptype` that was updated by this mutation."""
  triptype: Triptype

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Agency` that is related to this `Triptype`."""
  agencyByAtAgency: Agency

  """An edge for our `Triptype`. May be used by Relay 1."""
  triptypeEdge(
    """The method to use when ordering `Triptype`."""
    orderBy: [TriptypesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TriptypesEdge
}

"""All input for the `updateUsertableById` mutation."""
input UpdateUsertableByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Usertable` being updated.
  """
  patch: UsertablePatch!
  id: Int!
}

"""All input for the `updateUsertableByNodeId` mutation."""
input UpdateUsertableByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Usertable` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Usertable` being updated.
  """
  patch: UsertablePatch!
}

"""All input for the `updateUsertable` mutation."""
input UpdateUsertableInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Usertable` being updated.
  """
  patch: UsertablePatch!
  userEmail: String!
}

"""The output of our update `Usertable` mutation."""
type UpdateUsertablePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Usertable` that was updated by this mutation."""
  usertable: Usertable

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Account` that is related to this `Usertable`."""
  accountById: Account

  """Reads a single `Agency` that is related to this `Usertable`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Usertable`."""
  guideByAtGuide: Guide

  """Reads a single `Tourist` that is related to this `Usertable`."""
  touristByAtTourist: Tourist

  """An edge for our `Usertable`. May be used by Relay 1."""
  usertableEdge(
    """The method to use when ordering `Usertable`."""
    orderBy: [UsertablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsertablesEdge
}

type Usertable implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  firstName: String
  lastName: String
  userEmail: String!
  atAgency: Int
  isAdmin: Boolean
  atGuide: Int
  atTourist: Int
  timeCreated: Datetime
  isActive: Boolean
  isRomanian: Boolean

  """Reads a single `Account` that is related to this `Usertable`."""
  accountById: Account

  """Reads a single `Agency` that is related to this `Usertable`."""
  agencyByAtAgency: Agency

  """Reads a single `Guide` that is related to this `Usertable`."""
  guideByAtGuide: Guide

  """Reads a single `Tourist` that is related to this `Usertable`."""
  touristByAtTourist: Tourist

  """Reads and enables pagination through a set of `Contact`."""
  contactsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Contact`."""
    orderBy: [ContactsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ContactCondition
  ): ContactsConnection!

  """Reads and enables pagination through a set of `Publisher`."""
  publishersByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Publisher`."""
    orderBy: [PublishersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PublisherCondition
  ): PublishersConnection!

  """Reads and enables pagination through a set of `Geocoding`."""
  geocodingsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Geocoding`."""
    orderBy: [GeocodingsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GeocodingCondition
  ): GeocodingsConnection!

  """Reads and enables pagination through a set of `Presentation`."""
  presentationsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Presentation`."""
    orderBy: [PresentationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PresentationCondition
  ): PresentationsConnection!

  """Reads and enables pagination through a set of `Auctioninfo`."""
  auctioninfosByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Auctioninfo`."""
    orderBy: [AuctioninfosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AuctioninfoCondition
  ): AuctioninfosConnection!

  """Reads and enables pagination through a set of `Priceinfo`."""
  priceinfosByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Priceinfo`."""
    orderBy: [PriceinfosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PriceinfoCondition
  ): PriceinfosConnection!

  """Reads and enables pagination through a set of `Bookingcalendar`."""
  bookingcalendarsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Bookingcalendar`."""
    orderBy: [BookingcalendarsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: BookingcalendarCondition
  ): BookingcalendarsConnection!

  """Reads and enables pagination through a set of `Accomodationresource`."""
  accomodationresourcesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Accomodationresource`."""
    orderBy: [AccomodationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AccomodationresourceCondition
  ): AccomodationresourcesConnection!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Destinationresource`."""
  destinationresourcesByLastModifiedBy(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Destinationresource`."""
    orderBy: [DestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DestinationresourceCondition
  ): DestinationresourcesConnection!

  """Reads and enables pagination through a set of `Eventresource`."""
  eventresourcesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Eventresource`."""
    orderBy: [EventresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventresourceCondition
  ): EventresourcesConnection!

  """Reads and enables pagination through a set of `Tripofferresource`."""
  tripofferresourcesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tripofferresource`."""
    orderBy: [TripofferresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TripofferresourceCondition
  ): TripofferresourcesConnection!

  """Reads and enables pagination through a set of `Roomcalendar`."""
  roomcalendarsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Roomcalendar`."""
    orderBy: [RoomcalendarsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: RoomcalendarCondition
  ): RoomcalendarsConnection!

  """Reads and enables pagination through a set of `Transportresource`."""
  transportresourcesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Transportresource`."""
    orderBy: [TransportresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TransportresourceCondition
  ): TransportresourcesConnection!

  """Reads and enables pagination through a set of `Review`."""
  reviewsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Review`."""
    orderBy: [ReviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ReviewCondition
  ): ReviewsConnection!

  """Reads and enables pagination through a set of `Hostresource`."""
  hostresourcesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hostresource`."""
    orderBy: [HostresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HostresourceCondition
  ): HostresourcesConnection!

  """Reads and enables pagination through a set of `Tourist`."""
  touristsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tourist`."""
    orderBy: [TouristsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristCondition
  ): TouristsConnection!

  """Reads and enables pagination through a set of `Languagelevel`."""
  languagelevelsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Languagelevel`."""
    orderBy: [LanguagelevelsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: LanguagelevelCondition
  ): LanguagelevelsConnection!

  """Reads and enables pagination through a set of `Guideresource`."""
  guideresourcesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guideresource`."""
    orderBy: [GuideresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideresourceCondition
  ): GuideresourcesConnection!

  """Reads and enables pagination through a set of `Guide`."""
  guidesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guide`."""
    orderBy: [GuidesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuideCondition
  ): GuidesConnection!

  """Reads and enables pagination through a set of `Agency`."""
  agenciesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agency`."""
    orderBy: [AgenciesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyCondition
  ): AgenciesConnection!

  """Reads and enables pagination through a set of `Touristresource`."""
  touristresourcesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristresource`."""
    orderBy: [TouristresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristresourceCondition
  ): TouristresourcesConnection!

  """Reads and enables pagination through a set of `Travelgroupresource`."""
  travelgroupresourcesByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Travelgroupresource`."""
    orderBy: [TravelgroupresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TravelgroupresourceCondition
  ): TravelgroupresourcesConnection!

  """Reads and enables pagination through a set of `Agencyuser`."""
  agencyusersByUserId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyuser`."""
    orderBy: [AgencyusersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyuserCondition
  ): AgencyusersConnection!

  """
  Reads and enables pagination through a set of `Mediadestinationresource`.
  """
  mediadestinationresourcesByLastModifiedBy(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mediadestinationresource`."""
    orderBy: [MediadestinationresourcesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MediadestinationresourceCondition
  ): MediadestinationresourcesConnection!

  """Reads and enables pagination through a set of `Agencyreview`."""
  agencyreviewsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencyreview`."""
    orderBy: [AgencyreviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencyreviewCondition
  ): AgencyreviewsConnection!

  """Reads and enables pagination through a set of `Guidereview`."""
  guidereviewsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Guidereview`."""
    orderBy: [GuidereviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GuidereviewCondition
  ): GuidereviewsConnection!

  """Reads and enables pagination through a set of `Agencymedialibrary`."""
  agencymedialibrariesByLastModifiedBy(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Agencymedialibrary`."""
    orderBy: [AgencymedialibrariesOrderBy!] = [NATURAL]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AgencymedialibraryCondition
  ): AgencymedialibrariesConnection!

  """Reads and enables pagination through a set of `Touristreview`."""
  touristreviewsByCreatedById(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Touristreview`."""
    orderBy: [TouristreviewsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TouristreviewCondition
  ): TouristreviewsConnection!
}

"""
A condition to be used against `Usertable` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input UsertableCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `userEmail` field."""
  userEmail: String

  """Checks for equality with the object’s `atAgency` field."""
  atAgency: Int

  """Checks for equality with the object’s `atGuide` field."""
  atGuide: Int

  """Checks for equality with the object’s `atTourist` field."""
  atTourist: Int
}

"""An input for mutations affecting `Usertable`"""
input UsertableInput {
  id: Int!
  firstName: String
  lastName: String
  userEmail: String!
  atAgency: Int
  isAdmin: Boolean
  atGuide: Int
  atTourist: Int
  timeCreated: Datetime
  isActive: Boolean
  isRomanian: Boolean
}

"""
Represents an update to a `Usertable`. Fields that are set will be updated.
"""
input UsertablePatch {
  id: Int
  firstName: String
  lastName: String
  userEmail: String
  atAgency: Int
  isAdmin: Boolean
  atGuide: Int
  atTourist: Int
  timeCreated: Datetime
  isActive: Boolean
  isRomanian: Boolean
}

"""A connection to a list of `Usertable` values."""
type UsertablesConnection {
  """A list of `Usertable` objects."""
  nodes: [Usertable!]!

  """
  A list of edges which contains the `Usertable` and cursor to aid in pagination.
  """
  edges: [UsertablesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Usertable` you could get from the connection."""
  totalCount: Int!
}

"""A `Usertable` edge in the connection."""
type UsertablesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Usertable` at the end of the edge."""
  node: Usertable!
}

"""Methods to use when ordering `Usertable`."""
enum UsertablesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_EMAIL_ASC
  USER_EMAIL_DESC
  AT_AGENCY_ASC
  AT_AGENCY_DESC
  AT_GUIDE_ASC
  AT_GUIDE_DESC
  AT_TOURIST_ASC
  AT_TOURIST_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}
